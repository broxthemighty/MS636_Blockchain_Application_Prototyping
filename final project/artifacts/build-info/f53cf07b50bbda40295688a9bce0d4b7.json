{
	"id": "f53cf07b50bbda40295688a9bce0d4b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"final project/General API Marketplace Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title General API Marketplace Token\r\n * @dev Marketplace where users can buy API access with tokens\r\n */\r\n \r\ncontract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable token;\r\n    address public owner;\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n\r\n    struct APIAccess {\r\n        string name;\r\n        uint256 pricePerRequest;\r\n        uint256 totalPurchases;\r\n        bool isActive;\r\n    }\r\n\r\n    struct UserUsage {\r\n        mapping(uint256 => uint256) remainingRequests;\r\n        mapping(uint256 => uint256) subscriptionExpiry;\r\n    }\r\n\r\n    uint256 public apiIdCounter;\r\n    mapping(uint256 => APIAccess) public apis;\r\n    mapping(address => UserUsage) private userUsages;\r\n\r\n    event APIRegistered(uint256 indexed apiId, string name, uint256 pricePerRequest);\r\n    event APIAccessPurchased(address indexed user, uint256 indexed apiId, uint256 requests);\r\n    event APICallMade(address indexed user, uint256 indexed apiId);\r\n    event TokensWithdrawn(address indexed owner, uint256 amount);\r\n    event APIStatusUpdated(uint256 indexed apiId, bool isActive);\r\n    event SubscriptionPurchased(address indexed user, uint256 indexed apiId, uint256 duration);\r\n    event RefundIssued(address indexed user, uint256 indexed apiId, uint256 amount);\r\n\r\n    constructor(IERC20 _token) {\r\n    require(address(_token) != address(0), \"Invalid token address\");\r\n    token = _token;\r\n    owner = msg.sender;\r\n\r\n    _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); \r\n    _grantRole(ADMIN_ROLE, msg.sender);        \r\n}\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    function addAdmin(address _admin) external onlyOwner {\r\n        grantRole(ADMIN_ROLE, _admin);\r\n    }\r\n\r\n    function removeAdmin(address _admin) external onlyOwner {\r\n        revokeRole(ADMIN_ROLE, _admin);\r\n    }\r\n\r\n    function registerAPI(string memory _name, uint256 _pricePerRequest) external onlyAdmin {\r\n        require(bytes(_name).length > 0, \"API name cannot be empty\");\r\n        require(_pricePerRequest > 0, \"Price per request must be greater than zero\");\r\n\r\n        uint256 apiId = apiIdCounter++;\r\n        apis[apiId] = APIAccess({\r\n            name: _name,\r\n            pricePerRequest: _pricePerRequest,\r\n            totalPurchases: 0,\r\n            isActive: true\r\n        });\r\n\r\n        emit APIRegistered(apiId, _name, _pricePerRequest);\r\n    }\r\n\r\n    function setAPIStatus(uint256 _apiId, bool _isActive) external onlyAdmin {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n        apis[_apiId].isActive = _isActive;\r\n\r\n        emit APIStatusUpdated(_apiId, _isActive);\r\n    }\r\n\r\n    function purchaseAPIAccess(uint256 _apiId, uint256 _requests) external {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n        require(_requests > 0, \"Number of requests must be greater than zero\");\r\n\r\n        APIAccess storage api = apis[_apiId];\r\n        require(api.isActive, \"API is not active\");\r\n\r\n        uint256 totalCost = api.pricePerRequest * _requests;\r\n        require(totalCost / _requests == api.pricePerRequest, \"Overflow detected\");\r\n\r\n        token.safeTransferFrom(msg.sender, address(this), totalCost);\r\n        userUsages[msg.sender].remainingRequests[_apiId] += _requests;\r\n        api.totalPurchases += _requests;\r\n\r\n        emit APIAccessPurchased(msg.sender, _apiId, _requests);\r\n    }\r\n\r\n    function purchaseSubscription(uint256 _apiId, uint256 _duration) external {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n\r\n        APIAccess storage api = apis[_apiId];\r\n        require(api.isActive, \"API is not active\");\r\n\r\n        uint256 totalCost = api.pricePerRequest * _duration;\r\n        token.safeTransferFrom(msg.sender, address(this), totalCost);\r\n\r\n        userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp + _duration;\r\n\r\n        emit SubscriptionPurchased(msg.sender, _apiId, _duration);\r\n    }\r\n\r\n    function useAPIAccess(uint256 _apiId) external {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n\r\n        APIAccess storage api = apis[_apiId];\r\n        require(api.isActive, \"API is not active\");\r\n\r\n        uint256 remaining = userUsages[msg.sender].remainingRequests[_apiId];\r\n        require(remaining > 0, \"No remaining API requests\");\r\n\r\n        userUsages[msg.sender].remainingRequests[_apiId] -= 1;\r\n        emit APICallMade(msg.sender, _apiId);\r\n    }\r\n\r\n    function withdrawTokens() external onlyOwner nonReentrant {\r\n        uint256 balance = token.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens to withdraw\");\r\n\r\n        token.safeTransfer(owner, balance);\r\n        emit TokensWithdrawn(owner, balance);\r\n    }\r\n\r\n    function refundUnusedRequests(uint256 _apiId) external {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n        require(!apis[_apiId].isActive, \"API is still active\");\r\n\r\n        uint256 remainingRequests = userUsages[msg.sender].remainingRequests[_apiId];\r\n        require(remainingRequests > 0, \"No requests to refund\");\r\n\r\n        uint256 refundAmount = remainingRequests * apis[_apiId].pricePerRequest;\r\n        userUsages[msg.sender].remainingRequests[_apiId] = 0;\r\n\r\n        token.safeTransfer(msg.sender, refundAmount);\r\n        emit RefundIssued(msg.sender, _apiId, refundAmount);\r\n    }\r\n\r\n    function getRemainingRequests(address _user, uint256 _apiId) external view returns (uint256) {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n        return userUsages[_user].remainingRequests[_apiId];\r\n    }\r\n\r\n    function getSubscriptionStatus(address _user, uint256 _apiId) external view returns (bool) {\r\n        require(_apiId < apiIdCounter, \"API does not exist\");\r\n        return block.timestamp <= userUsages[_user].subscriptionExpiry[_apiId];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 479,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"final project/General API Marketplace Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"final project/General API Marketplace Token.sol": {
				"GeneralApiMarketplaceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requests",
									"type": "uint256"
								}
							],
							"name": "APIAccessPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								}
							],
							"name": "APICallMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pricePerRequest",
									"type": "uint256"
								}
							],
							"name": "APIRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "APIStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefundIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "SubscriptionPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apiIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "apis",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "pricePerRequest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalPurchases",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "getRemainingRequests",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "getSubscriptionStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requests",
									"type": "uint256"
								}
							],
							"name": "purchaseAPIAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "purchaseSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "refundUnusedRequests",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_pricePerRequest",
									"type": "uint256"
								}
							],
							"name": "registerAPI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "removeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_isActive",
									"type": "bool"
								}
							],
							"name": "setAPIStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "useAPIAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Marketplace where users can buy API access with tokens",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "General API Marketplace Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"final project/General API Marketplace Token.sol\":437:6374  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"final project/General API Marketplace Token.sol\":1681:1929  constructor(IERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"final project/General API Marketplace Token.sol\":1750:1751  0 */\n  0x00\n    /* \"final project/General API Marketplace Token.sol\":1723:1752  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"final project/General API Marketplace Token.sol\":1731:1737  _token */\n  dup2\n    /* \"final project/General API Marketplace Token.sol\":1723:1752  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"final project/General API Marketplace Token.sol\":1715:1778  require(address(_token) != address(0), \"Invalid token address\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"final project/General API Marketplace Token.sol\":1793:1799  _token */\n  dup1\n    /* \"final project/General API Marketplace Token.sol\":1785:1799  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"final project/General API Marketplace Token.sol\":1814:1824  msg.sender */\n  caller\n    /* \"final project/General API Marketplace Token.sol\":1806:1811  owner */\n  0x02\n  0x00\n    /* \"final project/General API Marketplace Token.sol\":1806:1824  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"final project/General API Marketplace Token.sol\":1833:1875  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"final project/General API Marketplace Token.sol\":1844:1862  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"final project/General API Marketplace Token.sol\":1864:1874  msg.sender */\n  caller\n    /* \"final project/General API Marketplace Token.sol\":1833:1843  _grantRole */\n  shl(0x20, tag_12)\n    /* \"final project/General API Marketplace Token.sol\":1833:1875  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"final project/General API Marketplace Token.sol\":1883:1917  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"final project/General API Marketplace Token.sol\":1906:1916  msg.sender */\n  caller\n    /* \"final project/General API Marketplace Token.sol\":1883:1893  _grantRole */\n  shl(0x20, tag_12)\n    /* \"final project/General API Marketplace Token.sol\":1883:1917  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"final project/General API Marketplace Token.sol\":1681:1929  constructor(IERC20 _token) {... */\n  pop\n    /* \"final project/General API Marketplace Token.sol\":437:6374  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_41\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_29:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_43\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_30:\n    /* \"#utility.yul\":771:809   */\n  tag_45\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_46:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_31:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_48\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_51\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1118:1237   */\ntag_50:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_52\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1571   */\ntag_32:\n    /* \"#utility.yul\":1486:1497   */\n  0x00\n    /* \"#utility.yul\":1520:1526   */\n  dup3\n    /* \"#utility.yul\":1515:1518   */\n  dup3\n    /* \"#utility.yul\":1508:1527   */\n  mstore\n    /* \"#utility.yul\":1560:1564   */\n  0x20\n    /* \"#utility.yul\":1555:1558   */\n  dup3\n    /* \"#utility.yul\":1551:1565   */\n  add\n    /* \"#utility.yul\":1536:1565   */\n  swap1\n  pop\n    /* \"#utility.yul\":1402:1571   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1577:1748   */\ntag_33:\n    /* \"#utility.yul\":1717:1740   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1713:1714   */\n  0x00\n    /* \"#utility.yul\":1705:1711   */\n  dup3\n    /* \"#utility.yul\":1701:1715   */\n  add\n    /* \"#utility.yul\":1694:1741   */\n  mstore\n    /* \"#utility.yul\":1577:1748   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1754:2120   */\ntag_34:\n    /* \"#utility.yul\":1896:1899   */\n  0x00\n    /* \"#utility.yul\":1917:1984   */\n  tag_56\n    /* \"#utility.yul\":1981:1983   */\n  0x15\n    /* \"#utility.yul\":1976:1979   */\n  dup4\n    /* \"#utility.yul\":1917:1984   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1910:1984   */\n  swap2\n  pop\n    /* \"#utility.yul\":1993:2086   */\n  tag_57\n    /* \"#utility.yul\":2082:2085   */\n  dup3\n    /* \"#utility.yul\":1993:2086   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2111:2113   */\n  0x20\n    /* \"#utility.yul\":2106:2109   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  add\n    /* \"#utility.yul\":2095:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":1754:2120   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2126:2545   */\ntag_10:\n    /* \"#utility.yul\":2292:2296   */\n  0x00\n    /* \"#utility.yul\":2330:2332   */\n  0x20\n    /* \"#utility.yul\":2319:2328   */\n  dup3\n    /* \"#utility.yul\":2315:2333   */\n  add\n    /* \"#utility.yul\":2307:2333   */\n  swap1\n  pop\n    /* \"#utility.yul\":2379:2388   */\n  dup2\n    /* \"#utility.yul\":2373:2377   */\n  dup2\n    /* \"#utility.yul\":2369:2389   */\n  sub\n    /* \"#utility.yul\":2365:2366   */\n  0x00\n    /* \"#utility.yul\":2354:2363   */\n  dup4\n    /* \"#utility.yul\":2350:2367   */\n  add\n    /* \"#utility.yul\":2343:2390   */\n  mstore\n    /* \"#utility.yul\":2407:2538   */\n  tag_59\n    /* \"#utility.yul\":2533:2537   */\n  dup2\n    /* \"#utility.yul\":2407:2538   */\n  tag_34\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2399:2538   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2545   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"final project/General API Marketplace Token.sol\":437:6374  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\ntag_14:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"final project/General API Marketplace Token.sol\":437:6374  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75b238fc\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xaf6e5689\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbc39c0ef\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x75b238fc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x838c0557\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8d1d44a9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8e04d8d8\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x24cce39f\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x24cce39f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x400bb18d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6d177a00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x099952c8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0cd2c460\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1785f53c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":973:1000  uint256 public apiIdCounter */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":6128:6371  function getSubscriptionStatus(address _user, uint256 _apiId) external view returns (bool) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":2309:2414  function removeAdmin(address _admin) external onlyOwner {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":2971:3212  function setAPIStatus(uint256 _apiId, bool _isActive) external onlyAdmin {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":5895:6120  function getRemainingRequests(address _user, uint256 _apiId) external view returns (uint256) {... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":3220:3948  function purchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n    tag_12:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":2200:2301  function addAdmin(address _admin) external onlyOwner {... */\n    tag_13:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":612:672  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":2422:2963  function registerAPI(string memory _name, uint256 _pricePerRequest) external onlyAdmin {... */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":3956:4500  function purchaseSubscription(uint256 _apiId, uint256 _duration) external {... */\n    tag_16:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":4992:5267  function withdrawTokens() external onlyOwner nonReentrant {... */\n    tag_17:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":585:605  address public owner */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":4508:4984  function useAPIAccess(uint256 _apiId) external {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_21:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":1007:1048  mapping(uint256 => APIAccess) public apis */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/General API Marketplace Token.sol\":5275:5887  function refundUnusedRequests(uint256 _apiId) external {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"final project/General API Marketplace Token.sol\":549:578  IERC20 public immutable token */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":973:1000  uint256 public apiIdCounter */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":6128:6371  function getSubscriptionStatus(address _user, uint256 _apiId) external view returns (bool) {... */\n    tag_42:\n        /* \"final project/General API Marketplace Token.sol\":6213:6217  bool */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6247:6259  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":6238:6244  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":6238:6259  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":6230:6282  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"final project/General API Marketplace Token.sol\":6319:6329  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":6319:6336  userUsages[_user] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6330:6335  _user */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":6319:6336  userUsages[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":6319:6355  userUsages[_user].subscriptionExpiry */\n      0x01\n      add\n        /* \"final project/General API Marketplace Token.sol\":6319:6363  userUsages[_user].subscriptionExpiry[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6356:6362  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":6319:6363  userUsages[_user].subscriptionExpiry[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/General API Marketplace Token.sol\":6300:6315  block.timestamp */\n      timestamp\n        /* \"final project/General API Marketplace Token.sol\":6300:6363  block.timestamp <= userUsages[_user].subscriptionExpiry[_apiId] */\n      gt\n      iszero\n        /* \"final project/General API Marketplace Token.sol\":6293:6363  return block.timestamp <= userUsages[_user].subscriptionExpiry[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":6128:6371  function getSubscriptionStatus(address _user, uint256 _apiId) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":2309:2414  function removeAdmin(address _admin) external onlyOwner {... */\n    tag_47:\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":1987:2005  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"final project/General API Marketplace Token.sol\":2007:2017  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":1979:1986  hasRole */\n      tag_98\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_127:\n        /* \"final project/General API Marketplace Token.sol\":1971:2046  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"final project/General API Marketplace Token.sol\":2376:2406  revokeRole(ADMIN_ROLE, _admin) */\n      tag_132\n        /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/General API Marketplace Token.sol\":2399:2405  _admin */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":2376:2386  revokeRole */\n      tag_113\n        /* \"final project/General API Marketplace Token.sol\":2376:2406  revokeRole(ADMIN_ROLE, _admin) */\n      jump\t// in\n    tag_132:\n        /* \"final project/General API Marketplace Token.sol\":2309:2414  function removeAdmin(address _admin) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":2971:3212  function setAPIStatus(uint256 _apiId, bool _isActive) external onlyAdmin {... */\n    tag_57:\n        /* \"final project/General API Marketplace Token.sol\":2114:2145  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_135\n        /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/General API Marketplace Token.sol\":2134:2144  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":2114:2121  hasRole */\n      tag_98\n        /* \"final project/General API Marketplace Token.sol\":2114:2145  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_135:\n        /* \"final project/General API Marketplace Token.sol\":2106:2172  require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"final project/General API Marketplace Token.sol\":3072:3084  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":3063:3069  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3063:3084  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":3055:3107  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_125\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"final project/General API Marketplace Token.sol\":3142:3151  _isActive */\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":3118:3122  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":3118:3130  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3123:3129  _apiId */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":3118:3130  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":3118:3139  apis[_apiId].isActive */\n      0x03\n      add\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3118:3151  apis[_apiId].isActive = _isActive */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3186:3192  _apiId */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":3169:3204  APIStatusUpdated(_apiId, _isActive) */\n      0x33446694866e808b8c5250f584345f59832e7a6f29e30bf7a8ead78441940d9e\n        /* \"final project/General API Marketplace Token.sol\":3194:3203  _isActive */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3169:3204  APIStatusUpdated(_apiId, _isActive) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"final project/General API Marketplace Token.sol\":2971:3212  function setAPIStatus(uint256 _apiId, bool _isActive) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_154:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":5895:6120  function getRemainingRequests(address _user, uint256 _apiId) external view returns (uint256) {... */\n    tag_67:\n        /* \"final project/General API Marketplace Token.sol\":5979:5986  uint256 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6016:6028  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":6007:6013  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":6007:6028  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":5999:6051  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_125\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"final project/General API Marketplace Token.sol\":6069:6079  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":6069:6086  userUsages[_user] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6080:6085  _user */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":6069:6086  userUsages[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":6069:6104  userUsages[_user].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":6069:6112  userUsages[_user].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":6105:6111  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":6069:6112  userUsages[_user].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/General API Marketplace Token.sol\":6062:6112  return userUsages[_user].remainingRequests[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5895:6120  function getRemainingRequests(address _user, uint256 _apiId) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":3220:3948  function purchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n    tag_72:\n        /* \"final project/General API Marketplace Token.sol\":3319:3331  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":3310:3316  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3310:3331  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":3302:3354  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_125\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"final project/General API Marketplace Token.sol\":3385:3386  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3373:3382  _requests */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":3373:3386  _requests > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":3365:3435  require(_requests > 0, \"Number of requests must be greater than zero\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"final project/General API Marketplace Token.sol\":3448:3469  APIAccess storage api */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3472:3476  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":3472:3484  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3477:3483  _apiId */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":3472:3484  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":3448:3484  APIAccess storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3503:3506  api */\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":3503:3515  api.isActive */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/General API Marketplace Token.sol\":3495:3537  require(api.isActive, \"API is not active\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"final project/General API Marketplace Token.sol\":3550:3567  uint256 totalCost */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3592:3601  _requests */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3570:3573  api */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3570:3589  api.pricePerRequest */\n      0x01\n      add\n      sload\n        /* \"final project/General API Marketplace Token.sol\":3570:3601  api.pricePerRequest * _requests */\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"final project/General API Marketplace Token.sol\":3550:3601  uint256 totalCost = api.pricePerRequest * _requests */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3645:3648  api */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":3645:3664  api.pricePerRequest */\n      0x01\n      add\n      sload\n        /* \"final project/General API Marketplace Token.sol\":3632:3641  _requests */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":3620:3629  totalCost */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3620:3641  totalCost / _requests */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"final project/General API Marketplace Token.sol\":3620:3664  totalCost / _requests == api.pricePerRequest */\n      eq\n        /* \"final project/General API Marketplace Token.sol\":3612:3686  require(totalCost / _requests == api.pricePerRequest, \"Overflow detected\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"final project/General API Marketplace Token.sol\":3699:3759  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      tag_175\n        /* \"final project/General API Marketplace Token.sol\":3722:3732  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":3742:3746  this */\n      address\n        /* \"final project/General API Marketplace Token.sol\":3749:3758  totalCost */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":3699:3704  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/General API Marketplace Token.sol\":3699:3721  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"final project/General API Marketplace Token.sol\":3699:3759  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"final project/General API Marketplace Token.sol\":3822:3831  _requests */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3770:3780  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":3770:3792  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3781:3791  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":3770:3792  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":3770:3810  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":3770:3818  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3811:3817  _apiId */\n      dup7\n        /* \"final project/General API Marketplace Token.sol\":3770:3818  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3770:3831  userUsages[msg.sender].remainingRequests[_apiId] += _requests */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3864:3873  _requests */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3842:3845  api */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":3842:3860  api.totalPurchases */\n      0x02\n      add\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":3842:3873  api.totalPurchases += _requests */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_179:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3922:3928  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":3910:3920  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":3891:3940  APIAccessPurchased(msg.sender, _apiId, _requests) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b\n        /* \"final project/General API Marketplace Token.sol\":3930:3939  _requests */\n      dup6\n        /* \"final project/General API Marketplace Token.sol\":3891:3940  APIAccessPurchased(msg.sender, _apiId, _requests) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/General API Marketplace Token.sol\":3291:3948  {... */\n      pop\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3220:3948  function purchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":2200:2301  function addAdmin(address _admin) external onlyOwner {... */\n    tag_75:\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":1987:2005  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"final project/General API Marketplace Token.sol\":2007:2017  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":1979:1986  hasRole */\n      tag_98\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_182:\n        /* \"final project/General API Marketplace Token.sol\":1971:2046  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_130\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"final project/General API Marketplace Token.sol\":2264:2293  grantRole(ADMIN_ROLE, _admin) */\n      tag_186\n        /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/General API Marketplace Token.sol\":2286:2292  _admin */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":2264:2273  grantRole */\n      tag_61\n        /* \"final project/General API Marketplace Token.sol\":2264:2293  grantRole(ADMIN_ROLE, _admin) */\n      jump\t// in\n    tag_186:\n        /* \"final project/General API Marketplace Token.sol\":2200:2301  function addAdmin(address _admin) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":612:672  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_77:\n        /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/General API Marketplace Token.sol\":612:672  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":2422:2963  function registerAPI(string memory _name, uint256 _pricePerRequest) external onlyAdmin {... */\n    tag_82:\n        /* \"final project/General API Marketplace Token.sol\":2114:2145  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_188\n        /* \"final project/General API Marketplace Token.sol\":649:672  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/General API Marketplace Token.sol\":2134:2144  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":2114:2121  hasRole */\n      tag_98\n        /* \"final project/General API Marketplace Token.sol\":2114:2145  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_188:\n        /* \"final project/General API Marketplace Token.sol\":2106:2172  require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_138\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"final project/General API Marketplace Token.sol\":2550:2551  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2534:2539  _name */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":2528:2547  bytes(_name).length */\n      mload\n        /* \"final project/General API Marketplace Token.sol\":2528:2551  bytes(_name).length > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":2520:2580  require(bytes(_name).length > 0, \"API name cannot be empty\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"final project/General API Marketplace Token.sol\":2618:2619  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2599:2615  _pricePerRequest */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":2599:2619  _pricePerRequest > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":2591:2667  require(_pricePerRequest > 0, \"Price per request must be greater than zero\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"final project/General API Marketplace Token.sol\":2680:2693  uint256 apiId */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2696:2708  apiIdCounter */\n      0x03\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2696:2710  apiIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"final project/General API Marketplace Token.sol\":2680:2710  uint256 apiId = apiIdCounter++ */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":2735:2892  APIAccess({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":2766:2771  _name */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":2735:2892  APIAccess({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/General API Marketplace Token.sol\":2803:2819  _pricePerRequest */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":2735:2892  APIAccess({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/General API Marketplace Token.sol\":2850:2851  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2735:2892  APIAccess({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/General API Marketplace Token.sol\":2876:2880  true */\n      0x01\n        /* \"final project/General API Marketplace Token.sol\":2735:2892  APIAccess({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":2721:2725  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":2721:2732  apis[apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":2726:2731  apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":2721:2732  apis[apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":2721:2892  apis[apiId] = APIAccess({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"final project/General API Marketplace Token.sol\":2924:2929  apiId */\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":2910:2955  APIRegistered(apiId, _name, _pricePerRequest) */\n      0x708b6915aad37cd1d491e64bf7a3b53c298499411a09f4b2315e30da638b5de2\n        /* \"final project/General API Marketplace Token.sol\":2931:2936  _name */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":2938:2954  _pricePerRequest */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":2910:2955  APIRegistered(apiId, _name, _pricePerRequest) */\n      mload(0x40)\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"final project/General API Marketplace Token.sol\":2509:2963  {... */\n      pop\n        /* \"final project/General API Marketplace Token.sol\":2422:2963  function registerAPI(string memory _name, uint256 _pricePerRequest) external onlyAdmin {... */\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":3956:4500  function purchaseSubscription(uint256 _apiId, uint256 _duration) external {... */\n    tag_85:\n        /* \"final project/General API Marketplace Token.sol\":4058:4070  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":4049:4055  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":4049:4070  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":4041:4093  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_125\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"final project/General API Marketplace Token.sol\":4106:4127  APIAccess storage api */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4130:4134  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":4130:4142  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4135:4141  _apiId */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":4130:4142  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4106:4142  APIAccess storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4161:4164  api */\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":4161:4173  api.isActive */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/General API Marketplace Token.sol\":4153:4195  require(api.isActive, \"API is not active\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"final project/General API Marketplace Token.sol\":4208:4225  uint256 totalCost */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4250:4259  _duration */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":4228:4231  api */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":4228:4247  api.pricePerRequest */\n      0x01\n      add\n      sload\n        /* \"final project/General API Marketplace Token.sol\":4228:4259  api.pricePerRequest * _duration */\n      tag_209\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_209:\n        /* \"final project/General API Marketplace Token.sol\":4208:4259  uint256 totalCost = api.pricePerRequest * _duration */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4270:4330  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      tag_210\n        /* \"final project/General API Marketplace Token.sol\":4293:4303  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4313:4317  this */\n      address\n        /* \"final project/General API Marketplace Token.sol\":4320:4329  totalCost */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":4270:4275  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/General API Marketplace Token.sol\":4270:4292  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_176\n      swap1\n        /* \"final project/General API Marketplace Token.sol\":4270:4330  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"final project/General API Marketplace Token.sol\":4413:4422  _duration */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":4395:4410  block.timestamp */\n      timestamp\n        /* \"final project/General API Marketplace Token.sol\":4395:4422  block.timestamp + _duration */\n      tag_211\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_211:\n        /* \"final project/General API Marketplace Token.sol\":4343:4353  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":4343:4365  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4354:4364  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4343:4365  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4343:4384  userUsages[msg.sender].subscriptionExpiry */\n      0x01\n      add\n        /* \"final project/General API Marketplace Token.sol\":4343:4392  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4385:4391  _apiId */\n      dup7\n        /* \"final project/General API Marketplace Token.sol\":4343:4392  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4343:4422  userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp + _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4474:4480  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":4462:4472  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4440:4492  SubscriptionPurchased(msg.sender, _apiId, _duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03\n        /* \"final project/General API Marketplace Token.sol\":4482:4491  _duration */\n      dup6\n        /* \"final project/General API Marketplace Token.sol\":4440:4492  SubscriptionPurchased(msg.sender, _apiId, _duration) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/General API Marketplace Token.sol\":4030:4500  {... */\n      pop\n      pop\n        /* \"final project/General API Marketplace Token.sol\":3956:4500  function purchaseSubscription(uint256 _apiId, uint256 _duration) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":4992:5267  function withdrawTokens() external onlyOwner nonReentrant {... */\n    tag_87:\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":1987:2005  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"final project/General API Marketplace Token.sol\":2007:2017  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":1979:1986  hasRole */\n      tag_98\n        /* \"final project/General API Marketplace Token.sol\":1979:2018  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_214:\n        /* \"final project/General API Marketplace Token.sol\":1971:2046  require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not the owner\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_130\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_218\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_219\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"final project/General API Marketplace Token.sol\":5061:5076  uint256 balance */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5079:5084  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/General API Marketplace Token.sol\":5079:5094  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"final project/General API Marketplace Token.sol\":5103:5107  this */\n      address\n        /* \"final project/General API Marketplace Token.sol\":5079:5109  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"final project/General API Marketplace Token.sol\":5061:5109  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5138:5139  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5128:5135  balance */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":5128:5139  balance > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":5120:5165  require(balance > 0, \"No tokens to withdraw\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"final project/General API Marketplace Token.sol\":5178:5212  token.safeTransfer(owner, balance) */\n      tag_229\n        /* \"final project/General API Marketplace Token.sol\":5197:5202  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"final project/General API Marketplace Token.sol\":5204:5211  balance */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5178:5183  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/General API Marketplace Token.sol\":5178:5196  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"final project/General API Marketplace Token.sol\":5178:5212  token.safeTransfer(owner, balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"final project/General API Marketplace Token.sol\":5244:5249  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"final project/General API Marketplace Token.sol\":5228:5259  TokensWithdrawn(owner, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b\n        /* \"final project/General API Marketplace Token.sol\":5251:5258  balance */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5228:5259  TokensWithdrawn(owner, balance) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"final project/General API Marketplace Token.sol\":5050:5267  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_232:\n        /* \"final project/General API Marketplace Token.sol\":4992:5267  function withdrawTokens() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":585:605  address public owner */\n    tag_89:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":4508:4984  function useAPIAccess(uint256 _apiId) external {... */\n    tag_95:\n        /* \"final project/General API Marketplace Token.sol\":4583:4595  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":4574:4580  _apiId */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":4574:4595  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":4566:4618  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_125\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"final project/General API Marketplace Token.sol\":4631:4652  APIAccess storage api */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4655:4659  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":4655:4667  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4660:4666  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":4655:4667  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4631:4667  APIAccess storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4686:4689  api */\n      dup1\n        /* \"final project/General API Marketplace Token.sol\":4686:4698  api.isActive */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/General API Marketplace Token.sol\":4678:4720  require(api.isActive, \"API is not active\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_167\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"final project/General API Marketplace Token.sol\":4733:4750  uint256 remaining */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4753:4763  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":4753:4775  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4764:4774  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4753:4775  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4753:4793  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":4753:4801  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4794:4800  _apiId */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":4753:4801  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/General API Marketplace Token.sol\":4733:4801  uint256 remaining = userUsages[msg.sender].remainingRequests[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4832:4833  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4820:4829  remaining */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":4820:4833  remaining > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":4812:4863  require(remaining > 0, \"No remaining API requests\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"final project/General API Marketplace Token.sol\":4928:4929  1 */\n      0x01\n        /* \"final project/General API Marketplace Token.sol\":4876:4886  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":4876:4898  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4887:4897  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4876:4898  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":4876:4916  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":4876:4924  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4917:4923  _apiId */\n      dup6\n        /* \"final project/General API Marketplace Token.sol\":4876:4924  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":4876:4929  userUsages[msg.sender].remainingRequests[_apiId] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4969:4975  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":4957:4967  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":4945:4976  APICallMade(msg.sender, _apiId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7598affe5bb8b864e84f0b819f6b046054c8f0d6771e8ae086411b5dd2a8bc12\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/General API Marketplace Token.sol\":4555:4984  {... */\n      pop\n      pop\n        /* \"final project/General API Marketplace Token.sol\":4508:4984  function useAPIAccess(uint256 _apiId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":1007:1048  mapping(uint256 => APIAccess) public apis */\n    tag_105:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_246\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":5275:5887  function refundUnusedRequests(uint256 _apiId) external {... */\n    tag_110:\n        /* \"final project/General API Marketplace Token.sol\":5358:5370  apiIdCounter */\n      sload(0x03)\n        /* \"final project/General API Marketplace Token.sol\":5349:5355  _apiId */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":5349:5370  _apiId < apiIdCounter */\n      lt\n        /* \"final project/General API Marketplace Token.sol\":5341:5393  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_125\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"final project/General API Marketplace Token.sol\":5413:5417  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":5413:5425  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5418:5424  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5413:5425  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":5413:5434  apis[_apiId].isActive */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/General API Marketplace Token.sol\":5412:5434  !apis[_apiId].isActive */\n      iszero\n        /* \"final project/General API Marketplace Token.sol\":5404:5458  require(!apis[_apiId].isActive, \"API is still active\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"final project/General API Marketplace Token.sol\":5471:5496  uint256 remainingRequests */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5499:5509  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":5499:5521  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5510:5520  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":5499:5521  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":5499:5539  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":5499:5547  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5540:5546  _apiId */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":5499:5547  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/General API Marketplace Token.sol\":5471:5547  uint256 remainingRequests = userUsages[msg.sender].remainingRequests[_apiId] */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5586:5587  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5566:5583  remainingRequests */\n      dup2\n        /* \"final project/General API Marketplace Token.sol\":5566:5587  remainingRequests > 0 */\n      gt\n        /* \"final project/General API Marketplace Token.sol\":5558:5613  require(remainingRequests > 0, \"No requests to refund\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"final project/General API Marketplace Token.sol\":5626:5646  uint256 refundAmount */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5669:5673  apis */\n      0x04\n        /* \"final project/General API Marketplace Token.sol\":5669:5681  apis[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5674:5680  _apiId */\n      dup5\n        /* \"final project/General API Marketplace Token.sol\":5669:5681  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":5669:5697  apis[_apiId].pricePerRequest */\n      0x01\n      add\n      sload\n        /* \"final project/General API Marketplace Token.sol\":5649:5666  remainingRequests */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5649:5697  remainingRequests * apis[_apiId].pricePerRequest */\n      tag_260\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_260:\n        /* \"final project/General API Marketplace Token.sol\":5626:5697  uint256 refundAmount = remainingRequests * apis[_apiId].pricePerRequest */\n      swap1\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5759:5760  0 */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5708:5718  userUsages */\n      0x05\n        /* \"final project/General API Marketplace Token.sol\":5708:5730  userUsages[msg.sender] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5719:5729  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":5708:5730  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":5708:5748  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/General API Marketplace Token.sol\":5708:5756  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/General API Marketplace Token.sol\":5749:5755  _apiId */\n      dup6\n        /* \"final project/General API Marketplace Token.sol\":5708:5756  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/General API Marketplace Token.sol\":5708:5760  userUsages[msg.sender].remainingRequests[_apiId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5773:5817  token.safeTransfer(msg.sender, refundAmount) */\n      tag_261\n        /* \"final project/General API Marketplace Token.sol\":5792:5802  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":5804:5816  refundAmount */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5773:5778  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/General API Marketplace Token.sol\":5773:5791  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"final project/General API Marketplace Token.sol\":5773:5817  token.safeTransfer(msg.sender, refundAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"final project/General API Marketplace Token.sol\":5858:5864  _apiId */\n      dup3\n        /* \"final project/General API Marketplace Token.sol\":5846:5856  msg.sender */\n      caller\n        /* \"final project/General API Marketplace Token.sol\":5833:5879  RefundIssued(msg.sender, _apiId, refundAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x93c496f36ecab5f5583f216646cac3acb12a63aeacddb1a9251ceb81f0ee36e7\n        /* \"final project/General API Marketplace Token.sol\":5866:5878  refundAmount */\n      dup4\n        /* \"final project/General API Marketplace Token.sol\":5833:5879  RefundIssued(msg.sender, _apiId, refundAmount) */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/General API Marketplace Token.sol\":5330:5887  {... */\n      pop\n      pop\n        /* \"final project/General API Marketplace Token.sol\":5275:5887  function refundUnusedRequests(uint256 _apiId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_267:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"final project/General API Marketplace Token.sol\":549:578  IERC20 public immutable token */\n    tag_115:\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_270\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_273)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_273:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_279)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_279:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_295\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_299\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap3\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_306)\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_309:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_310:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_311:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_312:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_313:\n        /* \"#utility.yul\":561:584   */\n      tag_401\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_312\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_402:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_314:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_404\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_313\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_407\n      tag_310\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":833:952   */\n    tag_406:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_408\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_314\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_315:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_316:\n        /* \"#utility.yul\":1268:1289   */\n      tag_411\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_315\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_413\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_316\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_317:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_318:\n        /* \"#utility.yul\":1688:1712   */\n      tag_416\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_317\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_38:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_418\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_318\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2079   */\n    tag_319:\n        /* \"#utility.yul\":1990:1997   */\n      0x00\n        /* \"#utility.yul\":2030:2072   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2073   */\n      and\n        /* \"#utility.yul\":2008:2073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2181   */\n    tag_320:\n        /* \"#utility.yul\":2122:2129   */\n      0x00\n        /* \"#utility.yul\":2151:2175   */\n      tag_421\n        /* \"#utility.yul\":2169:2174   */\n      dup3\n        /* \"#utility.yul\":2151:2175   */\n      tag_319\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2140:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2085:2181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2309   */\n    tag_321:\n        /* \"#utility.yul\":2260:2284   */\n      tag_423\n        /* \"#utility.yul\":2278:2283   */\n      dup2\n        /* \"#utility.yul\":2260:2284   */\n      tag_320\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2250:2285   */\n      eq\n        /* \"#utility.yul\":2240:2303   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2299:2300   */\n      0x00\n        /* \"#utility.yul\":2296:2297   */\n      dup1\n        /* \"#utility.yul\":2289:2301   */\n      revert\n        /* \"#utility.yul\":2240:2303   */\n    tag_424:\n        /* \"#utility.yul\":2187:2309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2454   */\n    tag_322:\n        /* \"#utility.yul\":2361:2366   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup2\n        /* \"#utility.yul\":2386:2406   */\n      calldataload\n        /* \"#utility.yul\":2377:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2415:2448   */\n      tag_426\n        /* \"#utility.yul\":2442:2447   */\n      dup2\n        /* \"#utility.yul\":2415:2448   */\n      tag_321\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2315:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2582   */\n    tag_323:\n        /* \"#utility.yul\":2533:2557   */\n      tag_428\n        /* \"#utility.yul\":2551:2556   */\n      dup2\n        /* \"#utility.yul\":2533:2557   */\n      tag_317\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2526:2531   */\n      dup2\n        /* \"#utility.yul\":2523:2558   */\n      eq\n        /* \"#utility.yul\":2513:2576   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2513:2576   */\n    tag_429:\n        /* \"#utility.yul\":2460:2582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2588:2727   */\n    tag_324:\n        /* \"#utility.yul\":2634:2639   */\n      0x00\n        /* \"#utility.yul\":2672:2678   */\n      dup2\n        /* \"#utility.yul\":2659:2679   */\n      calldataload\n        /* \"#utility.yul\":2650:2679   */\n      swap1\n      pop\n        /* \"#utility.yul\":2688:2721   */\n      tag_431\n        /* \"#utility.yul\":2715:2720   */\n      dup2\n        /* \"#utility.yul\":2688:2721   */\n      tag_323\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2588:2727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:3207   */\n    tag_41:\n        /* \"#utility.yul\":2801:2807   */\n      0x00\n        /* \"#utility.yul\":2809:2815   */\n      dup1\n        /* \"#utility.yul\":2858:2860   */\n      0x40\n        /* \"#utility.yul\":2846:2855   */\n      dup4\n        /* \"#utility.yul\":2837:2844   */\n      dup6\n        /* \"#utility.yul\":2833:2856   */\n      sub\n        /* \"#utility.yul\":2829:2861   */\n      slt\n        /* \"#utility.yul\":2826:2945   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2864:2943   */\n      tag_434\n      tag_310\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":2826:2945   */\n    tag_433:\n        /* \"#utility.yul\":2984:2985   */\n      0x00\n        /* \"#utility.yul\":3009:3062   */\n      tag_435\n        /* \"#utility.yul\":3054:3061   */\n      dup6\n        /* \"#utility.yul\":3045:3051   */\n      dup3\n        /* \"#utility.yul\":3034:3043   */\n      dup7\n        /* \"#utility.yul\":3030:3052   */\n      add\n        /* \"#utility.yul\":3009:3062   */\n      tag_322\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2999:3062   */\n      swap3\n      pop\n        /* \"#utility.yul\":2955:3072   */\n      pop\n        /* \"#utility.yul\":3111:3113   */\n      0x20\n        /* \"#utility.yul\":3137:3190   */\n      tag_436\n        /* \"#utility.yul\":3182:3189   */\n      dup6\n        /* \"#utility.yul\":3173:3179   */\n      dup3\n        /* \"#utility.yul\":3162:3171   */\n      dup7\n        /* \"#utility.yul\":3158:3180   */\n      add\n        /* \"#utility.yul\":3137:3190   */\n      tag_324\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3127:3190   */\n      swap2\n      pop\n        /* \"#utility.yul\":3082:3200   */\n      pop\n        /* \"#utility.yul\":2733:3207   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_46:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_439\n      tag_310\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3289:3408   */\n    tag_438:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_440\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_322\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_325:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3753   */\n    tag_326:\n        /* \"#utility.yul\":3704:3728   */\n      tag_443\n        /* \"#utility.yul\":3722:3727   */\n      dup2\n        /* \"#utility.yul\":3704:3728   */\n      tag_325\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3697:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3729   */\n      eq\n        /* \"#utility.yul\":3684:3747   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3740:3741   */\n      dup1\n        /* \"#utility.yul\":3733:3745   */\n      revert\n        /* \"#utility.yul\":3684:3747   */\n    tag_444:\n        /* \"#utility.yul\":3631:3753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:3898   */\n    tag_327:\n        /* \"#utility.yul\":3805:3810   */\n      0x00\n        /* \"#utility.yul\":3843:3849   */\n      dup2\n        /* \"#utility.yul\":3830:3850   */\n      calldataload\n        /* \"#utility.yul\":3821:3850   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3892   */\n      tag_446\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3859:3892   */\n      tag_326\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3759:3898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4233   */\n    tag_50:\n        /* \"#utility.yul\":3963:3969   */\n      0x00\n        /* \"#utility.yul\":4012:4014   */\n      0x20\n        /* \"#utility.yul\":4000:4009   */\n      dup3\n        /* \"#utility.yul\":3991:3998   */\n      dup5\n        /* \"#utility.yul\":3987:4010   */\n      sub\n        /* \"#utility.yul\":3983:4015   */\n      slt\n        /* \"#utility.yul\":3980:4099   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4018:4097   */\n      tag_449\n      tag_310\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":3980:4099   */\n    tag_448:\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4163:4216   */\n      tag_450\n        /* \"#utility.yul\":4208:4215   */\n      dup5\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup6\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_327\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4109:4226   */\n      pop\n        /* \"#utility.yul\":3904:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4357   */\n    tag_328:\n        /* \"#utility.yul\":4326:4350   */\n      tag_452\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4326:4350   */\n      tag_325\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4321:4324   */\n      dup3\n        /* \"#utility.yul\":4314:4351   */\n      mstore\n        /* \"#utility.yul\":4239:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4585   */\n    tag_53:\n        /* \"#utility.yul\":4456:4460   */\n      0x00\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4483:4492   */\n      dup3\n        /* \"#utility.yul\":4479:4497   */\n      add\n        /* \"#utility.yul\":4471:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4578   */\n      tag_454\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4578   */\n      tag_328\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4363:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4707   */\n    tag_329:\n        /* \"#utility.yul\":4661:4682   */\n      tag_456\n        /* \"#utility.yul\":4676:4681   */\n      dup2\n        /* \"#utility.yul\":4661:4682   */\n      tag_315\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4654:4659   */\n      dup2\n        /* \"#utility.yul\":4651:4683   */\n      eq\n        /* \"#utility.yul\":4641:4701   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":4697:4698   */\n      0x00\n        /* \"#utility.yul\":4694:4695   */\n      dup1\n        /* \"#utility.yul\":4687:4699   */\n      revert\n        /* \"#utility.yul\":4641:4701   */\n    tag_457:\n        /* \"#utility.yul\":4591:4707   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4713:4846   */\n    tag_330:\n        /* \"#utility.yul\":4756:4761   */\n      0x00\n        /* \"#utility.yul\":4794:4800   */\n      dup2\n        /* \"#utility.yul\":4781:4801   */\n      calldataload\n        /* \"#utility.yul\":4772:4801   */\n      swap1\n      pop\n        /* \"#utility.yul\":4810:4840   */\n      tag_459\n        /* \"#utility.yul\":4834:4839   */\n      dup2\n        /* \"#utility.yul\":4810:4840   */\n      tag_329\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4713:4846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4852:5320   */\n    tag_56:\n        /* \"#utility.yul\":4917:4923   */\n      0x00\n        /* \"#utility.yul\":4925:4931   */\n      dup1\n        /* \"#utility.yul\":4974:4976   */\n      0x40\n        /* \"#utility.yul\":4962:4971   */\n      dup4\n        /* \"#utility.yul\":4953:4960   */\n      dup6\n        /* \"#utility.yul\":4949:4972   */\n      sub\n        /* \"#utility.yul\":4945:4977   */\n      slt\n        /* \"#utility.yul\":4942:5061   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":4980:5059   */\n      tag_462\n      tag_310\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4942:5061   */\n    tag_461:\n        /* \"#utility.yul\":5100:5101   */\n      0x00\n        /* \"#utility.yul\":5125:5178   */\n      tag_463\n        /* \"#utility.yul\":5170:5177   */\n      dup6\n        /* \"#utility.yul\":5161:5167   */\n      dup3\n        /* \"#utility.yul\":5150:5159   */\n      dup7\n        /* \"#utility.yul\":5146:5168   */\n      add\n        /* \"#utility.yul\":5125:5178   */\n      tag_324\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5115:5178   */\n      swap3\n      pop\n        /* \"#utility.yul\":5071:5188   */\n      pop\n        /* \"#utility.yul\":5227:5229   */\n      0x20\n        /* \"#utility.yul\":5253:5303   */\n      tag_464\n        /* \"#utility.yul\":5295:5302   */\n      dup6\n        /* \"#utility.yul\":5286:5292   */\n      dup3\n        /* \"#utility.yul\":5275:5284   */\n      dup7\n        /* \"#utility.yul\":5271:5293   */\n      add\n        /* \"#utility.yul\":5253:5303   */\n      tag_330\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5243:5303   */\n      swap2\n      pop\n        /* \"#utility.yul\":5198:5313   */\n      pop\n        /* \"#utility.yul\":4852:5320   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5326:5800   */\n    tag_60:\n        /* \"#utility.yul\":5394:5400   */\n      0x00\n        /* \"#utility.yul\":5402:5408   */\n      dup1\n        /* \"#utility.yul\":5451:5453   */\n      0x40\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5430:5437   */\n      dup6\n        /* \"#utility.yul\":5426:5449   */\n      sub\n        /* \"#utility.yul\":5422:5454   */\n      slt\n        /* \"#utility.yul\":5419:5538   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":5457:5536   */\n      tag_467\n      tag_310\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5419:5538   */\n    tag_466:\n        /* \"#utility.yul\":5577:5578   */\n      0x00\n        /* \"#utility.yul\":5602:5655   */\n      tag_468\n        /* \"#utility.yul\":5647:5654   */\n      dup6\n        /* \"#utility.yul\":5638:5644   */\n      dup3\n        /* \"#utility.yul\":5627:5636   */\n      dup7\n        /* \"#utility.yul\":5623:5645   */\n      add\n        /* \"#utility.yul\":5602:5655   */\n      tag_327\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5592:5655   */\n      swap3\n      pop\n        /* \"#utility.yul\":5548:5665   */\n      pop\n        /* \"#utility.yul\":5704:5706   */\n      0x20\n        /* \"#utility.yul\":5730:5783   */\n      tag_469\n        /* \"#utility.yul\":5775:5782   */\n      dup6\n        /* \"#utility.yul\":5766:5772   */\n      dup3\n        /* \"#utility.yul\":5755:5764   */\n      dup7\n        /* \"#utility.yul\":5751:5773   */\n      add\n        /* \"#utility.yul\":5730:5783   */\n      tag_322\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5720:5783   */\n      swap2\n      pop\n        /* \"#utility.yul\":5675:5793   */\n      pop\n        /* \"#utility.yul\":5326:5800   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5806:6280   */\n    tag_71:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5931:5933   */\n      0x40\n        /* \"#utility.yul\":5919:5928   */\n      dup4\n        /* \"#utility.yul\":5910:5917   */\n      dup6\n        /* \"#utility.yul\":5906:5929   */\n      sub\n        /* \"#utility.yul\":5902:5934   */\n      slt\n        /* \"#utility.yul\":5899:6018   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5937:6016   */\n      tag_472\n      tag_310\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5899:6018   */\n    tag_471:\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6082:6135   */\n      tag_473\n        /* \"#utility.yul\":6127:6134   */\n      dup6\n        /* \"#utility.yul\":6118:6124   */\n      dup3\n        /* \"#utility.yul\":6107:6116   */\n      dup7\n        /* \"#utility.yul\":6103:6125   */\n      add\n        /* \"#utility.yul\":6082:6135   */\n      tag_324\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6072:6135   */\n      swap3\n      pop\n        /* \"#utility.yul\":6028:6145   */\n      pop\n        /* \"#utility.yul\":6184:6186   */\n      0x20\n        /* \"#utility.yul\":6210:6263   */\n      tag_474\n        /* \"#utility.yul\":6255:6262   */\n      dup6\n        /* \"#utility.yul\":6246:6252   */\n      dup3\n        /* \"#utility.yul\":6235:6244   */\n      dup7\n        /* \"#utility.yul\":6231:6253   */\n      add\n        /* \"#utility.yul\":6210:6263   */\n      tag_324\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6200:6263   */\n      swap2\n      pop\n        /* \"#utility.yul\":6155:6273   */\n      pop\n        /* \"#utility.yul\":5806:6280   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6286:6403   */\n    tag_331:\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6392:6393   */\n      dup1\n        /* \"#utility.yul\":6385:6397   */\n      revert\n        /* \"#utility.yul\":6409:6526   */\n    tag_332:\n        /* \"#utility.yul\":6518:6519   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      dup1\n        /* \"#utility.yul\":6508:6520   */\n      revert\n        /* \"#utility.yul\":6532:6634   */\n    tag_333:\n        /* \"#utility.yul\":6573:6579   */\n      0x00\n        /* \"#utility.yul\":6624:6626   */\n      0x1f\n        /* \"#utility.yul\":6620:6627   */\n      not\n        /* \"#utility.yul\":6615:6617   */\n      0x1f\n        /* \"#utility.yul\":6608:6613   */\n      dup4\n        /* \"#utility.yul\":6604:6618   */\n      add\n        /* \"#utility.yul\":6600:6628   */\n      and\n        /* \"#utility.yul\":6590:6628   */\n      swap1\n      pop\n        /* \"#utility.yul\":6532:6634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6640:6820   */\n    tag_334:\n        /* \"#utility.yul\":6688:6765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6685:6686   */\n      0x00\n        /* \"#utility.yul\":6678:6766   */\n      mstore\n        /* \"#utility.yul\":6785:6789   */\n      0x41\n        /* \"#utility.yul\":6782:6783   */\n      0x04\n        /* \"#utility.yul\":6775:6790   */\n      mstore\n        /* \"#utility.yul\":6809:6813   */\n      0x24\n        /* \"#utility.yul\":6806:6807   */\n      0x00\n        /* \"#utility.yul\":6799:6814   */\n      revert\n        /* \"#utility.yul\":6826:7107   */\n    tag_335:\n        /* \"#utility.yul\":6909:6936   */\n      tag_480\n        /* \"#utility.yul\":6931:6935   */\n      dup3\n        /* \"#utility.yul\":6909:6936   */\n      tag_333\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6901:6907   */\n      dup2\n        /* \"#utility.yul\":6897:6937   */\n      add\n        /* \"#utility.yul\":7039:7045   */\n      dup2\n        /* \"#utility.yul\":7027:7037   */\n      dup2\n        /* \"#utility.yul\":7024:7046   */\n      lt\n        /* \"#utility.yul\":7003:7021   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6991:7001   */\n      dup3\n        /* \"#utility.yul\":6988:7022   */\n      gt\n        /* \"#utility.yul\":6985:7047   */\n      or\n        /* \"#utility.yul\":6982:7070   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7050:7068   */\n      tag_482\n      tag_334\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6982:7070   */\n    tag_481:\n        /* \"#utility.yul\":7090:7100   */\n      dup1\n        /* \"#utility.yul\":7086:7088   */\n      0x40\n        /* \"#utility.yul\":7079:7101   */\n      mstore\n        /* \"#utility.yul\":6869:7107   */\n      pop\n        /* \"#utility.yul\":6826:7107   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7113:7242   */\n    tag_336:\n        /* \"#utility.yul\":7147:7153   */\n      0x00\n        /* \"#utility.yul\":7174:7194   */\n      tag_484\n      tag_309\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7164:7194   */\n      swap1\n      pop\n        /* \"#utility.yul\":7203:7236   */\n      tag_485\n        /* \"#utility.yul\":7231:7235   */\n      dup3\n        /* \"#utility.yul\":7223:7229   */\n      dup3\n        /* \"#utility.yul\":7203:7236   */\n      tag_335\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7113:7242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7248:7556   */\n    tag_337:\n        /* \"#utility.yul\":7310:7314   */\n      0x00\n        /* \"#utility.yul\":7400:7418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7392:7398   */\n      dup3\n        /* \"#utility.yul\":7389:7419   */\n      gt\n        /* \"#utility.yul\":7386:7442   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7422:7440   */\n      tag_488\n      tag_334\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7386:7442   */\n    tag_487:\n        /* \"#utility.yul\":7460:7489   */\n      tag_489\n        /* \"#utility.yul\":7482:7488   */\n      dup3\n        /* \"#utility.yul\":7460:7489   */\n      tag_333\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7452:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7544:7548   */\n      0x20\n        /* \"#utility.yul\":7538:7542   */\n      dup2\n        /* \"#utility.yul\":7534:7549   */\n      add\n        /* \"#utility.yul\":7526:7549   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7562:7710   */\n    tag_338:\n        /* \"#utility.yul\":7660:7666   */\n      dup3\n        /* \"#utility.yul\":7655:7658   */\n      dup2\n        /* \"#utility.yul\":7650:7653   */\n      dup4\n        /* \"#utility.yul\":7637:7667   */\n      calldatacopy\n        /* \"#utility.yul\":7701:7702   */\n      0x00\n        /* \"#utility.yul\":7692:7698   */\n      dup4\n        /* \"#utility.yul\":7687:7690   */\n      dup4\n        /* \"#utility.yul\":7683:7699   */\n      add\n        /* \"#utility.yul\":7676:7703   */\n      mstore\n        /* \"#utility.yul\":7562:7710   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7716:8141   */\n    tag_339:\n        /* \"#utility.yul\":7794:7799   */\n      0x00\n        /* \"#utility.yul\":7819:7885   */\n      tag_492\n        /* \"#utility.yul\":7835:7884   */\n      tag_493\n        /* \"#utility.yul\":7877:7883   */\n      dup5\n        /* \"#utility.yul\":7835:7884   */\n      tag_337\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7819:7885   */\n      tag_336\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7810:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7901:7906   */\n      dup2\n        /* \"#utility.yul\":7894:7915   */\n      mstore\n        /* \"#utility.yul\":7946:7950   */\n      0x20\n        /* \"#utility.yul\":7939:7944   */\n      dup2\n        /* \"#utility.yul\":7935:7951   */\n      add\n        /* \"#utility.yul\":7984:7987   */\n      dup5\n        /* \"#utility.yul\":7975:7981   */\n      dup5\n        /* \"#utility.yul\":7970:7973   */\n      dup5\n        /* \"#utility.yul\":7966:7982   */\n      add\n        /* \"#utility.yul\":7963:7988   */\n      gt\n        /* \"#utility.yul\":7960:8072   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7991:8070   */\n      tag_495\n      tag_332\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7960:8072   */\n    tag_494:\n        /* \"#utility.yul\":8081:8135   */\n      tag_496\n        /* \"#utility.yul\":8128:8134   */\n      dup5\n        /* \"#utility.yul\":8123:8126   */\n      dup3\n        /* \"#utility.yul\":8118:8121   */\n      dup6\n        /* \"#utility.yul\":8081:8135   */\n      tag_338\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7800:8141   */\n      pop\n        /* \"#utility.yul\":7716:8141   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8501   */\n    tag_340:\n        /* \"#utility.yul\":8217:8222   */\n      0x00\n        /* \"#utility.yul\":8266:8269   */\n      dup3\n        /* \"#utility.yul\":8259:8263   */\n      0x1f\n        /* \"#utility.yul\":8251:8257   */\n      dup4\n        /* \"#utility.yul\":8247:8264   */\n      add\n        /* \"#utility.yul\":8243:8270   */\n      slt\n        /* \"#utility.yul\":8233:8355   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8274:8353   */\n      tag_499\n      tag_331\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8233:8355   */\n    tag_498:\n        /* \"#utility.yul\":8391:8397   */\n      dup2\n        /* \"#utility.yul\":8378:8398   */\n      calldataload\n        /* \"#utility.yul\":8416:8495   */\n      tag_500\n        /* \"#utility.yul\":8491:8494   */\n      dup5\n        /* \"#utility.yul\":8483:8489   */\n      dup3\n        /* \"#utility.yul\":8476:8480   */\n      0x20\n        /* \"#utility.yul\":8468:8474   */\n      dup7\n        /* \"#utility.yul\":8464:8481   */\n      add\n        /* \"#utility.yul\":8416:8495   */\n      tag_339\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8407:8495   */\n      swap2\n      pop\n        /* \"#utility.yul\":8223:8501   */\n      pop\n        /* \"#utility.yul\":8161:8501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8507:9161   */\n    tag_81:\n        /* \"#utility.yul\":8585:8591   */\n      0x00\n        /* \"#utility.yul\":8593:8599   */\n      dup1\n        /* \"#utility.yul\":8642:8644   */\n      0x40\n        /* \"#utility.yul\":8630:8639   */\n      dup4\n        /* \"#utility.yul\":8621:8628   */\n      dup6\n        /* \"#utility.yul\":8617:8640   */\n      sub\n        /* \"#utility.yul\":8613:8645   */\n      slt\n        /* \"#utility.yul\":8610:8729   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":8648:8727   */\n      tag_503\n      tag_310\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8610:8729   */\n    tag_502:\n        /* \"#utility.yul\":8796:8797   */\n      0x00\n        /* \"#utility.yul\":8785:8794   */\n      dup4\n        /* \"#utility.yul\":8781:8798   */\n      add\n        /* \"#utility.yul\":8768:8799   */\n      calldataload\n        /* \"#utility.yul\":8826:8844   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8818:8824   */\n      dup2\n        /* \"#utility.yul\":8815:8845   */\n      gt\n        /* \"#utility.yul\":8812:8929   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":8848:8927   */\n      tag_505\n      tag_311\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8812:8929   */\n    tag_504:\n        /* \"#utility.yul\":8953:9016   */\n      tag_506\n        /* \"#utility.yul\":9008:9015   */\n      dup6\n        /* \"#utility.yul\":8999:9005   */\n      dup3\n        /* \"#utility.yul\":8988:8997   */\n      dup7\n        /* \"#utility.yul\":8984:9006   */\n      add\n        /* \"#utility.yul\":8953:9016   */\n      tag_340\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8943:9016   */\n      swap3\n      pop\n        /* \"#utility.yul\":8739:9026   */\n      pop\n        /* \"#utility.yul\":9065:9067   */\n      0x20\n        /* \"#utility.yul\":9091:9144   */\n      tag_507\n        /* \"#utility.yul\":9136:9143   */\n      dup6\n        /* \"#utility.yul\":9127:9133   */\n      dup3\n        /* \"#utility.yul\":9116:9125   */\n      dup7\n        /* \"#utility.yul\":9112:9134   */\n      add\n        /* \"#utility.yul\":9091:9144   */\n      tag_324\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9081:9144   */\n      swap2\n      pop\n        /* \"#utility.yul\":9036:9154   */\n      pop\n        /* \"#utility.yul\":8507:9161   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9167:9285   */\n    tag_341:\n        /* \"#utility.yul\":9254:9278   */\n      tag_509\n        /* \"#utility.yul\":9272:9277   */\n      dup2\n        /* \"#utility.yul\":9254:9278   */\n      tag_320\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9249:9252   */\n      dup3\n        /* \"#utility.yul\":9242:9279   */\n      mstore\n        /* \"#utility.yul\":9167:9285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9291:9513   */\n    tag_91:\n        /* \"#utility.yul\":9384:9388   */\n      0x00\n        /* \"#utility.yul\":9422:9424   */\n      0x20\n        /* \"#utility.yul\":9411:9420   */\n      dup3\n        /* \"#utility.yul\":9407:9425   */\n      add\n        /* \"#utility.yul\":9399:9425   */\n      swap1\n      pop\n        /* \"#utility.yul\":9435:9506   */\n      tag_511\n        /* \"#utility.yul\":9503:9504   */\n      0x00\n        /* \"#utility.yul\":9492:9501   */\n      dup4\n        /* \"#utility.yul\":9488:9505   */\n      add\n        /* \"#utility.yul\":9479:9485   */\n      dup5\n        /* \"#utility.yul\":9435:9506   */\n      tag_341\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9291:9513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9519:9848   */\n    tag_94:\n        /* \"#utility.yul\":9578:9584   */\n      0x00\n        /* \"#utility.yul\":9627:9629   */\n      0x20\n        /* \"#utility.yul\":9615:9624   */\n      dup3\n        /* \"#utility.yul\":9606:9613   */\n      dup5\n        /* \"#utility.yul\":9602:9625   */\n      sub\n        /* \"#utility.yul\":9598:9630   */\n      slt\n        /* \"#utility.yul\":9595:9714   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9633:9712   */\n      tag_514\n      tag_310\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9595:9714   */\n    tag_513:\n        /* \"#utility.yul\":9753:9754   */\n      0x00\n        /* \"#utility.yul\":9778:9831   */\n      tag_515\n        /* \"#utility.yul\":9823:9830   */\n      dup5\n        /* \"#utility.yul\":9814:9820   */\n      dup3\n        /* \"#utility.yul\":9803:9812   */\n      dup6\n        /* \"#utility.yul\":9799:9821   */\n      add\n        /* \"#utility.yul\":9778:9831   */\n      tag_324\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9768:9831   */\n      swap2\n      pop\n        /* \"#utility.yul\":9724:9841   */\n      pop\n        /* \"#utility.yul\":9519:9848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9854:9953   */\n    tag_342:\n        /* \"#utility.yul\":9906:9912   */\n      0x00\n        /* \"#utility.yul\":9940:9945   */\n      dup2\n        /* \"#utility.yul\":9934:9946   */\n      mload\n        /* \"#utility.yul\":9924:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9854:9953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10128   */\n    tag_343:\n        /* \"#utility.yul\":10043:10054   */\n      0x00\n        /* \"#utility.yul\":10077:10083   */\n      dup3\n        /* \"#utility.yul\":10072:10075   */\n      dup3\n        /* \"#utility.yul\":10065:10084   */\n      mstore\n        /* \"#utility.yul\":10117:10121   */\n      0x20\n        /* \"#utility.yul\":10112:10115   */\n      dup3\n        /* \"#utility.yul\":10108:10122   */\n      add\n        /* \"#utility.yul\":10093:10122   */\n      swap1\n      pop\n        /* \"#utility.yul\":9959:10128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10134:10273   */\n    tag_344:\n        /* \"#utility.yul\":10223:10229   */\n      dup3\n        /* \"#utility.yul\":10218:10221   */\n      dup2\n        /* \"#utility.yul\":10213:10216   */\n      dup4\n        /* \"#utility.yul\":10207:10230   */\n      mcopy\n        /* \"#utility.yul\":10264:10265   */\n      0x00\n        /* \"#utility.yul\":10255:10261   */\n      dup4\n        /* \"#utility.yul\":10250:10253   */\n      dup4\n        /* \"#utility.yul\":10246:10262   */\n      add\n        /* \"#utility.yul\":10239:10266   */\n      mstore\n        /* \"#utility.yul\":10134:10273   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10279:10656   */\n    tag_345:\n        /* \"#utility.yul\":10367:10370   */\n      0x00\n        /* \"#utility.yul\":10395:10434   */\n      tag_520\n        /* \"#utility.yul\":10428:10433   */\n      dup3\n        /* \"#utility.yul\":10395:10434   */\n      tag_342\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10450:10521   */\n      tag_521\n        /* \"#utility.yul\":10514:10520   */\n      dup2\n        /* \"#utility.yul\":10509:10512   */\n      dup6\n        /* \"#utility.yul\":10450:10521   */\n      tag_343\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10443:10521   */\n      swap4\n      pop\n        /* \"#utility.yul\":10530:10595   */\n      tag_522\n        /* \"#utility.yul\":10588:10594   */\n      dup2\n        /* \"#utility.yul\":10583:10586   */\n      dup6\n        /* \"#utility.yul\":10576:10580   */\n      0x20\n        /* \"#utility.yul\":10569:10574   */\n      dup7\n        /* \"#utility.yul\":10565:10581   */\n      add\n        /* \"#utility.yul\":10530:10595   */\n      tag_344\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10620:10649   */\n      tag_523\n        /* \"#utility.yul\":10642:10648   */\n      dup2\n        /* \"#utility.yul\":10620:10649   */\n      tag_333\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10615:10618   */\n      dup5\n        /* \"#utility.yul\":10611:10650   */\n      add\n        /* \"#utility.yul\":10604:10650   */\n      swap2\n      pop\n        /* \"#utility.yul\":10371:10656   */\n      pop\n        /* \"#utility.yul\":10279:10656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11294   */\n    tag_107:\n        /* \"#utility.yul\":10853:10857   */\n      0x00\n        /* \"#utility.yul\":10891:10894   */\n      0x80\n        /* \"#utility.yul\":10880:10889   */\n      dup3\n        /* \"#utility.yul\":10876:10895   */\n      add\n        /* \"#utility.yul\":10868:10895   */\n      swap1\n      pop\n        /* \"#utility.yul\":10941:10950   */\n      dup2\n        /* \"#utility.yul\":10935:10939   */\n      dup2\n        /* \"#utility.yul\":10931:10951   */\n      sub\n        /* \"#utility.yul\":10927:10928   */\n      0x00\n        /* \"#utility.yul\":10916:10925   */\n      dup4\n        /* \"#utility.yul\":10912:10929   */\n      add\n        /* \"#utility.yul\":10905:10952   */\n      mstore\n        /* \"#utility.yul\":10969:11047   */\n      tag_525\n        /* \"#utility.yul\":11042:11046   */\n      dup2\n        /* \"#utility.yul\":11033:11039   */\n      dup8\n        /* \"#utility.yul\":10969:11047   */\n      tag_345\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10961:11047   */\n      swap1\n      pop\n        /* \"#utility.yul\":11057:11129   */\n      tag_526\n        /* \"#utility.yul\":11125:11127   */\n      0x20\n        /* \"#utility.yul\":11114:11123   */\n      dup4\n        /* \"#utility.yul\":11110:11128   */\n      add\n        /* \"#utility.yul\":11101:11107   */\n      dup7\n        /* \"#utility.yul\":11057:11129   */\n      tag_318\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11139:11211   */\n      tag_527\n        /* \"#utility.yul\":11207:11209   */\n      0x40\n        /* \"#utility.yul\":11196:11205   */\n      dup4\n        /* \"#utility.yul\":11192:11210   */\n      add\n        /* \"#utility.yul\":11183:11189   */\n      dup6\n        /* \"#utility.yul\":11139:11211   */\n      tag_318\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11221:11287   */\n      tag_528\n        /* \"#utility.yul\":11283:11285   */\n      0x60\n        /* \"#utility.yul\":11272:11281   */\n      dup4\n        /* \"#utility.yul\":11268:11286   */\n      add\n        /* \"#utility.yul\":11259:11265   */\n      dup5\n        /* \"#utility.yul\":11221:11287   */\n      tag_316\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10662:11294   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11360   */\n    tag_346:\n        /* \"#utility.yul\":11328:11331   */\n      0x00\n        /* \"#utility.yul\":11349:11354   */\n      dup2\n        /* \"#utility.yul\":11342:11354   */\n      swap1\n      pop\n        /* \"#utility.yul\":11300:11360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11366:11508   */\n    tag_347:\n        /* \"#utility.yul\":11416:11425   */\n      0x00\n        /* \"#utility.yul\":11449:11502   */\n      tag_531\n        /* \"#utility.yul\":11467:11501   */\n      tag_532\n        /* \"#utility.yul\":11476:11500   */\n      tag_533\n        /* \"#utility.yul\":11494:11499   */\n      dup5\n        /* \"#utility.yul\":11476:11500   */\n      tag_319\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11467:11501   */\n      tag_346\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11449:11502   */\n      tag_319\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11436:11502   */\n      swap1\n      pop\n        /* \"#utility.yul\":11366:11508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11514:11640   */\n    tag_348:\n        /* \"#utility.yul\":11564:11573   */\n      0x00\n        /* \"#utility.yul\":11597:11634   */\n      tag_535\n        /* \"#utility.yul\":11628:11633   */\n      dup3\n        /* \"#utility.yul\":11597:11634   */\n      tag_347\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11584:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11514:11640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11646:11786   */\n    tag_349:\n        /* \"#utility.yul\":11710:11719   */\n      0x00\n        /* \"#utility.yul\":11743:11780   */\n      tag_537\n        /* \"#utility.yul\":11774:11779   */\n      dup3\n        /* \"#utility.yul\":11743:11780   */\n      tag_348\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11730:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11646:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:11951   */\n    tag_350:\n        /* \"#utility.yul\":11893:11944   */\n      tag_539\n        /* \"#utility.yul\":11938:11943   */\n      dup2\n        /* \"#utility.yul\":11893:11944   */\n      tag_349\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11888:11891   */\n      dup3\n        /* \"#utility.yul\":11881:11945   */\n      mstore\n        /* \"#utility.yul\":11792:11951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11957:12207   */\n    tag_117:\n        /* \"#utility.yul\":12064:12068   */\n      0x00\n        /* \"#utility.yul\":12102:12104   */\n      0x20\n        /* \"#utility.yul\":12091:12100   */\n      dup3\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12079:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":12115:12200   */\n      tag_541\n        /* \"#utility.yul\":12197:12198   */\n      0x00\n        /* \"#utility.yul\":12186:12195   */\n      dup4\n        /* \"#utility.yul\":12182:12199   */\n      add\n        /* \"#utility.yul\":12173:12179   */\n      dup5\n        /* \"#utility.yul\":12115:12200   */\n      tag_350\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11957:12207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12213:12381   */\n    tag_351:\n        /* \"#utility.yul\":12353:12373   */\n      0x41504920646f6573206e6f742065786973740000000000000000000000000000\n        /* \"#utility.yul\":12349:12350   */\n      0x00\n        /* \"#utility.yul\":12341:12347   */\n      dup3\n        /* \"#utility.yul\":12337:12351   */\n      add\n        /* \"#utility.yul\":12330:12374   */\n      mstore\n        /* \"#utility.yul\":12213:12381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:12753   */\n    tag_352:\n        /* \"#utility.yul\":12529:12532   */\n      0x00\n        /* \"#utility.yul\":12550:12617   */\n      tag_544\n        /* \"#utility.yul\":12614:12616   */\n      0x12\n        /* \"#utility.yul\":12609:12612   */\n      dup4\n        /* \"#utility.yul\":12550:12617   */\n      tag_343\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12543:12617   */\n      swap2\n      pop\n        /* \"#utility.yul\":12626:12719   */\n      tag_545\n        /* \"#utility.yul\":12715:12718   */\n      dup3\n        /* \"#utility.yul\":12626:12719   */\n      tag_351\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12744:12746   */\n      0x20\n        /* \"#utility.yul\":12739:12742   */\n      dup3\n        /* \"#utility.yul\":12735:12747   */\n      add\n        /* \"#utility.yul\":12728:12747   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12759:13178   */\n    tag_125:\n        /* \"#utility.yul\":12925:12929   */\n      0x00\n        /* \"#utility.yul\":12963:12965   */\n      0x20\n        /* \"#utility.yul\":12952:12961   */\n      dup3\n        /* \"#utility.yul\":12948:12966   */\n      add\n        /* \"#utility.yul\":12940:12966   */\n      swap1\n      pop\n        /* \"#utility.yul\":13012:13021   */\n      dup2\n        /* \"#utility.yul\":13006:13010   */\n      dup2\n        /* \"#utility.yul\":13002:13022   */\n      sub\n        /* \"#utility.yul\":12998:12999   */\n      0x00\n        /* \"#utility.yul\":12987:12996   */\n      dup4\n        /* \"#utility.yul\":12983:13000   */\n      add\n        /* \"#utility.yul\":12976:13023   */\n      mstore\n        /* \"#utility.yul\":13040:13171   */\n      tag_547\n        /* \"#utility.yul\":13166:13170   */\n      dup2\n        /* \"#utility.yul\":13040:13171   */\n      tag_352\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13032:13171   */\n      swap1\n      pop\n        /* \"#utility.yul\":12759:13178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13184:13357   */\n    tag_353:\n        /* \"#utility.yul\":13324:13349   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":13320:13321   */\n      0x00\n        /* \"#utility.yul\":13312:13318   */\n      dup3\n        /* \"#utility.yul\":13308:13322   */\n      add\n        /* \"#utility.yul\":13301:13350   */\n      mstore\n        /* \"#utility.yul\":13184:13357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13363:13729   */\n    tag_354:\n        /* \"#utility.yul\":13505:13508   */\n      0x00\n        /* \"#utility.yul\":13526:13593   */\n      tag_550\n        /* \"#utility.yul\":13590:13592   */\n      0x17\n        /* \"#utility.yul\":13585:13588   */\n      dup4\n        /* \"#utility.yul\":13526:13593   */\n      tag_343\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13519:13593   */\n      swap2\n      pop\n        /* \"#utility.yul\":13602:13695   */\n      tag_551\n        /* \"#utility.yul\":13691:13694   */\n      dup3\n        /* \"#utility.yul\":13602:13695   */\n      tag_353\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13720:13722   */\n      0x20\n        /* \"#utility.yul\":13715:13718   */\n      dup3\n        /* \"#utility.yul\":13711:13723   */\n      add\n        /* \"#utility.yul\":13704:13723   */\n      swap1\n      pop\n        /* \"#utility.yul\":13363:13729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13735:14154   */\n    tag_130:\n        /* \"#utility.yul\":13901:13905   */\n      0x00\n        /* \"#utility.yul\":13939:13941   */\n      0x20\n        /* \"#utility.yul\":13928:13937   */\n      dup3\n        /* \"#utility.yul\":13924:13942   */\n      add\n        /* \"#utility.yul\":13916:13942   */\n      swap1\n      pop\n        /* \"#utility.yul\":13988:13997   */\n      dup2\n        /* \"#utility.yul\":13982:13986   */\n      dup2\n        /* \"#utility.yul\":13978:13998   */\n      sub\n        /* \"#utility.yul\":13974:13975   */\n      0x00\n        /* \"#utility.yul\":13963:13972   */\n      dup4\n        /* \"#utility.yul\":13959:13976   */\n      add\n        /* \"#utility.yul\":13952:13999   */\n      mstore\n        /* \"#utility.yul\":14016:14147   */\n      tag_553\n        /* \"#utility.yul\":14142:14146   */\n      dup2\n        /* \"#utility.yul\":14016:14147   */\n      tag_354\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14008:14147   */\n      swap1\n      pop\n        /* \"#utility.yul\":13735:14154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14160:14332   */\n    tag_355:\n        /* \"#utility.yul\":14300:14324   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":14296:14297   */\n      0x00\n        /* \"#utility.yul\":14288:14294   */\n      dup3\n        /* \"#utility.yul\":14284:14298   */\n      add\n        /* \"#utility.yul\":14277:14325   */\n      mstore\n        /* \"#utility.yul\":14160:14332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14338:14704   */\n    tag_356:\n        /* \"#utility.yul\":14480:14483   */\n      0x00\n        /* \"#utility.yul\":14501:14568   */\n      tag_556\n        /* \"#utility.yul\":14565:14567   */\n      0x16\n        /* \"#utility.yul\":14560:14563   */\n      dup4\n        /* \"#utility.yul\":14501:14568   */\n      tag_343\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14494:14568   */\n      swap2\n      pop\n        /* \"#utility.yul\":14577:14670   */\n      tag_557\n        /* \"#utility.yul\":14666:14669   */\n      dup3\n        /* \"#utility.yul\":14577:14670   */\n      tag_355\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14695:14697   */\n      0x20\n        /* \"#utility.yul\":14690:14693   */\n      dup3\n        /* \"#utility.yul\":14686:14698   */\n      add\n        /* \"#utility.yul\":14679:14698   */\n      swap1\n      pop\n        /* \"#utility.yul\":14338:14704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14710:15129   */\n    tag_138:\n        /* \"#utility.yul\":14876:14880   */\n      0x00\n        /* \"#utility.yul\":14914:14916   */\n      0x20\n        /* \"#utility.yul\":14903:14912   */\n      dup3\n        /* \"#utility.yul\":14899:14917   */\n      add\n        /* \"#utility.yul\":14891:14917   */\n      swap1\n      pop\n        /* \"#utility.yul\":14963:14972   */\n      dup2\n        /* \"#utility.yul\":14957:14961   */\n      dup2\n        /* \"#utility.yul\":14953:14973   */\n      sub\n        /* \"#utility.yul\":14949:14950   */\n      0x00\n        /* \"#utility.yul\":14938:14947   */\n      dup4\n        /* \"#utility.yul\":14934:14951   */\n      add\n        /* \"#utility.yul\":14927:14974   */\n      mstore\n        /* \"#utility.yul\":14991:15122   */\n      tag_559\n        /* \"#utility.yul\":15117:15121   */\n      dup2\n        /* \"#utility.yul\":14991:15122   */\n      tag_356\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14983:15122   */\n      swap1\n      pop\n        /* \"#utility.yul\":14710:15129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15135:15366   */\n    tag_357:\n        /* \"#utility.yul\":15275:15309   */\n      0x4e756d626572206f66207265717565737473206d757374206265206772656174\n        /* \"#utility.yul\":15271:15272   */\n      0x00\n        /* \"#utility.yul\":15263:15269   */\n      dup3\n        /* \"#utility.yul\":15259:15273   */\n      add\n        /* \"#utility.yul\":15252:15310   */\n      mstore\n        /* \"#utility.yul\":15344:15358   */\n      0x6572207468616e207a65726f0000000000000000000000000000000000000000\n        /* \"#utility.yul\":15339:15341   */\n      0x20\n        /* \"#utility.yul\":15331:15337   */\n      dup3\n        /* \"#utility.yul\":15327:15342   */\n      add\n        /* \"#utility.yul\":15320:15359   */\n      mstore\n        /* \"#utility.yul\":15135:15366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15372:15738   */\n    tag_358:\n        /* \"#utility.yul\":15514:15517   */\n      0x00\n        /* \"#utility.yul\":15535:15602   */\n      tag_562\n        /* \"#utility.yul\":15599:15601   */\n      0x2c\n        /* \"#utility.yul\":15594:15597   */\n      dup4\n        /* \"#utility.yul\":15535:15602   */\n      tag_343\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15528:15602   */\n      swap2\n      pop\n        /* \"#utility.yul\":15611:15704   */\n      tag_563\n        /* \"#utility.yul\":15700:15703   */\n      dup3\n        /* \"#utility.yul\":15611:15704   */\n      tag_357\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":15729:15731   */\n      0x40\n        /* \"#utility.yul\":15724:15727   */\n      dup3\n        /* \"#utility.yul\":15720:15732   */\n      add\n        /* \"#utility.yul\":15713:15732   */\n      swap1\n      pop\n        /* \"#utility.yul\":15372:15738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15744:16163   */\n    tag_164:\n        /* \"#utility.yul\":15910:15914   */\n      0x00\n        /* \"#utility.yul\":15948:15950   */\n      0x20\n        /* \"#utility.yul\":15937:15946   */\n      dup3\n        /* \"#utility.yul\":15933:15951   */\n      add\n        /* \"#utility.yul\":15925:15951   */\n      swap1\n      pop\n        /* \"#utility.yul\":15997:16006   */\n      dup2\n        /* \"#utility.yul\":15991:15995   */\n      dup2\n        /* \"#utility.yul\":15987:16007   */\n      sub\n        /* \"#utility.yul\":15983:15984   */\n      0x00\n        /* \"#utility.yul\":15972:15981   */\n      dup4\n        /* \"#utility.yul\":15968:15985   */\n      add\n        /* \"#utility.yul\":15961:16008   */\n      mstore\n        /* \"#utility.yul\":16025:16156   */\n      tag_565\n        /* \"#utility.yul\":16151:16155   */\n      dup2\n        /* \"#utility.yul\":16025:16156   */\n      tag_358\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16017:16156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15744:16163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16169:16336   */\n    tag_359:\n        /* \"#utility.yul\":16309:16328   */\n      0x415049206973206e6f7420616374697665000000000000000000000000000000\n        /* \"#utility.yul\":16305:16306   */\n      0x00\n        /* \"#utility.yul\":16297:16303   */\n      dup3\n        /* \"#utility.yul\":16293:16307   */\n      add\n        /* \"#utility.yul\":16286:16329   */\n      mstore\n        /* \"#utility.yul\":16169:16336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16342:16708   */\n    tag_360:\n        /* \"#utility.yul\":16484:16487   */\n      0x00\n        /* \"#utility.yul\":16505:16572   */\n      tag_568\n        /* \"#utility.yul\":16569:16571   */\n      0x11\n        /* \"#utility.yul\":16564:16567   */\n      dup4\n        /* \"#utility.yul\":16505:16572   */\n      tag_343\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16498:16572   */\n      swap2\n      pop\n        /* \"#utility.yul\":16581:16674   */\n      tag_569\n        /* \"#utility.yul\":16670:16673   */\n      dup3\n        /* \"#utility.yul\":16581:16674   */\n      tag_359\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16699:16701   */\n      0x20\n        /* \"#utility.yul\":16694:16697   */\n      dup3\n        /* \"#utility.yul\":16690:16702   */\n      add\n        /* \"#utility.yul\":16683:16702   */\n      swap1\n      pop\n        /* \"#utility.yul\":16342:16708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16714:17133   */\n    tag_167:\n        /* \"#utility.yul\":16880:16884   */\n      0x00\n        /* \"#utility.yul\":16918:16920   */\n      0x20\n        /* \"#utility.yul\":16907:16916   */\n      dup3\n        /* \"#utility.yul\":16903:16921   */\n      add\n        /* \"#utility.yul\":16895:16921   */\n      swap1\n      pop\n        /* \"#utility.yul\":16967:16976   */\n      dup2\n        /* \"#utility.yul\":16961:16965   */\n      dup2\n        /* \"#utility.yul\":16957:16977   */\n      sub\n        /* \"#utility.yul\":16953:16954   */\n      0x00\n        /* \"#utility.yul\":16942:16951   */\n      dup4\n        /* \"#utility.yul\":16938:16955   */\n      add\n        /* \"#utility.yul\":16931:16978   */\n      mstore\n        /* \"#utility.yul\":16995:17126   */\n      tag_571\n        /* \"#utility.yul\":17121:17125   */\n      dup2\n        /* \"#utility.yul\":16995:17126   */\n      tag_360\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16987:17126   */\n      swap1\n      pop\n        /* \"#utility.yul\":16714:17133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17139:17319   */\n    tag_361:\n        /* \"#utility.yul\":17187:17264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17184:17185   */\n      0x00\n        /* \"#utility.yul\":17177:17265   */\n      mstore\n        /* \"#utility.yul\":17284:17288   */\n      0x11\n        /* \"#utility.yul\":17281:17282   */\n      0x04\n        /* \"#utility.yul\":17274:17289   */\n      mstore\n        /* \"#utility.yul\":17308:17312   */\n      0x24\n        /* \"#utility.yul\":17305:17306   */\n      0x00\n        /* \"#utility.yul\":17298:17313   */\n      revert\n        /* \"#utility.yul\":17325:17735   */\n    tag_169:\n        /* \"#utility.yul\":17365:17372   */\n      0x00\n        /* \"#utility.yul\":17388:17408   */\n      tag_574\n        /* \"#utility.yul\":17406:17407   */\n      dup3\n        /* \"#utility.yul\":17388:17408   */\n      tag_317\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17383:17408   */\n      swap2\n      pop\n        /* \"#utility.yul\":17422:17442   */\n      tag_575\n        /* \"#utility.yul\":17440:17441   */\n      dup4\n        /* \"#utility.yul\":17422:17442   */\n      tag_317\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17417:17442   */\n      swap3\n      pop\n        /* \"#utility.yul\":17477:17478   */\n      dup3\n        /* \"#utility.yul\":17474:17475   */\n      dup3\n        /* \"#utility.yul\":17470:17479   */\n      mul\n        /* \"#utility.yul\":17499:17529   */\n      tag_576\n        /* \"#utility.yul\":17517:17528   */\n      dup2\n        /* \"#utility.yul\":17499:17529   */\n      tag_317\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17488:17529   */\n      swap2\n      pop\n        /* \"#utility.yul\":17678:17679   */\n      dup3\n        /* \"#utility.yul\":17669:17676   */\n      dup3\n        /* \"#utility.yul\":17665:17680   */\n      div\n        /* \"#utility.yul\":17662:17663   */\n      dup5\n        /* \"#utility.yul\":17659:17681   */\n      eq\n        /* \"#utility.yul\":17639:17640   */\n      dup4\n        /* \"#utility.yul\":17632:17641   */\n      iszero\n        /* \"#utility.yul\":17612:17695   */\n      or\n        /* \"#utility.yul\":17589:17728   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":17708:17726   */\n      tag_578\n      tag_361\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17589:17728   */\n    tag_577:\n        /* \"#utility.yul\":17373:17735   */\n      pop\n        /* \"#utility.yul\":17325:17735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17741:17921   */\n    tag_362:\n        /* \"#utility.yul\":17789:17866   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17786:17787   */\n      0x00\n        /* \"#utility.yul\":17779:17867   */\n      mstore\n        /* \"#utility.yul\":17886:17890   */\n      0x12\n        /* \"#utility.yul\":17883:17884   */\n      0x04\n        /* \"#utility.yul\":17876:17891   */\n      mstore\n        /* \"#utility.yul\":17910:17914   */\n      0x24\n        /* \"#utility.yul\":17907:17908   */\n      0x00\n        /* \"#utility.yul\":17900:17915   */\n      revert\n        /* \"#utility.yul\":17927:18112   */\n    tag_171:\n        /* \"#utility.yul\":17967:17968   */\n      0x00\n        /* \"#utility.yul\":17984:18004   */\n      tag_581\n        /* \"#utility.yul\":18002:18003   */\n      dup3\n        /* \"#utility.yul\":17984:18004   */\n      tag_317\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17979:18004   */\n      swap2\n      pop\n        /* \"#utility.yul\":18018:18038   */\n      tag_582\n        /* \"#utility.yul\":18036:18037   */\n      dup4\n        /* \"#utility.yul\":18018:18038   */\n      tag_317\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18013:18038   */\n      swap3\n      pop\n        /* \"#utility.yul\":18057:18058   */\n      dup3\n        /* \"#utility.yul\":18047:18082   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":18062:18080   */\n      tag_584\n      tag_362\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18047:18082   */\n    tag_583:\n        /* \"#utility.yul\":18104:18105   */\n      dup3\n        /* \"#utility.yul\":18101:18102   */\n      dup3\n        /* \"#utility.yul\":18097:18106   */\n      div\n        /* \"#utility.yul\":18092:18106   */\n      swap1\n      pop\n        /* \"#utility.yul\":17927:18112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18285   */\n    tag_363:\n        /* \"#utility.yul\":18258:18277   */\n      0x4f766572666c6f77206465746563746564000000000000000000000000000000\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18278   */\n      mstore\n        /* \"#utility.yul\":18118:18285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18291:18657   */\n    tag_364:\n        /* \"#utility.yul\":18433:18436   */\n      0x00\n        /* \"#utility.yul\":18454:18521   */\n      tag_587\n        /* \"#utility.yul\":18518:18520   */\n      0x11\n        /* \"#utility.yul\":18513:18516   */\n      dup4\n        /* \"#utility.yul\":18454:18521   */\n      tag_343\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18447:18521   */\n      swap2\n      pop\n        /* \"#utility.yul\":18530:18623   */\n      tag_588\n        /* \"#utility.yul\":18619:18622   */\n      dup3\n        /* \"#utility.yul\":18530:18623   */\n      tag_363\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18648:18650   */\n      0x20\n        /* \"#utility.yul\":18643:18646   */\n      dup3\n        /* \"#utility.yul\":18639:18651   */\n      add\n        /* \"#utility.yul\":18632:18651   */\n      swap1\n      pop\n        /* \"#utility.yul\":18291:18657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18663:19082   */\n    tag_174:\n        /* \"#utility.yul\":18829:18833   */\n      0x00\n        /* \"#utility.yul\":18867:18869   */\n      0x20\n        /* \"#utility.yul\":18856:18865   */\n      dup3\n        /* \"#utility.yul\":18852:18870   */\n      add\n        /* \"#utility.yul\":18844:18870   */\n      swap1\n      pop\n        /* \"#utility.yul\":18916:18925   */\n      dup2\n        /* \"#utility.yul\":18910:18914   */\n      dup2\n        /* \"#utility.yul\":18906:18926   */\n      sub\n        /* \"#utility.yul\":18902:18903   */\n      0x00\n        /* \"#utility.yul\":18891:18900   */\n      dup4\n        /* \"#utility.yul\":18887:18904   */\n      add\n        /* \"#utility.yul\":18880:18927   */\n      mstore\n        /* \"#utility.yul\":18944:19075   */\n      tag_590\n        /* \"#utility.yul\":19070:19074   */\n      dup2\n        /* \"#utility.yul\":18944:19075   */\n      tag_364\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18936:19075   */\n      swap1\n      pop\n        /* \"#utility.yul\":18663:19082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19088:19279   */\n    tag_178:\n        /* \"#utility.yul\":19128:19131   */\n      0x00\n        /* \"#utility.yul\":19147:19167   */\n      tag_592\n        /* \"#utility.yul\":19165:19166   */\n      dup3\n        /* \"#utility.yul\":19147:19167   */\n      tag_317\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19142:19167   */\n      swap2\n      pop\n        /* \"#utility.yul\":19181:19201   */\n      tag_593\n        /* \"#utility.yul\":19199:19200   */\n      dup4\n        /* \"#utility.yul\":19181:19201   */\n      tag_317\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19176:19201   */\n      swap3\n      pop\n        /* \"#utility.yul\":19224:19225   */\n      dup3\n        /* \"#utility.yul\":19221:19222   */\n      dup3\n        /* \"#utility.yul\":19217:19226   */\n      add\n        /* \"#utility.yul\":19210:19226   */\n      swap1\n      pop\n        /* \"#utility.yul\":19245:19248   */\n      dup1\n        /* \"#utility.yul\":19242:19243   */\n      dup3\n        /* \"#utility.yul\":19239:19249   */\n      gt\n        /* \"#utility.yul\":19236:19272   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":19252:19270   */\n      tag_595\n      tag_361\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19236:19272   */\n    tag_594:\n        /* \"#utility.yul\":19088:19279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19285:19459   */\n    tag_365:\n        /* \"#utility.yul\":19425:19451   */\n      0x415049206e616d652063616e6e6f7420626520656d7074790000000000000000\n        /* \"#utility.yul\":19421:19422   */\n      0x00\n        /* \"#utility.yul\":19413:19419   */\n      dup3\n        /* \"#utility.yul\":19409:19423   */\n      add\n        /* \"#utility.yul\":19402:19452   */\n      mstore\n        /* \"#utility.yul\":19285:19459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19465:19831   */\n    tag_366:\n        /* \"#utility.yul\":19607:19610   */\n      0x00\n        /* \"#utility.yul\":19628:19695   */\n      tag_598\n        /* \"#utility.yul\":19692:19694   */\n      0x18\n        /* \"#utility.yul\":19687:19690   */\n      dup4\n        /* \"#utility.yul\":19628:19695   */\n      tag_343\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19621:19695   */\n      swap2\n      pop\n        /* \"#utility.yul\":19704:19797   */\n      tag_599\n        /* \"#utility.yul\":19793:19796   */\n      dup3\n        /* \"#utility.yul\":19704:19797   */\n      tag_365\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19822:19824   */\n      0x20\n        /* \"#utility.yul\":19817:19820   */\n      dup3\n        /* \"#utility.yul\":19813:19825   */\n      add\n        /* \"#utility.yul\":19806:19825   */\n      swap1\n      pop\n        /* \"#utility.yul\":19465:19831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19837:20256   */\n    tag_194:\n        /* \"#utility.yul\":20003:20007   */\n      0x00\n        /* \"#utility.yul\":20041:20043   */\n      0x20\n        /* \"#utility.yul\":20030:20039   */\n      dup3\n        /* \"#utility.yul\":20026:20044   */\n      add\n        /* \"#utility.yul\":20018:20044   */\n      swap1\n      pop\n        /* \"#utility.yul\":20090:20099   */\n      dup2\n        /* \"#utility.yul\":20084:20088   */\n      dup2\n        /* \"#utility.yul\":20080:20100   */\n      sub\n        /* \"#utility.yul\":20076:20077   */\n      0x00\n        /* \"#utility.yul\":20065:20074   */\n      dup4\n        /* \"#utility.yul\":20061:20078   */\n      add\n        /* \"#utility.yul\":20054:20101   */\n      mstore\n        /* \"#utility.yul\":20118:20249   */\n      tag_601\n        /* \"#utility.yul\":20244:20248   */\n      dup2\n        /* \"#utility.yul\":20118:20249   */\n      tag_366\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20110:20249   */\n      swap1\n      pop\n        /* \"#utility.yul\":19837:20256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20262:20492   */\n    tag_367:\n        /* \"#utility.yul\":20402:20436   */\n      0x5072696365207065722072657175657374206d75737420626520677265617465\n        /* \"#utility.yul\":20398:20399   */\n      0x00\n        /* \"#utility.yul\":20390:20396   */\n      dup3\n        /* \"#utility.yul\":20386:20400   */\n      add\n        /* \"#utility.yul\":20379:20437   */\n      mstore\n        /* \"#utility.yul\":20471:20484   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20466:20468   */\n      0x20\n        /* \"#utility.yul\":20458:20464   */\n      dup3\n        /* \"#utility.yul\":20454:20469   */\n      add\n        /* \"#utility.yul\":20447:20485   */\n      mstore\n        /* \"#utility.yul\":20262:20492   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20498:20864   */\n    tag_368:\n        /* \"#utility.yul\":20640:20643   */\n      0x00\n        /* \"#utility.yul\":20661:20728   */\n      tag_604\n        /* \"#utility.yul\":20725:20727   */\n      0x2b\n        /* \"#utility.yul\":20720:20723   */\n      dup4\n        /* \"#utility.yul\":20661:20728   */\n      tag_343\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20654:20728   */\n      swap2\n      pop\n        /* \"#utility.yul\":20737:20830   */\n      tag_605\n        /* \"#utility.yul\":20826:20829   */\n      dup3\n        /* \"#utility.yul\":20737:20830   */\n      tag_367\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":20855:20857   */\n      0x40\n        /* \"#utility.yul\":20850:20853   */\n      dup3\n        /* \"#utility.yul\":20846:20858   */\n      add\n        /* \"#utility.yul\":20839:20858   */\n      swap1\n      pop\n        /* \"#utility.yul\":20498:20864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20870:21289   */\n    tag_197:\n        /* \"#utility.yul\":21036:21040   */\n      0x00\n        /* \"#utility.yul\":21074:21076   */\n      0x20\n        /* \"#utility.yul\":21063:21072   */\n      dup3\n        /* \"#utility.yul\":21059:21077   */\n      add\n        /* \"#utility.yul\":21051:21077   */\n      swap1\n      pop\n        /* \"#utility.yul\":21123:21132   */\n      dup2\n        /* \"#utility.yul\":21117:21121   */\n      dup2\n        /* \"#utility.yul\":21113:21133   */\n      sub\n        /* \"#utility.yul\":21109:21110   */\n      0x00\n        /* \"#utility.yul\":21098:21107   */\n      dup4\n        /* \"#utility.yul\":21094:21111   */\n      add\n        /* \"#utility.yul\":21087:21134   */\n      mstore\n        /* \"#utility.yul\":21151:21282   */\n      tag_607\n        /* \"#utility.yul\":21277:21281   */\n      dup2\n        /* \"#utility.yul\":21151:21282   */\n      tag_368\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":21143:21282   */\n      swap1\n      pop\n        /* \"#utility.yul\":20870:21289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21295:21528   */\n    tag_199:\n        /* \"#utility.yul\":21334:21337   */\n      0x00\n        /* \"#utility.yul\":21357:21381   */\n      tag_609\n        /* \"#utility.yul\":21375:21380   */\n      dup3\n        /* \"#utility.yul\":21357:21381   */\n      tag_317\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21348:21381   */\n      swap2\n      pop\n        /* \"#utility.yul\":21403:21469   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21396:21401   */\n      dup3\n        /* \"#utility.yul\":21393:21470   */\n      sub\n        /* \"#utility.yul\":21390:21493   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":21473:21491   */\n      tag_611\n      tag_361\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21390:21493   */\n    tag_610:\n        /* \"#utility.yul\":21520:21521   */\n      0x01\n        /* \"#utility.yul\":21513:21518   */\n      dup3\n        /* \"#utility.yul\":21509:21522   */\n      add\n        /* \"#utility.yul\":21502:21522   */\n      swap1\n      pop\n        /* \"#utility.yul\":21295:21528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21534:21714   */\n    tag_369:\n        /* \"#utility.yul\":21582:21659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21579:21580   */\n      0x00\n        /* \"#utility.yul\":21572:21660   */\n      mstore\n        /* \"#utility.yul\":21679:21683   */\n      0x22\n        /* \"#utility.yul\":21676:21677   */\n      0x04\n        /* \"#utility.yul\":21669:21684   */\n      mstore\n        /* \"#utility.yul\":21703:21707   */\n      0x24\n        /* \"#utility.yul\":21700:21701   */\n      0x00\n        /* \"#utility.yul\":21693:21708   */\n      revert\n        /* \"#utility.yul\":21720:22040   */\n    tag_246:\n        /* \"#utility.yul\":21764:21770   */\n      0x00\n        /* \"#utility.yul\":21801:21802   */\n      0x02\n        /* \"#utility.yul\":21795:21799   */\n      dup3\n        /* \"#utility.yul\":21791:21803   */\n      div\n        /* \"#utility.yul\":21781:21803   */\n      swap1\n      pop\n        /* \"#utility.yul\":21848:21849   */\n      0x01\n        /* \"#utility.yul\":21842:21846   */\n      dup3\n        /* \"#utility.yul\":21838:21850   */\n      and\n        /* \"#utility.yul\":21869:21887   */\n      dup1\n        /* \"#utility.yul\":21859:21940   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":21925:21929   */\n      0x7f\n        /* \"#utility.yul\":21917:21923   */\n      dup3\n        /* \"#utility.yul\":21913:21930   */\n      and\n        /* \"#utility.yul\":21903:21930   */\n      swap2\n      pop\n        /* \"#utility.yul\":21859:21940   */\n    tag_614:\n        /* \"#utility.yul\":21987:21989   */\n      0x20\n        /* \"#utility.yul\":21979:21985   */\n      dup3\n        /* \"#utility.yul\":21976:21990   */\n      lt\n        /* \"#utility.yul\":21956:21974   */\n      dup2\n        /* \"#utility.yul\":21953:21991   */\n      sub\n        /* \"#utility.yul\":21950:22034   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":22006:22024   */\n      tag_616\n      tag_369\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":21950:22034   */\n    tag_615:\n        /* \"#utility.yul\":21771:22040   */\n      pop\n        /* \"#utility.yul\":21720:22040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22046:22187   */\n    tag_370:\n        /* \"#utility.yul\":22095:22099   */\n      0x00\n        /* \"#utility.yul\":22118:22121   */\n      dup2\n        /* \"#utility.yul\":22110:22121   */\n      swap1\n      pop\n        /* \"#utility.yul\":22141:22144   */\n      dup2\n        /* \"#utility.yul\":22138:22139   */\n      0x00\n        /* \"#utility.yul\":22131:22145   */\n      mstore\n        /* \"#utility.yul\":22175:22179   */\n      0x20\n        /* \"#utility.yul\":22172:22173   */\n      0x00\n        /* \"#utility.yul\":22162:22180   */\n      keccak256\n        /* \"#utility.yul\":22154:22180   */\n      swap1\n      pop\n        /* \"#utility.yul\":22046:22187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22193:22286   */\n    tag_371:\n        /* \"#utility.yul\":22230:22236   */\n      0x00\n        /* \"#utility.yul\":22277:22279   */\n      0x20\n        /* \"#utility.yul\":22272:22274   */\n      0x1f\n        /* \"#utility.yul\":22265:22270   */\n      dup4\n        /* \"#utility.yul\":22261:22275   */\n      add\n        /* \"#utility.yul\":22257:22280   */\n      div\n        /* \"#utility.yul\":22247:22280   */\n      swap1\n      pop\n        /* \"#utility.yul\":22193:22286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22292:22399   */\n    tag_372:\n        /* \"#utility.yul\":22336:22344   */\n      0x00\n        /* \"#utility.yul\":22386:22391   */\n      dup3\n        /* \"#utility.yul\":22380:22384   */\n      dup3\n        /* \"#utility.yul\":22376:22392   */\n      shl\n        /* \"#utility.yul\":22355:22392   */\n      swap1\n      pop\n        /* \"#utility.yul\":22292:22399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22405:22798   */\n    tag_373:\n        /* \"#utility.yul\":22474:22480   */\n      0x00\n        /* \"#utility.yul\":22524:22525   */\n      0x08\n        /* \"#utility.yul\":22512:22522   */\n      dup4\n        /* \"#utility.yul\":22508:22526   */\n      mul\n        /* \"#utility.yul\":22547:22644   */\n      tag_621\n        /* \"#utility.yul\":22577:22643   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22566:22575   */\n      dup3\n        /* \"#utility.yul\":22547:22644   */\n      tag_372\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22665:22704   */\n      tag_622\n        /* \"#utility.yul\":22695:22703   */\n      dup7\n        /* \"#utility.yul\":22684:22693   */\n      dup4\n        /* \"#utility.yul\":22665:22704   */\n      tag_372\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22653:22704   */\n      swap6\n      pop\n        /* \"#utility.yul\":22737:22741   */\n      dup1\n        /* \"#utility.yul\":22733:22742   */\n      not\n        /* \"#utility.yul\":22726:22731   */\n      dup5\n        /* \"#utility.yul\":22722:22743   */\n      and\n        /* \"#utility.yul\":22713:22743   */\n      swap4\n      pop\n        /* \"#utility.yul\":22786:22790   */\n      dup1\n        /* \"#utility.yul\":22776:22784   */\n      dup7\n        /* \"#utility.yul\":22772:22791   */\n      and\n        /* \"#utility.yul\":22765:22770   */\n      dup5\n        /* \"#utility.yul\":22762:22792   */\n      or\n        /* \"#utility.yul\":22752:22792   */\n      swap3\n      pop\n        /* \"#utility.yul\":22481:22798   */\n      pop\n      pop\n        /* \"#utility.yul\":22405:22798   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22804:22946   */\n    tag_374:\n        /* \"#utility.yul\":22854:22863   */\n      0x00\n        /* \"#utility.yul\":22887:22940   */\n      tag_624\n        /* \"#utility.yul\":22905:22939   */\n      tag_625\n        /* \"#utility.yul\":22914:22938   */\n      tag_626\n        /* \"#utility.yul\":22932:22937   */\n      dup5\n        /* \"#utility.yul\":22914:22938   */\n      tag_317\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":22905:22939   */\n      tag_346\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22887:22940   */\n      tag_317\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22874:22940   */\n      swap1\n      pop\n        /* \"#utility.yul\":22804:22946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22952:23027   */\n    tag_375:\n        /* \"#utility.yul\":22995:22998   */\n      0x00\n        /* \"#utility.yul\":23016:23021   */\n      dup2\n        /* \"#utility.yul\":23009:23021   */\n      swap1\n      pop\n        /* \"#utility.yul\":22952:23027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23033:23302   */\n    tag_376:\n        /* \"#utility.yul\":23143:23182   */\n      tag_629\n        /* \"#utility.yul\":23174:23181   */\n      dup4\n        /* \"#utility.yul\":23143:23182   */\n      tag_374\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":23204:23295   */\n      tag_630\n        /* \"#utility.yul\":23253:23294   */\n      tag_631\n        /* \"#utility.yul\":23277:23293   */\n      dup3\n        /* \"#utility.yul\":23253:23294   */\n      tag_375\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23245:23251   */\n      dup5\n        /* \"#utility.yul\":23238:23242   */\n      dup5\n        /* \"#utility.yul\":23232:23243   */\n      sload\n        /* \"#utility.yul\":23204:23295   */\n      tag_373\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23198:23202   */\n      dup3\n        /* \"#utility.yul\":23191:23296   */\n      sstore\n        /* \"#utility.yul\":23109:23302   */\n      pop\n        /* \"#utility.yul\":23033:23302   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23308:23381   */\n    tag_377:\n        /* \"#utility.yul\":23353:23356   */\n      0x00\n        /* \"#utility.yul\":23308:23381   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23387:23576   */\n    tag_378:\n        /* \"#utility.yul\":23464:23496   */\n      tag_634\n      tag_377\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":23505:23570   */\n      tag_635\n        /* \"#utility.yul\":23563:23569   */\n      dup2\n        /* \"#utility.yul\":23555:23561   */\n      dup5\n        /* \"#utility.yul\":23549:23553   */\n      dup5\n        /* \"#utility.yul\":23505:23570   */\n      tag_376\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":23440:23576   */\n      pop\n        /* \"#utility.yul\":23387:23576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23582:23768   */\n    tag_379:\n        /* \"#utility.yul\":23642:23762   */\n    tag_637:\n        /* \"#utility.yul\":23659:23662   */\n      dup2\n        /* \"#utility.yul\":23652:23657   */\n      dup2\n        /* \"#utility.yul\":23649:23663   */\n      lt\n        /* \"#utility.yul\":23642:23762   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":23713:23752   */\n      tag_640\n        /* \"#utility.yul\":23750:23751   */\n      0x00\n        /* \"#utility.yul\":23743:23748   */\n      dup3\n        /* \"#utility.yul\":23713:23752   */\n      tag_378\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":23686:23687   */\n      0x01\n        /* \"#utility.yul\":23679:23684   */\n      dup2\n        /* \"#utility.yul\":23675:23688   */\n      add\n        /* \"#utility.yul\":23666:23688   */\n      swap1\n      pop\n        /* \"#utility.yul\":23642:23762   */\n      jump(tag_637)\n    tag_639:\n        /* \"#utility.yul\":23582:23768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23774:24317   */\n    tag_380:\n        /* \"#utility.yul\":23875:23877   */\n      0x1f\n        /* \"#utility.yul\":23870:23873   */\n      dup3\n        /* \"#utility.yul\":23867:23878   */\n      gt\n        /* \"#utility.yul\":23864:24310   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":23909:23947   */\n      tag_643\n        /* \"#utility.yul\":23941:23946   */\n      dup2\n        /* \"#utility.yul\":23909:23947   */\n      tag_370\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":23993:24022   */\n      tag_644\n        /* \"#utility.yul\":24011:24021   */\n      dup5\n        /* \"#utility.yul\":23993:24022   */\n      tag_371\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":23983:23991   */\n      dup2\n        /* \"#utility.yul\":23979:24023   */\n      add\n        /* \"#utility.yul\":24176:24178   */\n      0x20\n        /* \"#utility.yul\":24164:24174   */\n      dup6\n        /* \"#utility.yul\":24161:24179   */\n      lt\n        /* \"#utility.yul\":24158:24207   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":24197:24205   */\n      dup2\n        /* \"#utility.yul\":24182:24205   */\n      swap1\n      pop\n        /* \"#utility.yul\":24158:24207   */\n    tag_645:\n        /* \"#utility.yul\":24220:24300   */\n      tag_646\n        /* \"#utility.yul\":24276:24298   */\n      tag_647\n        /* \"#utility.yul\":24294:24297   */\n      dup6\n        /* \"#utility.yul\":24276:24298   */\n      tag_371\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":24266:24274   */\n      dup4\n        /* \"#utility.yul\":24262:24299   */\n      add\n        /* \"#utility.yul\":24249:24260   */\n      dup3\n        /* \"#utility.yul\":24220:24300   */\n      tag_379\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":23879:24310   */\n      pop\n      pop\n        /* \"#utility.yul\":23864:24310   */\n    tag_642:\n        /* \"#utility.yul\":23774:24317   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24323:24440   */\n    tag_381:\n        /* \"#utility.yul\":24377:24385   */\n      0x00\n        /* \"#utility.yul\":24427:24432   */\n      dup3\n        /* \"#utility.yul\":24421:24425   */\n      dup3\n        /* \"#utility.yul\":24417:24433   */\n      shr\n        /* \"#utility.yul\":24396:24433   */\n      swap1\n      pop\n        /* \"#utility.yul\":24323:24440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24446:24615   */\n    tag_382:\n        /* \"#utility.yul\":24490:24496   */\n      0x00\n        /* \"#utility.yul\":24523:24574   */\n      tag_650\n        /* \"#utility.yul\":24571:24572   */\n      0x00\n        /* \"#utility.yul\":24567:24573   */\n      not\n        /* \"#utility.yul\":24559:24564   */\n      dup5\n        /* \"#utility.yul\":24556:24557   */\n      0x08\n        /* \"#utility.yul\":24552:24565   */\n      mul\n        /* \"#utility.yul\":24523:24574   */\n      tag_381\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":24519:24575   */\n      not\n        /* \"#utility.yul\":24604:24608   */\n      dup1\n        /* \"#utility.yul\":24598:24602   */\n      dup4\n        /* \"#utility.yul\":24594:24609   */\n      and\n        /* \"#utility.yul\":24584:24609   */\n      swap2\n      pop\n        /* \"#utility.yul\":24497:24615   */\n      pop\n        /* \"#utility.yul\":24446:24615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24620:24915   */\n    tag_383:\n        /* \"#utility.yul\":24696:24700   */\n      0x00\n        /* \"#utility.yul\":24842:24871   */\n      tag_652\n        /* \"#utility.yul\":24867:24870   */\n      dup4\n        /* \"#utility.yul\":24861:24865   */\n      dup4\n        /* \"#utility.yul\":24842:24871   */\n      tag_382\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":24834:24871   */\n      swap2\n      pop\n        /* \"#utility.yul\":24904:24907   */\n      dup3\n        /* \"#utility.yul\":24901:24902   */\n      0x02\n        /* \"#utility.yul\":24897:24908   */\n      mul\n        /* \"#utility.yul\":24891:24895   */\n      dup3\n        /* \"#utility.yul\":24888:24909   */\n      or\n        /* \"#utility.yul\":24880:24909   */\n      swap1\n      pop\n        /* \"#utility.yul\":24620:24915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24920:26315   */\n    tag_201:\n        /* \"#utility.yul\":25037:25074   */\n      tag_654\n        /* \"#utility.yul\":25070:25073   */\n      dup3\n        /* \"#utility.yul\":25037:25074   */\n      tag_342\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":25139:25157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25131:25137   */\n      dup2\n        /* \"#utility.yul\":25128:25158   */\n      gt\n        /* \"#utility.yul\":25125:25181   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":25161:25179   */\n      tag_656\n      tag_334\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":25125:25181   */\n    tag_655:\n        /* \"#utility.yul\":25205:25243   */\n      tag_657\n        /* \"#utility.yul\":25237:25241   */\n      dup3\n        /* \"#utility.yul\":25231:25242   */\n      sload\n        /* \"#utility.yul\":25205:25243   */\n      tag_246\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":25290:25357   */\n      tag_658\n        /* \"#utility.yul\":25350:25356   */\n      dup3\n        /* \"#utility.yul\":25342:25348   */\n      dup3\n        /* \"#utility.yul\":25336:25340   */\n      dup6\n        /* \"#utility.yul\":25290:25357   */\n      tag_380\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":25384:25385   */\n      0x00\n        /* \"#utility.yul\":25408:25412   */\n      0x20\n        /* \"#utility.yul\":25395:25412   */\n      swap1\n      pop\n        /* \"#utility.yul\":25440:25442   */\n      0x1f\n        /* \"#utility.yul\":25432:25438   */\n      dup4\n        /* \"#utility.yul\":25429:25443   */\n      gt\n        /* \"#utility.yul\":25457:25458   */\n      0x01\n        /* \"#utility.yul\":25452:26070   */\n      dup2\n      eq\n      tag_660\n      jumpi\n        /* \"#utility.yul\":26114:26115   */\n      0x00\n        /* \"#utility.yul\":26131:26137   */\n      dup5\n        /* \"#utility.yul\":26128:26205   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":26180:26189   */\n      dup3\n        /* \"#utility.yul\":26175:26178   */\n      dup8\n        /* \"#utility.yul\":26171:26190   */\n      add\n        /* \"#utility.yul\":26165:26191   */\n      mload\n        /* \"#utility.yul\":26156:26191   */\n      swap1\n      pop\n        /* \"#utility.yul\":26128:26205   */\n    tag_661:\n        /* \"#utility.yul\":26231:26298   */\n      tag_662\n        /* \"#utility.yul\":26291:26297   */\n      dup6\n        /* \"#utility.yul\":26284:26289   */\n      dup3\n        /* \"#utility.yul\":26231:26298   */\n      tag_383\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":26225:26229   */\n      dup7\n        /* \"#utility.yul\":26218:26299   */\n      sstore\n        /* \"#utility.yul\":26087:26309   */\n      pop\n        /* \"#utility.yul\":25422:26309   */\n      jump(tag_659)\n        /* \"#utility.yul\":25452:26070   */\n    tag_660:\n        /* \"#utility.yul\":25504:25508   */\n      0x1f\n        /* \"#utility.yul\":25500:25509   */\n      not\n        /* \"#utility.yul\":25492:25498   */\n      dup5\n        /* \"#utility.yul\":25488:25510   */\n      and\n        /* \"#utility.yul\":25538:25575   */\n      tag_663\n        /* \"#utility.yul\":25570:25574   */\n      dup7\n        /* \"#utility.yul\":25538:25575   */\n      tag_370\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":25597:25598   */\n      0x00\n        /* \"#utility.yul\":25611:25819   */\n    tag_664:\n        /* \"#utility.yul\":25625:25632   */\n      dup3\n        /* \"#utility.yul\":25622:25623   */\n      dup2\n        /* \"#utility.yul\":25619:25633   */\n      lt\n        /* \"#utility.yul\":25611:25819   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":25704:25713   */\n      dup5\n        /* \"#utility.yul\":25699:25702   */\n      dup10\n        /* \"#utility.yul\":25695:25714   */\n      add\n        /* \"#utility.yul\":25689:25715   */\n      mload\n        /* \"#utility.yul\":25681:25687   */\n      dup3\n        /* \"#utility.yul\":25674:25716   */\n      sstore\n        /* \"#utility.yul\":25755:25756   */\n      0x01\n        /* \"#utility.yul\":25747:25753   */\n      dup3\n        /* \"#utility.yul\":25743:25757   */\n      add\n        /* \"#utility.yul\":25733:25757   */\n      swap2\n      pop\n        /* \"#utility.yul\":25802:25804   */\n      0x20\n        /* \"#utility.yul\":25791:25800   */\n      dup6\n        /* \"#utility.yul\":25787:25805   */\n      add\n        /* \"#utility.yul\":25774:25805   */\n      swap5\n      pop\n        /* \"#utility.yul\":25648:25652   */\n      0x20\n        /* \"#utility.yul\":25645:25646   */\n      dup2\n        /* \"#utility.yul\":25641:25653   */\n      add\n        /* \"#utility.yul\":25636:25653   */\n      swap1\n      pop\n        /* \"#utility.yul\":25611:25819   */\n      jump(tag_664)\n    tag_666:\n        /* \"#utility.yul\":25847:25853   */\n      dup7\n        /* \"#utility.yul\":25838:25845   */\n      dup4\n        /* \"#utility.yul\":25835:25854   */\n      lt\n        /* \"#utility.yul\":25832:26011   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":25905:25914   */\n      dup5\n        /* \"#utility.yul\":25900:25903   */\n      dup10\n        /* \"#utility.yul\":25896:25915   */\n      add\n        /* \"#utility.yul\":25890:25916   */\n      mload\n        /* \"#utility.yul\":25948:25996   */\n      tag_668\n        /* \"#utility.yul\":25990:25994   */\n      0x1f\n        /* \"#utility.yul\":25982:25988   */\n      dup10\n        /* \"#utility.yul\":25978:25995   */\n      and\n        /* \"#utility.yul\":25967:25976   */\n      dup3\n        /* \"#utility.yul\":25948:25996   */\n      tag_382\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":25940:25946   */\n      dup4\n        /* \"#utility.yul\":25933:25997   */\n      sstore\n        /* \"#utility.yul\":25855:26011   */\n      pop\n        /* \"#utility.yul\":25832:26011   */\n    tag_667:\n        /* \"#utility.yul\":26057:26058   */\n      0x01\n        /* \"#utility.yul\":26053:26054   */\n      0x02\n        /* \"#utility.yul\":26045:26051   */\n      dup9\n        /* \"#utility.yul\":26041:26055   */\n      mul\n        /* \"#utility.yul\":26037:26059   */\n      add\n        /* \"#utility.yul\":26031:26035   */\n      dup9\n        /* \"#utility.yul\":26024:26060   */\n      sstore\n        /* \"#utility.yul\":25459:26070   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25422:26309   */\n    tag_659:\n      pop\n        /* \"#utility.yul\":25012:26315   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24920:26315   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26321:26744   */\n    tag_203:\n        /* \"#utility.yul\":26462:26466   */\n      0x00\n        /* \"#utility.yul\":26500:26502   */\n      0x40\n        /* \"#utility.yul\":26489:26498   */\n      dup3\n        /* \"#utility.yul\":26485:26503   */\n      add\n        /* \"#utility.yul\":26477:26503   */\n      swap1\n      pop\n        /* \"#utility.yul\":26549:26558   */\n      dup2\n        /* \"#utility.yul\":26543:26547   */\n      dup2\n        /* \"#utility.yul\":26539:26559   */\n      sub\n        /* \"#utility.yul\":26535:26536   */\n      0x00\n        /* \"#utility.yul\":26524:26533   */\n      dup4\n        /* \"#utility.yul\":26520:26537   */\n      add\n        /* \"#utility.yul\":26513:26560   */\n      mstore\n        /* \"#utility.yul\":26577:26655   */\n      tag_670\n        /* \"#utility.yul\":26650:26654   */\n      dup2\n        /* \"#utility.yul\":26641:26647   */\n      dup6\n        /* \"#utility.yul\":26577:26655   */\n      tag_345\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":26569:26655   */\n      swap1\n      pop\n        /* \"#utility.yul\":26665:26737   */\n      tag_671\n        /* \"#utility.yul\":26733:26735   */\n      0x20\n        /* \"#utility.yul\":26722:26731   */\n      dup4\n        /* \"#utility.yul\":26718:26736   */\n      add\n        /* \"#utility.yul\":26709:26715   */\n      dup5\n        /* \"#utility.yul\":26665:26737   */\n      tag_318\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":26321:26744   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26750:26893   */\n    tag_384:\n        /* \"#utility.yul\":26807:26812   */\n      0x00\n        /* \"#utility.yul\":26838:26844   */\n      dup2\n        /* \"#utility.yul\":26832:26845   */\n      mload\n        /* \"#utility.yul\":26823:26845   */\n      swap1\n      pop\n        /* \"#utility.yul\":26854:26887   */\n      tag_673\n        /* \"#utility.yul\":26881:26886   */\n      dup2\n        /* \"#utility.yul\":26854:26887   */\n      tag_323\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":26750:26893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26899:27250   */\n    tag_225:\n        /* \"#utility.yul\":26969:26975   */\n      0x00\n        /* \"#utility.yul\":27018:27020   */\n      0x20\n        /* \"#utility.yul\":27006:27015   */\n      dup3\n        /* \"#utility.yul\":26997:27004   */\n      dup5\n        /* \"#utility.yul\":26993:27016   */\n      sub\n        /* \"#utility.yul\":26989:27021   */\n      slt\n        /* \"#utility.yul\":26986:27105   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":27024:27103   */\n      tag_676\n      tag_310\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":26986:27105   */\n    tag_675:\n        /* \"#utility.yul\":27144:27145   */\n      0x00\n        /* \"#utility.yul\":27169:27233   */\n      tag_677\n        /* \"#utility.yul\":27225:27232   */\n      dup5\n        /* \"#utility.yul\":27216:27222   */\n      dup3\n        /* \"#utility.yul\":27205:27214   */\n      dup6\n        /* \"#utility.yul\":27201:27223   */\n      add\n        /* \"#utility.yul\":27169:27233   */\n      tag_384\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":27159:27233   */\n      swap2\n      pop\n        /* \"#utility.yul\":27115:27243   */\n      pop\n        /* \"#utility.yul\":26899:27250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27256:27427   */\n    tag_385:\n        /* \"#utility.yul\":27396:27419   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":27392:27393   */\n      0x00\n        /* \"#utility.yul\":27384:27390   */\n      dup3\n        /* \"#utility.yul\":27380:27394   */\n      add\n        /* \"#utility.yul\":27373:27420   */\n      mstore\n        /* \"#utility.yul\":27256:27427   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27433:27799   */\n    tag_386:\n        /* \"#utility.yul\":27575:27578   */\n      0x00\n        /* \"#utility.yul\":27596:27663   */\n      tag_680\n        /* \"#utility.yul\":27660:27662   */\n      0x15\n        /* \"#utility.yul\":27655:27658   */\n      dup4\n        /* \"#utility.yul\":27596:27663   */\n      tag_343\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":27589:27663   */\n      swap2\n      pop\n        /* \"#utility.yul\":27672:27765   */\n      tag_681\n        /* \"#utility.yul\":27761:27764   */\n      dup3\n        /* \"#utility.yul\":27672:27765   */\n      tag_385\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":27790:27792   */\n      0x20\n        /* \"#utility.yul\":27785:27788   */\n      dup3\n        /* \"#utility.yul\":27781:27793   */\n      add\n        /* \"#utility.yul\":27774:27793   */\n      swap1\n      pop\n        /* \"#utility.yul\":27433:27799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27805:28224   */\n    tag_228:\n        /* \"#utility.yul\":27971:27975   */\n      0x00\n        /* \"#utility.yul\":28009:28011   */\n      0x20\n        /* \"#utility.yul\":27998:28007   */\n      dup3\n        /* \"#utility.yul\":27994:28012   */\n      add\n        /* \"#utility.yul\":27986:28012   */\n      swap1\n      pop\n        /* \"#utility.yul\":28058:28067   */\n      dup2\n        /* \"#utility.yul\":28052:28056   */\n      dup2\n        /* \"#utility.yul\":28048:28068   */\n      sub\n        /* \"#utility.yul\":28044:28045   */\n      0x00\n        /* \"#utility.yul\":28033:28042   */\n      dup4\n        /* \"#utility.yul\":28029:28046   */\n      add\n        /* \"#utility.yul\":28022:28069   */\n      mstore\n        /* \"#utility.yul\":28086:28217   */\n      tag_683\n        /* \"#utility.yul\":28212:28216   */\n      dup2\n        /* \"#utility.yul\":28086:28217   */\n      tag_386\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":28078:28217   */\n      swap1\n      pop\n        /* \"#utility.yul\":27805:28224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28230:28405   */\n    tag_387:\n        /* \"#utility.yul\":28370:28397   */\n      0x4e6f2072656d61696e696e672041504920726571756573747300000000000000\n        /* \"#utility.yul\":28366:28367   */\n      0x00\n        /* \"#utility.yul\":28358:28364   */\n      dup3\n        /* \"#utility.yul\":28354:28368   */\n      add\n        /* \"#utility.yul\":28347:28398   */\n      mstore\n        /* \"#utility.yul\":28230:28405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28411:28777   */\n    tag_388:\n        /* \"#utility.yul\":28553:28556   */\n      0x00\n        /* \"#utility.yul\":28574:28641   */\n      tag_686\n        /* \"#utility.yul\":28638:28640   */\n      0x19\n        /* \"#utility.yul\":28633:28636   */\n      dup4\n        /* \"#utility.yul\":28574:28641   */\n      tag_343\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":28567:28641   */\n      swap2\n      pop\n        /* \"#utility.yul\":28650:28743   */\n      tag_687\n        /* \"#utility.yul\":28739:28742   */\n      dup3\n        /* \"#utility.yul\":28650:28743   */\n      tag_387\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":28768:28770   */\n      0x20\n        /* \"#utility.yul\":28763:28766   */\n      dup3\n        /* \"#utility.yul\":28759:28771   */\n      add\n        /* \"#utility.yul\":28752:28771   */\n      swap1\n      pop\n        /* \"#utility.yul\":28411:28777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28783:29202   */\n    tag_241:\n        /* \"#utility.yul\":28949:28953   */\n      0x00\n        /* \"#utility.yul\":28987:28989   */\n      0x20\n        /* \"#utility.yul\":28976:28985   */\n      dup3\n        /* \"#utility.yul\":28972:28990   */\n      add\n        /* \"#utility.yul\":28964:28990   */\n      swap1\n      pop\n        /* \"#utility.yul\":29036:29045   */\n      dup2\n        /* \"#utility.yul\":29030:29034   */\n      dup2\n        /* \"#utility.yul\":29026:29046   */\n      sub\n        /* \"#utility.yul\":29022:29023   */\n      0x00\n        /* \"#utility.yul\":29011:29020   */\n      dup4\n        /* \"#utility.yul\":29007:29024   */\n      add\n        /* \"#utility.yul\":29000:29047   */\n      mstore\n        /* \"#utility.yul\":29064:29195   */\n      tag_689\n        /* \"#utility.yul\":29190:29194   */\n      dup2\n        /* \"#utility.yul\":29064:29195   */\n      tag_388\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":29056:29195   */\n      swap1\n      pop\n        /* \"#utility.yul\":28783:29202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29208:29402   */\n    tag_243:\n        /* \"#utility.yul\":29248:29252   */\n      0x00\n        /* \"#utility.yul\":29268:29288   */\n      tag_691\n        /* \"#utility.yul\":29286:29287   */\n      dup3\n        /* \"#utility.yul\":29268:29288   */\n      tag_317\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":29263:29288   */\n      swap2\n      pop\n        /* \"#utility.yul\":29302:29322   */\n      tag_692\n        /* \"#utility.yul\":29320:29321   */\n      dup4\n        /* \"#utility.yul\":29302:29322   */\n      tag_317\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":29297:29322   */\n      swap3\n      pop\n        /* \"#utility.yul\":29346:29347   */\n      dup3\n        /* \"#utility.yul\":29343:29344   */\n      dup3\n        /* \"#utility.yul\":29339:29348   */\n      sub\n        /* \"#utility.yul\":29331:29348   */\n      swap1\n      pop\n        /* \"#utility.yul\":29370:29371   */\n      dup2\n        /* \"#utility.yul\":29364:29368   */\n      dup2\n        /* \"#utility.yul\":29361:29372   */\n      gt\n        /* \"#utility.yul\":29358:29395   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":29375:29393   */\n      tag_694\n      tag_361\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":29358:29395   */\n    tag_693:\n        /* \"#utility.yul\":29208:29402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29408:29577   */\n    tag_389:\n        /* \"#utility.yul\":29548:29569   */\n      0x415049206973207374696c6c2061637469766500000000000000000000000000\n        /* \"#utility.yul\":29544:29545   */\n      0x00\n        /* \"#utility.yul\":29536:29542   */\n      dup3\n        /* \"#utility.yul\":29532:29546   */\n      add\n        /* \"#utility.yul\":29525:29570   */\n      mstore\n        /* \"#utility.yul\":29408:29577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29583:29949   */\n    tag_390:\n        /* \"#utility.yul\":29725:29728   */\n      0x00\n        /* \"#utility.yul\":29746:29813   */\n      tag_697\n        /* \"#utility.yul\":29810:29812   */\n      0x13\n        /* \"#utility.yul\":29805:29808   */\n      dup4\n        /* \"#utility.yul\":29746:29813   */\n      tag_343\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":29739:29813   */\n      swap2\n      pop\n        /* \"#utility.yul\":29822:29915   */\n      tag_698\n        /* \"#utility.yul\":29911:29914   */\n      dup3\n        /* \"#utility.yul\":29822:29915   */\n      tag_389\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":29940:29942   */\n      0x20\n        /* \"#utility.yul\":29935:29938   */\n      dup3\n        /* \"#utility.yul\":29931:29943   */\n      add\n        /* \"#utility.yul\":29924:29943   */\n      swap1\n      pop\n        /* \"#utility.yul\":29583:29949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29955:30374   */\n    tag_256:\n        /* \"#utility.yul\":30121:30125   */\n      0x00\n        /* \"#utility.yul\":30159:30161   */\n      0x20\n        /* \"#utility.yul\":30148:30157   */\n      dup3\n        /* \"#utility.yul\":30144:30162   */\n      add\n        /* \"#utility.yul\":30136:30162   */\n      swap1\n      pop\n        /* \"#utility.yul\":30208:30217   */\n      dup2\n        /* \"#utility.yul\":30202:30206   */\n      dup2\n        /* \"#utility.yul\":30198:30218   */\n      sub\n        /* \"#utility.yul\":30194:30195   */\n      0x00\n        /* \"#utility.yul\":30183:30192   */\n      dup4\n        /* \"#utility.yul\":30179:30196   */\n      add\n        /* \"#utility.yul\":30172:30219   */\n      mstore\n        /* \"#utility.yul\":30236:30367   */\n      tag_700\n        /* \"#utility.yul\":30362:30366   */\n      dup2\n        /* \"#utility.yul\":30236:30367   */\n      tag_390\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":30228:30367   */\n      swap1\n      pop\n        /* \"#utility.yul\":29955:30374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30380:30551   */\n    tag_391:\n        /* \"#utility.yul\":30520:30543   */\n      0x4e6f20726571756573747320746f20726566756e640000000000000000000000\n        /* \"#utility.yul\":30516:30517   */\n      0x00\n        /* \"#utility.yul\":30508:30514   */\n      dup3\n        /* \"#utility.yul\":30504:30518   */\n      add\n        /* \"#utility.yul\":30497:30544   */\n      mstore\n        /* \"#utility.yul\":30380:30551   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30557:30923   */\n    tag_392:\n        /* \"#utility.yul\":30699:30702   */\n      0x00\n        /* \"#utility.yul\":30720:30787   */\n      tag_703\n        /* \"#utility.yul\":30784:30786   */\n      0x15\n        /* \"#utility.yul\":30779:30782   */\n      dup4\n        /* \"#utility.yul\":30720:30787   */\n      tag_343\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":30713:30787   */\n      swap2\n      pop\n        /* \"#utility.yul\":30796:30889   */\n      tag_704\n        /* \"#utility.yul\":30885:30888   */\n      dup3\n        /* \"#utility.yul\":30796:30889   */\n      tag_391\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":30914:30916   */\n      0x20\n        /* \"#utility.yul\":30909:30912   */\n      dup3\n        /* \"#utility.yul\":30905:30917   */\n      add\n        /* \"#utility.yul\":30898:30917   */\n      swap1\n      pop\n        /* \"#utility.yul\":30557:30923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30929:31348   */\n    tag_259:\n        /* \"#utility.yul\":31095:31099   */\n      0x00\n        /* \"#utility.yul\":31133:31135   */\n      0x20\n        /* \"#utility.yul\":31122:31131   */\n      dup3\n        /* \"#utility.yul\":31118:31136   */\n      add\n        /* \"#utility.yul\":31110:31136   */\n      swap1\n      pop\n        /* \"#utility.yul\":31182:31191   */\n      dup2\n        /* \"#utility.yul\":31176:31180   */\n      dup2\n        /* \"#utility.yul\":31172:31192   */\n      sub\n        /* \"#utility.yul\":31168:31169   */\n      0x00\n        /* \"#utility.yul\":31157:31166   */\n      dup4\n        /* \"#utility.yul\":31153:31170   */\n      add\n        /* \"#utility.yul\":31146:31193   */\n      mstore\n        /* \"#utility.yul\":31210:31341   */\n      tag_706\n        /* \"#utility.yul\":31336:31340   */\n      dup2\n        /* \"#utility.yul\":31210:31341   */\n      tag_392\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":31202:31341   */\n      swap1\n      pop\n        /* \"#utility.yul\":30929:31348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31354:31796   */\n    tag_287:\n        /* \"#utility.yul\":31503:31507   */\n      0x00\n        /* \"#utility.yul\":31541:31543   */\n      0x60\n        /* \"#utility.yul\":31530:31539   */\n      dup3\n        /* \"#utility.yul\":31526:31544   */\n      add\n        /* \"#utility.yul\":31518:31544   */\n      swap1\n      pop\n        /* \"#utility.yul\":31554:31625   */\n      tag_708\n        /* \"#utility.yul\":31622:31623   */\n      0x00\n        /* \"#utility.yul\":31611:31620   */\n      dup4\n        /* \"#utility.yul\":31607:31624   */\n      add\n        /* \"#utility.yul\":31598:31604   */\n      dup7\n        /* \"#utility.yul\":31554:31625   */\n      tag_341\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":31635:31707   */\n      tag_709\n        /* \"#utility.yul\":31703:31705   */\n      0x20\n        /* \"#utility.yul\":31692:31701   */\n      dup4\n        /* \"#utility.yul\":31688:31706   */\n      add\n        /* \"#utility.yul\":31679:31685   */\n      dup6\n        /* \"#utility.yul\":31635:31707   */\n      tag_341\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":31717:31789   */\n      tag_710\n        /* \"#utility.yul\":31785:31787   */\n      0x40\n        /* \"#utility.yul\":31774:31783   */\n      dup4\n        /* \"#utility.yul\":31770:31788   */\n      add\n        /* \"#utility.yul\":31761:31767   */\n      dup5\n        /* \"#utility.yul\":31717:31789   */\n      tag_318\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":31354:31796   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31802:31983   */\n    tag_393:\n        /* \"#utility.yul\":31942:31975   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":31938:31939   */\n      0x00\n        /* \"#utility.yul\":31930:31936   */\n      dup3\n        /* \"#utility.yul\":31926:31940   */\n      add\n        /* \"#utility.yul\":31919:31976   */\n      mstore\n        /* \"#utility.yul\":31802:31983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31989:32355   */\n    tag_394:\n        /* \"#utility.yul\":32131:32134   */\n      0x00\n        /* \"#utility.yul\":32152:32219   */\n      tag_713\n        /* \"#utility.yul\":32216:32218   */\n      0x1f\n        /* \"#utility.yul\":32211:32214   */\n      dup4\n        /* \"#utility.yul\":32152:32219   */\n      tag_343\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":32145:32219   */\n      swap2\n      pop\n        /* \"#utility.yul\":32228:32321   */\n      tag_714\n        /* \"#utility.yul\":32317:32320   */\n      dup3\n        /* \"#utility.yul\":32228:32321   */\n      tag_393\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":32346:32348   */\n      0x20\n        /* \"#utility.yul\":32341:32344   */\n      dup3\n        /* \"#utility.yul\":32337:32349   */\n      add\n        /* \"#utility.yul\":32330:32349   */\n      swap1\n      pop\n        /* \"#utility.yul\":31989:32355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32361:32780   */\n    tag_292:\n        /* \"#utility.yul\":32527:32531   */\n      0x00\n        /* \"#utility.yul\":32565:32567   */\n      0x20\n        /* \"#utility.yul\":32554:32563   */\n      dup3\n        /* \"#utility.yul\":32550:32568   */\n      add\n        /* \"#utility.yul\":32542:32568   */\n      swap1\n      pop\n        /* \"#utility.yul\":32614:32623   */\n      dup2\n        /* \"#utility.yul\":32608:32612   */\n      dup2\n        /* \"#utility.yul\":32604:32624   */\n      sub\n        /* \"#utility.yul\":32600:32601   */\n      0x00\n        /* \"#utility.yul\":32589:32598   */\n      dup4\n        /* \"#utility.yul\":32585:32602   */\n      add\n        /* \"#utility.yul\":32578:32625   */\n      mstore\n        /* \"#utility.yul\":32642:32773   */\n      tag_716\n        /* \"#utility.yul\":32768:32772   */\n      dup2\n        /* \"#utility.yul\":32642:32773   */\n      tag_394\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":32634:32773   */\n      swap1\n      pop\n        /* \"#utility.yul\":32361:32780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32786:33118   */\n    tag_296:\n        /* \"#utility.yul\":32907:32911   */\n      0x00\n        /* \"#utility.yul\":32945:32947   */\n      0x40\n        /* \"#utility.yul\":32934:32943   */\n      dup3\n        /* \"#utility.yul\":32930:32948   */\n      add\n        /* \"#utility.yul\":32922:32948   */\n      swap1\n      pop\n        /* \"#utility.yul\":32958:33029   */\n      tag_718\n        /* \"#utility.yul\":33026:33027   */\n      0x00\n        /* \"#utility.yul\":33015:33024   */\n      dup4\n        /* \"#utility.yul\":33011:33028   */\n      add\n        /* \"#utility.yul\":33002:33008   */\n      dup6\n        /* \"#utility.yul\":32958:33029   */\n      tag_341\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":33039:33111   */\n      tag_719\n        /* \"#utility.yul\":33107:33109   */\n      0x20\n        /* \"#utility.yul\":33096:33105   */\n      dup4\n        /* \"#utility.yul\":33092:33110   */\n      add\n        /* \"#utility.yul\":33083:33089   */\n      dup5\n        /* \"#utility.yul\":33039:33111   */\n      tag_318\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":32786:33118   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33124:33456   */\n    tag_302:\n        /* \"#utility.yul\":33245:33249   */\n      0x00\n        /* \"#utility.yul\":33283:33285   */\n      0x40\n        /* \"#utility.yul\":33272:33281   */\n      dup3\n        /* \"#utility.yul\":33268:33286   */\n      add\n        /* \"#utility.yul\":33260:33286   */\n      swap1\n      pop\n        /* \"#utility.yul\":33296:33367   */\n      tag_721\n        /* \"#utility.yul\":33364:33365   */\n      0x00\n        /* \"#utility.yul\":33353:33362   */\n      dup4\n        /* \"#utility.yul\":33349:33366   */\n      add\n        /* \"#utility.yul\":33340:33346   */\n      dup6\n        /* \"#utility.yul\":33296:33367   */\n      tag_341\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":33377:33449   */\n      tag_722\n        /* \"#utility.yul\":33445:33447   */\n      0x20\n        /* \"#utility.yul\":33434:33443   */\n      dup4\n        /* \"#utility.yul\":33430:33448   */\n      add\n        /* \"#utility.yul\":33421:33427   */\n      dup5\n        /* \"#utility.yul\":33377:33449   */\n      tag_328\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":33124:33456   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220031f819e2e9209180c39d2abecff3feee7ba793989a7254cbce4091c45ed843a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1232": {
									"entryPoint": null,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 356,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1032": {
									"entryPoint": 701,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 601,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$611_fromMemory": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$611_fromMemory": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$611": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$611": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2548:12",
										"nodeType": "YulBlock",
										"src": "0:2548:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "627:51:12",
													"nodeType": "YulBlock",
													"src": "627:51:12",
													"statements": [
														{
															"nativeSrc": "637:35:12",
															"nodeType": "YulAssignment",
															"src": "637:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:12"
																},
																"nativeSrc": "648:24:12",
																"nodeType": "YulFunctionCall",
																"src": "648:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$611",
												"nativeSrc": "568:110:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:12",
														"nodeType": "YulTypedName",
														"src": "609:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:12",
														"nodeType": "YulTypedName",
														"src": "619:7:12",
														"type": ""
													}
												],
												"src": "568:110:12"
											},
											{
												"body": {
													"nativeSrc": "741:93:12",
													"nodeType": "YulBlock",
													"src": "741:93:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:12",
																"nodeType": "YulBlock",
																"src": "812:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:12",
																					"nodeType": "YulLiteral",
																					"src": "821:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:12",
																					"nodeType": "YulLiteral",
																					"src": "824:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:12"
																			},
																			"nativeSrc": "814:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:12"
																		},
																		"nativeSrc": "814:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$611",
																					"nativeSrc": "771:31:12",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:12"
																				},
																				"nativeSrc": "771:38:12",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:12"
																		},
																		"nativeSrc": "761:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:12"
																},
																"nativeSrc": "754:57:12",
																"nodeType": "YulFunctionCall",
																"src": "754:57:12"
															},
															"nativeSrc": "751:77:12",
															"nodeType": "YulIf",
															"src": "751:77:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$611",
												"nativeSrc": "684:150:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:12",
														"nodeType": "YulTypedName",
														"src": "734:5:12",
														"type": ""
													}
												],
												"src": "684:150:12"
											},
											{
												"body": {
													"nativeSrc": "917:94:12",
													"nodeType": "YulBlock",
													"src": "917:94:12",
													"statements": [
														{
															"nativeSrc": "927:22:12",
															"nodeType": "YulAssignment",
															"src": "927:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:12"
																},
																"nativeSrc": "936:13:12",
																"nodeType": "YulFunctionCall",
																"src": "936:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$611",
																	"nativeSrc": "958:40:12",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:12"
																},
																"nativeSrc": "958:47:12",
																"nodeType": "YulFunctionCall",
																"src": "958:47:12"
															},
															"nativeSrc": "958:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$611_fromMemory",
												"nativeSrc": "840:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:12",
														"nodeType": "YulTypedName",
														"src": "895:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:12",
														"nodeType": "YulTypedName",
														"src": "903:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:12",
														"nodeType": "YulTypedName",
														"src": "911:5:12",
														"type": ""
													}
												],
												"src": "840:171:12"
											},
											{
												"body": {
													"nativeSrc": "1108:288:12",
													"nodeType": "YulBlock",
													"src": "1108:288:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:12",
																"nodeType": "YulBlock",
																"src": "1154:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:12"
																			},
																			"nativeSrc": "1156:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:12"
																		},
																		"nativeSrc": "1156:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:12"
																		},
																		"nativeSrc": "1125:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:12"
																},
																"nativeSrc": "1121:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:12"
															},
															"nativeSrc": "1118:119:12",
															"nodeType": "YulIf",
															"src": "1118:119:12"
														},
														{
															"nativeSrc": "1247:142:12",
															"nodeType": "YulBlock",
															"src": "1247:142:12",
															"statements": [
																{
																	"nativeSrc": "1262:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:12",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:12"
																				},
																				"nativeSrc": "1347:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$611_fromMemory",
																			"nativeSrc": "1301:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:12"
																		},
																		"nativeSrc": "1301:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$611_fromMemory",
												"nativeSrc": "1017:379:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:12",
														"nodeType": "YulTypedName",
														"src": "1078:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:12",
														"nodeType": "YulTypedName",
														"src": "1089:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:12",
														"nodeType": "YulTypedName",
														"src": "1101:6:12",
														"type": ""
													}
												],
												"src": "1017:379:12"
											},
											{
												"body": {
													"nativeSrc": "1498:73:12",
													"nodeType": "YulBlock",
													"src": "1498:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1515:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1515:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1520:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1508:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:12"
																},
																"nativeSrc": "1508:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:19:12"
															},
															"nativeSrc": "1508:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1508:19:12"
														},
														{
															"nativeSrc": "1536:29:12",
															"nodeType": "YulAssignment",
															"src": "1536:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1555:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1560:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1560:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1551:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:12"
																},
																"nativeSrc": "1551:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1551:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1536:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1536:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1402:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1470:3:12",
														"nodeType": "YulTypedName",
														"src": "1470:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1475:6:12",
														"nodeType": "YulTypedName",
														"src": "1475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1486:11:12",
														"nodeType": "YulTypedName",
														"src": "1486:11:12",
														"type": ""
													}
												],
												"src": "1402:169:12"
											},
											{
												"body": {
													"nativeSrc": "1683:65:12",
													"nodeType": "YulBlock",
													"src": "1683:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1705:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1705:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1713:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1701:3:12"
																		},
																		"nativeSrc": "1701:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1701:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1717:23:12",
																		"nodeType": "YulLiteral",
																		"src": "1717:23:12",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:12"
																},
																"nativeSrc": "1694:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1694:47:12"
															},
															"nativeSrc": "1694:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1694:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1577:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1675:6:12",
														"nodeType": "YulTypedName",
														"src": "1675:6:12",
														"type": ""
													}
												],
												"src": "1577:171:12"
											},
											{
												"body": {
													"nativeSrc": "1900:220:12",
													"nodeType": "YulBlock",
													"src": "1900:220:12",
													"statements": [
														{
															"nativeSrc": "1910:74:12",
															"nodeType": "YulAssignment",
															"src": "1910:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1976:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1981:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1917:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:58:12"
																},
																"nativeSrc": "1917:67:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1910:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2082:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "1993:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "1993:88:12"
																},
																"nativeSrc": "1993:93:12",
																"nodeType": "YulFunctionCall",
																"src": "1993:93:12"
															},
															"nativeSrc": "1993:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "1993:93:12"
														},
														{
															"nativeSrc": "2095:19:12",
															"nodeType": "YulAssignment",
															"src": "2095:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2106:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2106:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2111:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2102:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:12"
																},
																"nativeSrc": "2102:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2102:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2095:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1754:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1888:3:12",
														"nodeType": "YulTypedName",
														"src": "1888:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1896:3:12",
														"nodeType": "YulTypedName",
														"src": "1896:3:12",
														"type": ""
													}
												],
												"src": "1754:366:12"
											},
											{
												"body": {
													"nativeSrc": "2297:248:12",
													"nodeType": "YulBlock",
													"src": "2297:248:12",
													"statements": [
														{
															"nativeSrc": "2307:26:12",
															"nodeType": "YulAssignment",
															"src": "2307:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2319:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2319:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2330:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2315:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:12"
																},
																"nativeSrc": "2315:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2315:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2307:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2365:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2365:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:12"
																		},
																		"nativeSrc": "2350:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2373:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2373:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2379:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:12"
																		},
																		"nativeSrc": "2369:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2369:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2343:6:12"
																},
																"nativeSrc": "2343:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2343:47:12"
															},
															"nativeSrc": "2343:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2343:47:12"
														},
														{
															"nativeSrc": "2399:139:12",
															"nodeType": "YulAssignment",
															"src": "2399:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2533:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2533:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2407:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "2407:124:12"
																},
																"nativeSrc": "2407:131:12",
																"nodeType": "YulFunctionCall",
																"src": "2407:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2399:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2399:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2126:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2277:9:12",
														"nodeType": "YulTypedName",
														"src": "2277:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2292:4:12",
														"nodeType": "YulTypedName",
														"src": "2292:4:12",
														"type": ""
													}
												],
												"src": "2126:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$611(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$611(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$611(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$611_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$611(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$611_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$611_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b506040516130a33803806130a383398181016040528101906100319190610333565b60015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009d906103b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012c5f801b3361016460201b60201c565b5061015d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361016460201b60201c565b50506103d6565b5f610175838361025960201b60201c565b61024f576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101ec6102bd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610253565b5f90505b92915050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102f1826102c8565b9050919050565b5f610302826102e7565b9050919050565b610312816102f8565b811461031c575f80fd5b50565b5f8151905061032d81610309565b92915050565b5f60208284031215610348576103476102c4565b5b5f6103558482850161031f565b91505092915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103a260158361035e565b91506103ad8261036e565b602082019050919050565b5f6020820190508181035f8301526103cf81610396565b9050919050565b608051612c926104115f395f818161099d01528181610dd901528181610f280152818161102a015281816115d501526116910152612c925ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c806375b238fc116100c157806391d148541161007a57806391d148541461036f578063a217fddf1461039f578063af6e5689146103bd578063bc39c0ef146103f0578063d547741f1461040c578063fc0c546a146104285761014b565b806375b238fc146102d5578063838c0557146102f35780638d1d44a91461030f5780638d8f2adb1461032b5780638da5cb5b146103355780638e04d8d8146103535761014b565b806324cce39f1161011357806324cce39f146102195780632f2ff15d1461023557806336568abe14610251578063400bb18d1461026d5780636d177a001461029d57806370480275146102b95761014b565b806301ffc9a71461014f578063099952c81461017f5780630cd2c4601461019d5780631785f53c146101cd578063248a9ca3146101e9575b5f80fd5b61016960048036038101906101649190611bb3565b610446565b6040516101769190611bf8565b60405180910390f35b6101876104bf565b6040516101949190611c29565b60405180910390f35b6101b760048036038101906101b29190611cc6565b6104c5565b6040516101c49190611bf8565b60405180910390f35b6101e760048036038101906101e29190611d04565b610565565b005b61020360048036038101906101fe9190611d62565b6105dd565b6040516102109190611d9c565b60405180910390f35b610233600480360381019061022e9190611ddf565b6105fa565b005b61024f600480360381019061024a9190611e1d565b61070e565b005b61026b60048036038101906102669190611e1d565b610730565b005b61028760048036038101906102829190611cc6565b6107ab565b6040516102949190611c29565b60405180910390f35b6102b760048036038101906102b29190611e5b565b610847565b005b6102d360048036038101906102ce9190611d04565b610ab5565b005b6102dd610b2d565b6040516102ea9190611d9c565b60405180910390f35b61030d60048036038101906103089190611fd5565b610b51565b005b61032960048036038101906103249190611e5b565b610d16565b005b610333610ed2565b005b61033d6110e8565b60405161034a919061203e565b60405180910390f35b61036d60048036038101906103689190612057565b61110d565b005b61038960048036038101906103849190611e1d565b6112f7565b6040516103969190611bf8565b60405180910390f35b6103a761135b565b6040516103b49190611d9c565b60405180910390f35b6103d760048036038101906103d29190612057565b611361565b6040516103e794939291906120e2565b60405180910390f35b61040a60048036038101906104059190612057565b61141f565b005b61042660048036038101906104219190611e1d565b61166d565b005b61043061168f565b60405161043d9190612187565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104b857506104b7826116b3565b5b9050919050565b60035481565b5f600354821061050a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610501906121ea565b60405180910390fd5b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8381526020019081526020015f2054421115905092915050565b6105715f801b336112f7565b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a790612252565b60405180910390fd5b6105da7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758261166d565b50565b5f60015f8381526020019081526020015f20600101549050919050565b6106247fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336112f7565b610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a906122ba565b60405180910390fd5b60035482106106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e906121ea565b60405180910390fd5b8060045f8481526020019081526020015f206003015f6101000a81548160ff021916908315150217905550817f33446694866e808b8c5250f584345f59832e7a6f29e30bf7a8ead78441940d9e826040516107029190611bf8565b60405180910390a25050565b610717826105dd565b6107208161171c565b61072a8383611730565b50505050565b610738611819565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079c576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107a68282611820565b505050565b5f60035482106107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e7906121ea565b60405180910390fd5b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8381526020019081526020015f2054905092915050565b600354821061088b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610882906121ea565b60405180910390fd5b5f81116108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490612348565b60405180910390fd5b5f60045f8481526020019081526020015f209050806003015f9054906101000a900460ff16610931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610928906123b0565b60405180910390fd5b5f82826001015461094291906123fb565b9050816001015483826109559190612469565b14610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c906124e3565b60405180910390fd5b6109e23330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661190a909392919063ffffffff16565b8260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8681526020019081526020015f205f828254610a3f9190612501565b9250508190555082826002015f828254610a599190612501565b92505081905550833373ffffffffffffffffffffffffffffffffffffffff167f651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b85604051610aa79190611c29565b60405180910390a350505050565b610ac15f801b336112f7565b610b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af790612252565b60405180910390fd5b610b2a7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758261070e565b50565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b610b7b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336112f7565b610bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb1906122ba565b60405180910390fd5b5f825111610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf49061257e565b60405180910390fd5b5f8111610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c369061260c565b60405180910390fd5b5f60035f815480929190610c529061262a565b91905055905060405180608001604052808481526020018381526020015f81526020016001151581525060045f8381526020019081526020015f205f820151815f019081610ca09190612862565b5060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050807f708b6915aad37cd1d491e64bf7a3b53c298499411a09f4b2315e30da638b5de28484604051610d09929190612931565b60405180910390a2505050565b6003548210610d5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d51906121ea565b60405180910390fd5b5f60045f8481526020019081526020015f209050806003015f9054906101000a900460ff16610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db5906123b0565b60405180910390fd5b5f828260010154610dcf91906123fb565b9050610e1e3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661190a909392919063ffffffff16565b8242610e2a9190612501565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8681526020019081526020015f2081905550833373ffffffffffffffffffffffffffffffffffffffff167f6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae0385604051610ec49190611c29565b60405180910390a350505050565b610ede5f801b336112f7565b610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490612252565b60405180910390fd5b610f2561198c565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f7f919061203e565b602060405180830381865afa158015610f9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbe9190612973565b90505f8111611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff9906129e8565b60405180910390fd5b61106e60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119d99092919063ffffffff16565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516110d59190611c29565b60405180910390a2506110e6611a58565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003548110611151576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611148906121ea565b60405180910390fd5b5f60045f8381526020019081526020015f209050806003015f9054906101000a900460ff166111b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ac906123b0565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8481526020019081526020015f205490505f8111611249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124090612a50565b60405180910390fd5b600160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8581526020019081526020015f205f8282546112a79190612a6e565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f7598affe5bb8b864e84f0b819f6b046054c8f0d6771e8ae086411b5dd2a8bc1260405160405180910390a3505050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b6004602052805f5260405f205f91509050805f0180546113809061269e565b80601f01602080910402602001604051908101604052809291908181526020018280546113ac9061269e565b80156113f75780601f106113ce576101008083540402835291602001916113f7565b820191905f5260205f20905b8154815290600101906020018083116113da57829003601f168201915b505050505090806001015490806002015490806003015f9054906101000a900460ff16905084565b6003548110611463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145a906121ea565b60405180910390fd5b60045f8281526020019081526020015f206003015f9054906101000a900460ff16156114c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bb90612aeb565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8381526020019081526020015f205490505f8111611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154f90612b53565b60405180910390fd5b5f60045f8481526020019081526020015f20600101548261157991906123fb565b90505f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8581526020019081526020015f208190555061161933827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119d99092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167f93c496f36ecab5f5583f216646cac3acb12a63aeacddb1a9251ceb81f0ee36e7836040516116609190611c29565b60405180910390a3505050565b611676826105dd565b61167f8161171c565b6116898383611820565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61172d81611728611819565b611a61565b50565b5f61173b83836112f7565b61180f576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117ac611819565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611813565b5f90505b92915050565b5f33905090565b5f61182b83836112f7565b15611900575f60015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061189d611819565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611904565b5f90505b92915050565b611986848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161193f93929190612b71565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ab2565b50505050565b60025f54036119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790612bf0565b60405180910390fd5b60025f81905550565b611a53838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611a0c929190612c0e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ab2565b505050565b60015f81905550565b611a6b82826112f7565b611aae5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611aa5929190612c35565b60405180910390fd5b5050565b5f8060205f8451602086015f885af180611ad1576040513d5f823e3d81fd5b3d92505f519150505f8214611aea576001811415611b05565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611b4757836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611b3e919061203e565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9281611b5e565b8114611b9c575f80fd5b50565b5f81359050611bad81611b89565b92915050565b5f60208284031215611bc857611bc7611b56565b5b5f611bd584828501611b9f565b91505092915050565b5f8115159050919050565b611bf281611bde565b82525050565b5f602082019050611c0b5f830184611be9565b92915050565b5f819050919050565b611c2381611c11565b82525050565b5f602082019050611c3c5f830184611c1a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c6b82611c42565b9050919050565b611c7b81611c61565b8114611c85575f80fd5b50565b5f81359050611c9681611c72565b92915050565b611ca581611c11565b8114611caf575f80fd5b50565b5f81359050611cc081611c9c565b92915050565b5f8060408385031215611cdc57611cdb611b56565b5b5f611ce985828601611c88565b9250506020611cfa85828601611cb2565b9150509250929050565b5f60208284031215611d1957611d18611b56565b5b5f611d2684828501611c88565b91505092915050565b5f819050919050565b611d4181611d2f565b8114611d4b575f80fd5b50565b5f81359050611d5c81611d38565b92915050565b5f60208284031215611d7757611d76611b56565b5b5f611d8484828501611d4e565b91505092915050565b611d9681611d2f565b82525050565b5f602082019050611daf5f830184611d8d565b92915050565b611dbe81611bde565b8114611dc8575f80fd5b50565b5f81359050611dd981611db5565b92915050565b5f8060408385031215611df557611df4611b56565b5b5f611e0285828601611cb2565b9250506020611e1385828601611dcb565b9150509250929050565b5f8060408385031215611e3357611e32611b56565b5b5f611e4085828601611d4e565b9250506020611e5185828601611c88565b9150509250929050565b5f8060408385031215611e7157611e70611b56565b5b5f611e7e85828601611cb2565b9250506020611e8f85828601611cb2565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ee782611ea1565b810181811067ffffffffffffffff82111715611f0657611f05611eb1565b5b80604052505050565b5f611f18611b4d565b9050611f248282611ede565b919050565b5f67ffffffffffffffff821115611f4357611f42611eb1565b5b611f4c82611ea1565b9050602081019050919050565b828183375f83830152505050565b5f611f79611f7484611f29565b611f0f565b905082815260208101848484011115611f9557611f94611e9d565b5b611fa0848285611f59565b509392505050565b5f82601f830112611fbc57611fbb611e99565b5b8135611fcc848260208601611f67565b91505092915050565b5f8060408385031215611feb57611fea611b56565b5b5f83013567ffffffffffffffff81111561200857612007611b5a565b5b61201485828601611fa8565b925050602061202585828601611cb2565b9150509250929050565b61203881611c61565b82525050565b5f6020820190506120515f83018461202f565b92915050565b5f6020828403121561206c5761206b611b56565b5b5f61207984828501611cb2565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6120b482612082565b6120be818561208c565b93506120ce81856020860161209c565b6120d781611ea1565b840191505092915050565b5f6080820190508181035f8301526120fa81876120aa565b90506121096020830186611c1a565b6121166040830185611c1a565b6121236060830184611be9565b95945050505050565b5f819050919050565b5f61214f61214a61214584611c42565b61212c565b611c42565b9050919050565b5f61216082612135565b9050919050565b5f61217182612156565b9050919050565b61218181612167565b82525050565b5f60208201905061219a5f830184612178565b92915050565b7f41504920646f6573206e6f7420657869737400000000000000000000000000005f82015250565b5f6121d460128361208c565b91506121df826121a0565b602082019050919050565b5f6020820190508181035f830152612201816121c8565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f61223c60178361208c565b915061224782612208565b602082019050919050565b5f6020820190508181035f83015261226981612230565b9050919050565b7f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000005f82015250565b5f6122a460168361208c565b91506122af82612270565b602082019050919050565b5f6020820190508181035f8301526122d181612298565b9050919050565b7f4e756d626572206f66207265717565737473206d7573742062652067726561745f8201527f6572207468616e207a65726f0000000000000000000000000000000000000000602082015250565b5f612332602c8361208c565b915061233d826122d8565b604082019050919050565b5f6020820190508181035f83015261235f81612326565b9050919050565b7f415049206973206e6f74206163746976650000000000000000000000000000005f82015250565b5f61239a60118361208c565b91506123a582612366565b602082019050919050565b5f6020820190508181035f8301526123c78161238e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61240582611c11565b915061241083611c11565b925082820261241e81611c11565b91508282048414831517612435576124346123ce565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61247382611c11565b915061247e83611c11565b92508261248e5761248d61243c565b5b828204905092915050565b7f4f766572666c6f772064657465637465640000000000000000000000000000005f82015250565b5f6124cd60118361208c565b91506124d882612499565b602082019050919050565b5f6020820190508181035f8301526124fa816124c1565b9050919050565b5f61250b82611c11565b915061251683611c11565b925082820190508082111561252e5761252d6123ce565b5b92915050565b7f415049206e616d652063616e6e6f7420626520656d70747900000000000000005f82015250565b5f61256860188361208c565b915061257382612534565b602082019050919050565b5f6020820190508181035f8301526125958161255c565b9050919050565b7f5072696365207065722072657175657374206d757374206265206772656174655f8201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b5f6125f6602b8361208c565b91506126018261259c565b604082019050919050565b5f6020820190508181035f830152612623816125ea565b9050919050565b5f61263482611c11565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612666576126656123ce565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806126b557607f821691505b6020821081036126c8576126c7612671565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261272a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126ef565b61273486836126ef565b95508019841693508086168417925050509392505050565b5f61276661276161275c84611c11565b61212c565b611c11565b9050919050565b5f819050919050565b61277f8361274c565b61279361278b8261276d565b8484546126fb565b825550505050565b5f90565b6127a761279b565b6127b2818484612776565b505050565b5b818110156127d5576127ca5f8261279f565b6001810190506127b8565b5050565b601f82111561281a576127eb816126ce565b6127f4846126e0565b81016020851015612803578190505b61281761280f856126e0565b8301826127b7565b50505b505050565b5f82821c905092915050565b5f61283a5f198460080261281f565b1980831691505092915050565b5f612852838361282b565b9150826002028217905092915050565b61286b82612082565b67ffffffffffffffff81111561288457612883611eb1565b5b61288e825461269e565b6128998282856127d9565b5f60209050601f8311600181146128ca575f84156128b8578287015190505b6128c28582612847565b865550612929565b601f1984166128d8866126ce565b5f5b828110156128ff578489015182556001820191506020850194506020810190506128da565b8683101561291c5784890151612918601f89168261282b565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f83015261294981856120aa565b90506129586020830184611c1a565b9392505050565b5f8151905061296d81611c9c565b92915050565b5f6020828403121561298857612987611b56565b5b5f6129958482850161295f565b91505092915050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6129d260158361208c565b91506129dd8261299e565b602082019050919050565b5f6020820190508181035f8301526129ff816129c6565b9050919050565b7f4e6f2072656d61696e696e6720415049207265717565737473000000000000005f82015250565b5f612a3a60198361208c565b9150612a4582612a06565b602082019050919050565b5f6020820190508181035f830152612a6781612a2e565b9050919050565b5f612a7882611c11565b9150612a8383611c11565b9250828203905081811115612a9b57612a9a6123ce565b5b92915050565b7f415049206973207374696c6c20616374697665000000000000000000000000005f82015250565b5f612ad560138361208c565b9150612ae082612aa1565b602082019050919050565b5f6020820190508181035f830152612b0281612ac9565b9050919050565b7f4e6f20726571756573747320746f20726566756e6400000000000000000000005f82015250565b5f612b3d60158361208c565b9150612b4882612b09565b602082019050919050565b5f6020820190508181035f830152612b6a81612b31565b9050919050565b5f606082019050612b845f83018661202f565b612b91602083018561202f565b612b9e6040830184611c1a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612bda601f8361208c565b9150612be582612ba6565b602082019050919050565b5f6020820190508181035f830152612c0781612bce565b9050919050565b5f604082019050612c215f83018561202f565b612c2e6020830184611c1a565b9392505050565b5f604082019050612c485f83018561202f565b612c556020830184611d8d565b939250505056fea2646970667358221220031f819e2e9209180c39d2abecff3feee7ba793989a7254cbce4091c45ed843a64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x30A3 CODESIZE SUB DUP1 PUSH2 0x30A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP1 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C PUSH0 DUP1 SHL CALLER PUSH2 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15D PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3D6 JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP4 DUP4 PUSH2 0x259 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x24F JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EC PUSH2 0x2BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x253 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x302 DUP3 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312 DUP2 PUSH2 0x2F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32D DUP2 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x2C4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x355 DUP5 DUP3 DUP6 ADD PUSH2 0x31F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3A2 PUSH1 0x15 DUP4 PUSH2 0x35E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD DUP3 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3CF DUP2 PUSH2 0x396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2C92 PUSH2 0x411 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x99D ADD MSTORE DUP2 DUP2 PUSH2 0xDD9 ADD MSTORE DUP2 DUP2 PUSH2 0xF28 ADD MSTORE DUP2 DUP2 PUSH2 0x102A ADD MSTORE DUP2 DUP2 PUSH2 0x15D5 ADD MSTORE PUSH2 0x1691 ADD MSTORE PUSH2 0x2C92 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xAF6E5689 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xBC39C0EF EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x428 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x838C0557 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8D1D44A9 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x8E04D8D8 EQ PUSH2 0x353 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x24CCE39F GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x24CCE39F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x400BB18D EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x6D177A00 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x2B9 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x99952C8 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xCD2C460 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH2 0xED2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x141F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4B8 JUMPI POP PUSH2 0x4B7 DUP3 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x571 PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DA PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x166D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x33446694866E808B8C5250F584345F59832E7A6F29E30BF7A8EAD78441940D9E DUP3 PUSH1 0x40 MLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x720 DUP2 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x1730 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x738 PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A6 DUP3 DUP3 PUSH2 0x1820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP4 DUP3 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E2 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B DUP6 PUSH1 0x40 MLOAD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xAC1 PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF7 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2A PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x70E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP1 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC52 SWAP1 PUSH2 0x262A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2862 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH32 0x708B6915AAD37CD1D491E64BF7A3B53C298499411A09F4B2315E30DA638B5DE2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD09 SWAP3 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP PUSH2 0xE1E CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 TIMESTAMP PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEC4 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xEDE PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF25 PUSH2 0x198C JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106E PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x10E6 PUSH2 0x1A58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AC SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x2A6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7598AFFE5BB8B864E84F0B819F6B046054C8F0D6771E8AE086411B5DD2A8BC12 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x269E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x269E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BB SWAP1 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154F SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1619 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x93C496F36ECAB5F5583F216646CAC3ACB12A63AEACDDB1A9251CEB81F0EE36E7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1676 DUP3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x167F DUP2 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x1689 DUP4 DUP4 PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172D DUP2 PUSH2 0x1728 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x173B DUP4 DUP4 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x180F JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17AC PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1813 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x182B DUP4 DUP4 PUSH2 0x12F7 JUMP JUMPDEST ISZERO PUSH2 0x1900 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x189D PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1904 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1986 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x193F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AB2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C7 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A53 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A0C SWAP3 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A6B DUP3 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x1AAE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AD1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1AEA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B05 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B47 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3E SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1B5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF2 DUP2 PUSH2 0x1BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C23 DUP2 PUSH2 0x1C11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B DUP3 PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH2 0x1C61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C96 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA5 DUP2 PUSH2 0x1C11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC0 DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CDC JUMPI PUSH2 0x1CDB PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CFA DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH2 0x1D18 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D26 DUP5 DUP3 DUP6 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D41 DUP2 PUSH2 0x1D2F JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D5C DUP2 PUSH2 0x1D38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D84 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D96 DUP2 PUSH2 0x1D2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD9 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E02 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1DCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E33 JUMPI PUSH2 0x1E32 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E51 DUP6 DUP3 DUP7 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1EE7 DUP3 PUSH2 0x1EA1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F18 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1F24 DUP3 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F43 JUMPI PUSH2 0x1F42 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST PUSH2 0x1F4C DUP3 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH2 0x1F74 DUP5 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x1E9D JUMP JUMPDEST JUMPDEST PUSH2 0x1FA0 DUP5 DUP3 DUP6 PUSH2 0x1F59 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FCC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1B5A JUMP JUMPDEST JUMPDEST PUSH2 0x2014 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2025 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2038 DUP2 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH0 DUP4 ADD DUP5 PUSH2 0x202F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2079 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B4 DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x20BE DUP2 DUP6 PUSH2 0x208C JUMP JUMPDEST SWAP4 POP PUSH2 0x20CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x209C JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FA DUP2 DUP8 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2109 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x2116 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BE9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214F PUSH2 0x214A PUSH2 0x2145 DUP5 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2160 DUP3 PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 DUP3 PUSH2 0x2156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2181 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x219A PUSH0 DUP4 ADD DUP5 PUSH2 0x2178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41504920646F6573206E6F742065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D4 PUSH1 0x12 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2201 DUP2 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223C PUSH1 0x17 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2247 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 PUSH2 0x2230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A4 PUSH1 0x16 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x22AF DUP3 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22D1 DUP2 PUSH2 0x2298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F66207265717565737473206D757374206265206772656174 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572207468616E207A65726F0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2332 PUSH1 0x2C DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x233D DUP3 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x2326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239A PUSH1 0x11 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x23A5 DUP3 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C7 DUP2 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2405 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2410 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x241E DUP2 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2435 JUMPI PUSH2 0x2434 PUSH2 0x23CE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2473 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x247E DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x248E JUMPI PUSH2 0x248D PUSH2 0x243C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F766572666C6F77206465746563746564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24CD PUSH1 0x11 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x24D8 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24FA DUP2 PUSH2 0x24C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250B DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2516 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x252E JUMPI PUSH2 0x252D PUSH2 0x23CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x415049206E616D652063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2568 PUSH1 0x18 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2573 DUP3 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2595 DUP2 PUSH2 0x255C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365207065722072657175657374206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 PUSH1 0x2B DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2601 DUP3 PUSH2 0x259C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2623 DUP2 PUSH2 0x25EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2634 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2666 JUMPI PUSH2 0x2665 PUSH2 0x23CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26C8 JUMPI PUSH2 0x26C7 PUSH2 0x2671 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x272A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2734 DUP7 DUP4 PUSH2 0x26EF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2766 PUSH2 0x2761 PUSH2 0x275C DUP5 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1C11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277F DUP4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP3 PUSH2 0x276D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27A7 PUSH2 0x279B JUMP JUMPDEST PUSH2 0x27B2 DUP2 DUP5 DUP5 PUSH2 0x2776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27CA PUSH0 DUP3 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x281A JUMPI PUSH2 0x27EB DUP2 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0x27F4 DUP5 PUSH2 0x26E0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2803 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2817 PUSH2 0x280F DUP6 PUSH2 0x26E0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x283A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x281F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2852 DUP4 DUP4 PUSH2 0x282B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x286B DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2884 JUMPI PUSH2 0x2883 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST PUSH2 0x288E DUP3 SLOAD PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2899 DUP3 DUP3 DUP6 PUSH2 0x27D9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28CA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28C2 DUP6 DUP3 PUSH2 0x2847 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D8 DUP7 PUSH2 0x26CE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28FF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28DA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x291C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2918 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x282B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2949 DUP2 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2958 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29D2 PUSH1 0x15 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x29DD DUP3 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FF DUP2 PUSH2 0x29C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E672041504920726571756573747300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A3A PUSH1 0x19 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A45 DUP3 PUSH2 0x2A06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A78 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A83 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A9B JUMPI PUSH2 0x2A9A PUSH2 0x23CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x415049206973207374696C6C2061637469766500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD5 PUSH1 0x13 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE0 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B02 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20726571756573747320746F20726566756E640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x15 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B84 PUSH0 DUP4 ADD DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDA PUSH1 0x1F DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE5 DUP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C07 DUP2 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C21 PUSH0 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2C2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C48 PUSH0 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2C55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x1F DUP2 SWAP15 0x2E SWAP3 MULMOD XOR 0xC CODECOPY 0xD2 0xAB 0xEC SELFDESTRUCT EXTCODEHASH 0xEE 0xE7 0xBA PUSH26 0x3989A7254CBCE4091C45ED843A64736F6C634300081A00330000 ",
							"sourceMap": "437:5937:11:-:0;;;1681:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:5;1821:7;:22;;;;1750:1:11;1723:29;;1731:6;1723:29;;;1715:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1793:6;1785:14;;;;;;;;;;1814:10;1806:5;;:18;;;;;;;;;;;;;;;;;;1833:42;2232:4:0;1844:18:11;;1864:10;1833;;;:42;;:::i;:::-;;1883:34;649:23;1906:10;1883;;;:34;;:::i;:::-;;1681:248;437:5937;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:169::-;1486:11;1520:6;1515:3;1508:19;1560:4;1555:3;1551:14;1536:29;;1402:169;;;;:::o;1577:171::-;1717:23;1713:1;1705:6;1701:14;1694:47;1577:171;:::o;1754:366::-;1896:3;1917:67;1981:2;1976:3;1917:67;:::i;:::-;1910:74;;1993:93;2082:3;1993:93;:::i;:::-;2111:2;2106:3;2102:12;2095:19;;1754:366;;;:::o;2126:419::-;2292:4;2330:2;2319:9;2315:18;2307:26;;2379:9;2373:4;2369:20;2365:1;2354:9;2350:17;2343:47;2407:131;2533:4;2407:131;:::i;:::-;2399:139;;2126:419;;;:::o;437:5937:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1111": {
									"entryPoint": 2861,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4955,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_978": {
									"entryPoint": 6834,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6753,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5916,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5936,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1032": {
									"entryPoint": 6169,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_521": {
									"entryPoint": 6744,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_513": {
									"entryPoint": 6540,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 6176,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addAdmin_1271": {
									"entryPoint": 2741,
									"id": 1271,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@apiIdCounter_1131": {
									"entryPoint": 1215,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@apis_1136": {
									"entryPoint": 4961,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRemainingRequests_1710": {
									"entryPoint": 1963,
									"id": 1710,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1501,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSubscriptionStatus_1737": {
									"entryPoint": 1221,
									"id": 1737,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1806,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 4855,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1106": {
									"entryPoint": 4328,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchaseAPIAccess_1450": {
									"entryPoint": 2119,
									"id": 1450,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@purchaseSubscription_1517": {
									"entryPoint": 3350,
									"id": 1517,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@refundUnusedRequests_1686": {
									"entryPoint": 5151,
									"id": 1686,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registerAPI_1334": {
									"entryPoint": 2897,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeAdmin_1284": {
									"entryPoint": 1381,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1840,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5741,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_683": {
									"entryPoint": 6410,
									"id": 683,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_656": {
									"entryPoint": 6617,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPIStatus_1363": {
									"entryPoint": 1530,
									"id": 1363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1073": {
									"entryPoint": 5811,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1094,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_1104": {
									"entryPoint": 5775,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@useAPIAccess_1576": {
									"entryPoint": 4365,
									"id": 1576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokens_1613": {
									"entryPoint": 3794,
									"id": 1613,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11317,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 10545,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IERC20_$611_to_t_address": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb": {
									"entryPoint": 10913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1": {
									"entryPoint": 9062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198": {
									"entryPoint": 10758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633": {
									"entryPoint": 9524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10102,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:33459:12",
										"nodeType": "YulBlock",
										"src": "0:33459:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1666:53:12",
													"nodeType": "YulBlock",
													"src": "1666:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1688:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:12"
																		},
																		"nativeSrc": "1688:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:12"
																},
																"nativeSrc": "1676:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:12"
															},
															"nativeSrc": "1676:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1601:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:12",
														"nodeType": "YulTypedName",
														"src": "1654:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:12",
														"nodeType": "YulTypedName",
														"src": "1661:3:12",
														"type": ""
													}
												],
												"src": "1601:118:12"
											},
											{
												"body": {
													"nativeSrc": "1823:124:12",
													"nodeType": "YulBlock",
													"src": "1823:124:12",
													"statements": [
														{
															"nativeSrc": "1833:26:12",
															"nodeType": "YulAssignment",
															"src": "1833:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:12"
																},
																"nativeSrc": "1841:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:12"
																		},
																		"nativeSrc": "1922:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1869:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:12"
																},
																"nativeSrc": "1869:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:12"
															},
															"nativeSrc": "1869:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1725:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:12",
														"nodeType": "YulTypedName",
														"src": "1795:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:12",
														"nodeType": "YulTypedName",
														"src": "1807:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:12",
														"nodeType": "YulTypedName",
														"src": "1818:4:12",
														"type": ""
													}
												],
												"src": "1725:222:12"
											},
											{
												"body": {
													"nativeSrc": "1998:81:12",
													"nodeType": "YulBlock",
													"src": "1998:81:12",
													"statements": [
														{
															"nativeSrc": "2008:65:12",
															"nodeType": "YulAssignment",
															"src": "2008:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2023:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2030:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2019:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:12"
																},
																"nativeSrc": "2019:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2019:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2008:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2008:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1953:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1980:5:12",
														"nodeType": "YulTypedName",
														"src": "1980:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1990:7:12",
														"nodeType": "YulTypedName",
														"src": "1990:7:12",
														"type": ""
													}
												],
												"src": "1953:126:12"
											},
											{
												"body": {
													"nativeSrc": "2130:51:12",
													"nodeType": "YulBlock",
													"src": "2130:51:12",
													"statements": [
														{
															"nativeSrc": "2140:35:12",
															"nodeType": "YulAssignment",
															"src": "2140:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2169:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2169:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2151:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2151:17:12"
																},
																"nativeSrc": "2151:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2151:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2140:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2140:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2085:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2112:5:12",
														"nodeType": "YulTypedName",
														"src": "2112:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2122:7:12",
														"nodeType": "YulTypedName",
														"src": "2122:7:12",
														"type": ""
													}
												],
												"src": "2085:96:12"
											},
											{
												"body": {
													"nativeSrc": "2230:79:12",
													"nodeType": "YulBlock",
													"src": "2230:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2287:16:12",
																"nodeType": "YulBlock",
																"src": "2287:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2296:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2299:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2299:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2289:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2289:6:12"
																			},
																			"nativeSrc": "2289:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2289:12:12"
																		},
																		"nativeSrc": "2289:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2289:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2253:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2278:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2278:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2260:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2260:17:12"
																				},
																				"nativeSrc": "2260:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2260:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2250:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2250:2:12"
																		},
																		"nativeSrc": "2250:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2243:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:12"
																},
																"nativeSrc": "2243:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2243:43:12"
															},
															"nativeSrc": "2240:63:12",
															"nodeType": "YulIf",
															"src": "2240:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2187:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2223:5:12",
														"nodeType": "YulTypedName",
														"src": "2223:5:12",
														"type": ""
													}
												],
												"src": "2187:122:12"
											},
											{
												"body": {
													"nativeSrc": "2367:87:12",
													"nodeType": "YulBlock",
													"src": "2367:87:12",
													"statements": [
														{
															"nativeSrc": "2377:29:12",
															"nodeType": "YulAssignment",
															"src": "2377:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2399:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2386:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2386:12:12"
																},
																"nativeSrc": "2386:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2386:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2377:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2442:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2442:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2415:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2415:26:12"
																},
																"nativeSrc": "2415:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2415:33:12"
															},
															"nativeSrc": "2415:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2415:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2315:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2353:3:12",
														"nodeType": "YulTypedName",
														"src": "2353:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2361:5:12",
														"nodeType": "YulTypedName",
														"src": "2361:5:12",
														"type": ""
													}
												],
												"src": "2315:139:12"
											},
											{
												"body": {
													"nativeSrc": "2503:79:12",
													"nodeType": "YulBlock",
													"src": "2503:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2560:16:12",
																"nodeType": "YulBlock",
																"src": "2560:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2569:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2569:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2572:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2562:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:12"
																			},
																			"nativeSrc": "2562:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2562:12:12"
																		},
																		"nativeSrc": "2562:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2526:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2526:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2551:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2551:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2533:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2533:17:12"
																				},
																				"nativeSrc": "2533:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2523:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2523:2:12"
																		},
																		"nativeSrc": "2523:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2523:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:12"
																},
																"nativeSrc": "2516:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2516:43:12"
															},
															"nativeSrc": "2513:63:12",
															"nodeType": "YulIf",
															"src": "2513:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2460:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:12",
														"nodeType": "YulTypedName",
														"src": "2496:5:12",
														"type": ""
													}
												],
												"src": "2460:122:12"
											},
											{
												"body": {
													"nativeSrc": "2640:87:12",
													"nodeType": "YulBlock",
													"src": "2640:87:12",
													"statements": [
														{
															"nativeSrc": "2650:29:12",
															"nodeType": "YulAssignment",
															"src": "2650:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2672:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2672:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2659:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2659:12:12"
																},
																"nativeSrc": "2659:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2659:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2650:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2650:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2715:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2715:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2688:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2688:26:12"
																},
																"nativeSrc": "2688:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2688:33:12"
															},
															"nativeSrc": "2688:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2688:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2588:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2618:6:12",
														"nodeType": "YulTypedName",
														"src": "2618:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2626:3:12",
														"nodeType": "YulTypedName",
														"src": "2626:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2634:5:12",
														"nodeType": "YulTypedName",
														"src": "2634:5:12",
														"type": ""
													}
												],
												"src": "2588:139:12"
											},
											{
												"body": {
													"nativeSrc": "2816:391:12",
													"nodeType": "YulBlock",
													"src": "2816:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2862:83:12",
																"nodeType": "YulBlock",
																"src": "2862:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2864:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2864:77:12"
																			},
																			"nativeSrc": "2864:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2864:79:12"
																		},
																		"nativeSrc": "2864:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2864:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2837:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2837:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2846:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2846:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2833:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:12"
																		},
																		"nativeSrc": "2833:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2858:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2858:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2829:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:12"
																},
																"nativeSrc": "2829:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2829:32:12"
															},
															"nativeSrc": "2826:119:12",
															"nodeType": "YulIf",
															"src": "2826:119:12"
														},
														{
															"nativeSrc": "2955:117:12",
															"nodeType": "YulBlock",
															"src": "2955:117:12",
															"statements": [
																{
																	"nativeSrc": "2970:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2970:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2984:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2984:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2974:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2974:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2999:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2999:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3034:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3034:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3045:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3045:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3030:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3030:3:12"
																				},
																				"nativeSrc": "3030:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3054:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3054:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3009:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3009:20:12"
																		},
																		"nativeSrc": "3009:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3009:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2999:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2999:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3082:118:12",
															"nodeType": "YulBlock",
															"src": "3082:118:12",
															"statements": [
																{
																	"nativeSrc": "3097:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3097:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3101:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3101:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3127:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3127:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3162:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3162:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3173:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3173:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3158:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3158:3:12"
																				},
																				"nativeSrc": "3158:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3158:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3137:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3137:20:12"
																		},
																		"nativeSrc": "3137:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3127:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2733:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2778:9:12",
														"nodeType": "YulTypedName",
														"src": "2778:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2789:7:12",
														"nodeType": "YulTypedName",
														"src": "2789:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2801:6:12",
														"nodeType": "YulTypedName",
														"src": "2801:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2809:6:12",
														"nodeType": "YulTypedName",
														"src": "2809:6:12",
														"type": ""
													}
												],
												"src": "2733:474:12"
											},
											{
												"body": {
													"nativeSrc": "3279:263:12",
													"nodeType": "YulBlock",
													"src": "3279:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:12",
																"nodeType": "YulBlock",
																"src": "3325:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:12"
																			},
																			"nativeSrc": "3327:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:12"
																		},
																		"nativeSrc": "3327:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:12"
																},
																"nativeSrc": "3292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:12"
															},
															"nativeSrc": "3289:119:12",
															"nodeType": "YulIf",
															"src": "3289:119:12"
														},
														{
															"nativeSrc": "3418:117:12",
															"nodeType": "YulBlock",
															"src": "3418:117:12",
															"statements": [
																{
																	"nativeSrc": "3433:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:12"
																				},
																				"nativeSrc": "3493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:12"
																		},
																		"nativeSrc": "3472:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3213:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:12",
														"nodeType": "YulTypedName",
														"src": "3249:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:12",
														"nodeType": "YulTypedName",
														"src": "3260:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"src": "3213:329:12"
											},
											{
												"body": {
													"nativeSrc": "3593:32:12",
													"nodeType": "YulBlock",
													"src": "3593:32:12",
													"statements": [
														{
															"nativeSrc": "3603:16:12",
															"nodeType": "YulAssignment",
															"src": "3603:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:12",
																"nodeType": "YulIdentifier",
																"src": "3614:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3548:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:12",
														"nodeType": "YulTypedName",
														"src": "3575:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:12",
														"nodeType": "YulTypedName",
														"src": "3585:7:12",
														"type": ""
													}
												],
												"src": "3548:77:12"
											},
											{
												"body": {
													"nativeSrc": "3674:79:12",
													"nodeType": "YulBlock",
													"src": "3674:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3731:16:12",
																"nodeType": "YulBlock",
																"src": "3731:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3740:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3740:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3743:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3743:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3733:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3733:6:12"
																			},
																			"nativeSrc": "3733:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3733:12:12"
																		},
																		"nativeSrc": "3733:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3733:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3697:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3697:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3722:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3722:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3704:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3704:17:12"
																				},
																				"nativeSrc": "3704:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3704:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3694:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3694:2:12"
																		},
																		"nativeSrc": "3694:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:12"
																},
																"nativeSrc": "3687:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3687:43:12"
															},
															"nativeSrc": "3684:63:12",
															"nodeType": "YulIf",
															"src": "3684:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3631:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3667:5:12",
														"nodeType": "YulTypedName",
														"src": "3667:5:12",
														"type": ""
													}
												],
												"src": "3631:122:12"
											},
											{
												"body": {
													"nativeSrc": "3811:87:12",
													"nodeType": "YulBlock",
													"src": "3811:87:12",
													"statements": [
														{
															"nativeSrc": "3821:29:12",
															"nodeType": "YulAssignment",
															"src": "3821:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3843:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3843:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3830:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3830:12:12"
																},
																"nativeSrc": "3830:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3830:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3821:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3821:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3886:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3859:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3859:26:12"
																},
																"nativeSrc": "3859:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3859:33:12"
															},
															"nativeSrc": "3859:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3859:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3759:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3789:6:12",
														"nodeType": "YulTypedName",
														"src": "3789:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3797:3:12",
														"nodeType": "YulTypedName",
														"src": "3797:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3805:5:12",
														"nodeType": "YulTypedName",
														"src": "3805:5:12",
														"type": ""
													}
												],
												"src": "3759:139:12"
											},
											{
												"body": {
													"nativeSrc": "3970:263:12",
													"nodeType": "YulBlock",
													"src": "3970:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4016:83:12",
																"nodeType": "YulBlock",
																"src": "4016:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4018:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4018:77:12"
																			},
																			"nativeSrc": "4018:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:79:12"
																		},
																		"nativeSrc": "4018:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3991:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3991:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4000:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:12"
																		},
																		"nativeSrc": "3987:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4012:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3983:3:12"
																},
																"nativeSrc": "3983:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3983:32:12"
															},
															"nativeSrc": "3980:119:12",
															"nodeType": "YulIf",
															"src": "3980:119:12"
														},
														{
															"nativeSrc": "4109:117:12",
															"nodeType": "YulBlock",
															"src": "4109:117:12",
															"statements": [
																{
																	"nativeSrc": "4124:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4124:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4128:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4128:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:12"
																				},
																				"nativeSrc": "4184:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4163:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:12"
																		},
																		"nativeSrc": "4163:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4153:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3904:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3940:9:12",
														"nodeType": "YulTypedName",
														"src": "3940:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3951:7:12",
														"nodeType": "YulTypedName",
														"src": "3951:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3963:6:12",
														"nodeType": "YulTypedName",
														"src": "3963:6:12",
														"type": ""
													}
												],
												"src": "3904:329:12"
											},
											{
												"body": {
													"nativeSrc": "4304:53:12",
													"nodeType": "YulBlock",
													"src": "4304:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4321:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4321:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4326:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4326:17:12"
																		},
																		"nativeSrc": "4326:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4314:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:12"
																},
																"nativeSrc": "4314:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4314:37:12"
															},
															"nativeSrc": "4314:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4314:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4239:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:12",
														"nodeType": "YulTypedName",
														"src": "4292:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4299:3:12",
														"nodeType": "YulTypedName",
														"src": "4299:3:12",
														"type": ""
													}
												],
												"src": "4239:118:12"
											},
											{
												"body": {
													"nativeSrc": "4461:124:12",
													"nodeType": "YulBlock",
													"src": "4461:124:12",
													"statements": [
														{
															"nativeSrc": "4471:26:12",
															"nodeType": "YulAssignment",
															"src": "4471:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4479:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:12"
																},
																"nativeSrc": "4479:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4479:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4471:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:12"
																		},
																		"nativeSrc": "4560:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4507:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:12"
																},
																"nativeSrc": "4507:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4507:71:12"
															},
															"nativeSrc": "4507:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4507:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4363:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:12",
														"nodeType": "YulTypedName",
														"src": "4433:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4445:6:12",
														"nodeType": "YulTypedName",
														"src": "4445:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4456:4:12",
														"nodeType": "YulTypedName",
														"src": "4456:4:12",
														"type": ""
													}
												],
												"src": "4363:222:12"
											},
											{
												"body": {
													"nativeSrc": "4631:76:12",
													"nodeType": "YulBlock",
													"src": "4631:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4685:16:12",
																"nodeType": "YulBlock",
																"src": "4685:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4694:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4694:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4697:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4687:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4687:6:12"
																			},
																			"nativeSrc": "4687:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4687:12:12"
																		},
																		"nativeSrc": "4687:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4687:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4654:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4654:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4676:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4676:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4661:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "4661:14:12"
																				},
																				"nativeSrc": "4661:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4661:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4651:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4651:2:12"
																		},
																		"nativeSrc": "4651:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4651:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4644:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4644:6:12"
																},
																"nativeSrc": "4644:40:12",
																"nodeType": "YulFunctionCall",
																"src": "4644:40:12"
															},
															"nativeSrc": "4641:60:12",
															"nodeType": "YulIf",
															"src": "4641:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4591:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4624:5:12",
														"nodeType": "YulTypedName",
														"src": "4624:5:12",
														"type": ""
													}
												],
												"src": "4591:116:12"
											},
											{
												"body": {
													"nativeSrc": "4762:84:12",
													"nodeType": "YulBlock",
													"src": "4762:84:12",
													"statements": [
														{
															"nativeSrc": "4772:29:12",
															"nodeType": "YulAssignment",
															"src": "4772:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4794:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4794:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4781:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4781:12:12"
																},
																"nativeSrc": "4781:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4781:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4772:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4772:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4834:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4834:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4810:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "4810:23:12"
																},
																"nativeSrc": "4810:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4810:30:12"
															},
															"nativeSrc": "4810:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4810:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4713:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4740:6:12",
														"nodeType": "YulTypedName",
														"src": "4740:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4748:3:12",
														"nodeType": "YulTypedName",
														"src": "4748:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4756:5:12",
														"nodeType": "YulTypedName",
														"src": "4756:5:12",
														"type": ""
													}
												],
												"src": "4713:133:12"
											},
											{
												"body": {
													"nativeSrc": "4932:388:12",
													"nodeType": "YulBlock",
													"src": "4932:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4978:83:12",
																"nodeType": "YulBlock",
																"src": "4978:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4980:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4980:77:12"
																			},
																			"nativeSrc": "4980:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4980:79:12"
																		},
																		"nativeSrc": "4980:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4980:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4953:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4953:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4962:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4962:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4949:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4949:3:12"
																		},
																		"nativeSrc": "4949:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4974:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4974:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4945:3:12"
																},
																"nativeSrc": "4945:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4945:32:12"
															},
															"nativeSrc": "4942:119:12",
															"nodeType": "YulIf",
															"src": "4942:119:12"
														},
														{
															"nativeSrc": "5071:117:12",
															"nodeType": "YulBlock",
															"src": "5071:117:12",
															"statements": [
																{
																	"nativeSrc": "5086:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5086:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5100:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5100:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5090:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5090:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5115:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5115:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5150:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5150:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5161:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5161:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5146:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5146:3:12"
																				},
																				"nativeSrc": "5146:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5146:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5170:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5170:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5125:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5125:20:12"
																		},
																		"nativeSrc": "5125:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5125:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5115:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5115:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5198:115:12",
															"nodeType": "YulBlock",
															"src": "5198:115:12",
															"statements": [
																{
																	"nativeSrc": "5213:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5213:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5227:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5227:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5217:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5217:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5243:60:12",
																	"nodeType": "YulAssignment",
																	"src": "5243:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5275:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5275:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5286:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5286:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5271:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5271:3:12"
																				},
																				"nativeSrc": "5271:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5271:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5295:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5295:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5253:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5253:17:12"
																		},
																		"nativeSrc": "5253:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5253:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5243:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5243:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "4852:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4894:9:12",
														"nodeType": "YulTypedName",
														"src": "4894:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4905:7:12",
														"nodeType": "YulTypedName",
														"src": "4905:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4917:6:12",
														"nodeType": "YulTypedName",
														"src": "4917:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4925:6:12",
														"nodeType": "YulTypedName",
														"src": "4925:6:12",
														"type": ""
													}
												],
												"src": "4852:468:12"
											},
											{
												"body": {
													"nativeSrc": "5409:391:12",
													"nodeType": "YulBlock",
													"src": "5409:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5455:83:12",
																"nodeType": "YulBlock",
																"src": "5455:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5457:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5457:77:12"
																			},
																			"nativeSrc": "5457:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5457:79:12"
																		},
																		"nativeSrc": "5457:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5457:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5430:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5430:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:12"
																		},
																		"nativeSrc": "5426:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5426:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5451:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5451:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5422:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5422:3:12"
																},
																"nativeSrc": "5422:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5422:32:12"
															},
															"nativeSrc": "5419:119:12",
															"nodeType": "YulIf",
															"src": "5419:119:12"
														},
														{
															"nativeSrc": "5548:117:12",
															"nodeType": "YulBlock",
															"src": "5548:117:12",
															"statements": [
																{
																	"nativeSrc": "5563:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5563:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5577:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5577:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5567:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5567:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5592:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5592:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5627:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5627:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5638:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5638:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5623:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5623:3:12"
																				},
																				"nativeSrc": "5623:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5623:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5647:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5647:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5602:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5602:20:12"
																		},
																		"nativeSrc": "5602:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5592:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5592:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5675:118:12",
															"nodeType": "YulBlock",
															"src": "5675:118:12",
															"statements": [
																{
																	"nativeSrc": "5690:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5690:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5704:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5694:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5694:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5720:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5720:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5755:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5755:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5766:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5766:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5751:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5751:3:12"
																				},
																				"nativeSrc": "5751:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5751:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5775:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5775:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5730:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5730:20:12"
																		},
																		"nativeSrc": "5730:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5720:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5720:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "5326:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5371:9:12",
														"nodeType": "YulTypedName",
														"src": "5371:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5382:7:12",
														"nodeType": "YulTypedName",
														"src": "5382:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5394:6:12",
														"nodeType": "YulTypedName",
														"src": "5394:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5402:6:12",
														"nodeType": "YulTypedName",
														"src": "5402:6:12",
														"type": ""
													}
												],
												"src": "5326:474:12"
											},
											{
												"body": {
													"nativeSrc": "5889:391:12",
													"nodeType": "YulBlock",
													"src": "5889:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5935:83:12",
																"nodeType": "YulBlock",
																"src": "5935:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5937:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5937:77:12"
																			},
																			"nativeSrc": "5937:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5937:79:12"
																		},
																		"nativeSrc": "5937:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5937:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5910:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5910:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5919:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5906:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:12"
																		},
																		"nativeSrc": "5906:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5902:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:12"
																},
																"nativeSrc": "5902:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5902:32:12"
															},
															"nativeSrc": "5899:119:12",
															"nodeType": "YulIf",
															"src": "5899:119:12"
														},
														{
															"nativeSrc": "6028:117:12",
															"nodeType": "YulBlock",
															"src": "6028:117:12",
															"statements": [
																{
																	"nativeSrc": "6043:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6043:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6057:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6047:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6047:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6072:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6072:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6107:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6107:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6118:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6118:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6103:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:12"
																				},
																				"nativeSrc": "6103:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6103:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6127:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6127:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6082:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6082:20:12"
																		},
																		"nativeSrc": "6082:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6072:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6072:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6155:118:12",
															"nodeType": "YulBlock",
															"src": "6155:118:12",
															"statements": [
																{
																	"nativeSrc": "6170:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6170:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6184:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6184:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6174:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6174:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6200:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6200:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6235:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6235:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6246:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6246:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6231:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6231:3:12"
																				},
																				"nativeSrc": "6231:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6231:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6255:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6255:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6210:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6210:20:12"
																		},
																		"nativeSrc": "6210:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6210:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6200:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6200:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5806:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5851:9:12",
														"nodeType": "YulTypedName",
														"src": "5851:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5862:7:12",
														"nodeType": "YulTypedName",
														"src": "5862:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5874:6:12",
														"nodeType": "YulTypedName",
														"src": "5874:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5882:6:12",
														"nodeType": "YulTypedName",
														"src": "5882:6:12",
														"type": ""
													}
												],
												"src": "5806:474:12"
											},
											{
												"body": {
													"nativeSrc": "6375:28:12",
													"nodeType": "YulBlock",
													"src": "6375:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6392:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6392:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6395:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6395:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6385:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6385:6:12"
																},
																"nativeSrc": "6385:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6385:12:12"
															},
															"nativeSrc": "6385:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6385:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6286:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6286:117:12"
											},
											{
												"body": {
													"nativeSrc": "6498:28:12",
													"nodeType": "YulBlock",
													"src": "6498:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6518:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6518:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6508:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:12"
																},
																"nativeSrc": "6508:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6508:12:12"
															},
															"nativeSrc": "6508:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6508:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6409:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6409:117:12"
											},
											{
												"body": {
													"nativeSrc": "6580:54:12",
													"nodeType": "YulBlock",
													"src": "6580:54:12",
													"statements": [
														{
															"nativeSrc": "6590:38:12",
															"nodeType": "YulAssignment",
															"src": "6590:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6608:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6608:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6604:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6604:3:12"
																		},
																		"nativeSrc": "6604:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6604:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6624:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6624:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6620:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:12"
																		},
																		"nativeSrc": "6620:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:12"
																},
																"nativeSrc": "6600:28:12",
																"nodeType": "YulFunctionCall",
																"src": "6600:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6590:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6532:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6563:5:12",
														"nodeType": "YulTypedName",
														"src": "6563:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6573:6:12",
														"nodeType": "YulTypedName",
														"src": "6573:6:12",
														"type": ""
													}
												],
												"src": "6532:102:12"
											},
											{
												"body": {
													"nativeSrc": "6668:152:12",
													"nodeType": "YulBlock",
													"src": "6668:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6685:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6685:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6688:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6688:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:12"
																},
																"nativeSrc": "6678:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6678:88:12"
															},
															"nativeSrc": "6678:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6678:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6782:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6782:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6785:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6785:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6775:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:12"
																},
																"nativeSrc": "6775:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6775:15:12"
															},
															"nativeSrc": "6775:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6775:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6806:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6806:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6809:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6809:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6799:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6799:6:12"
																},
																"nativeSrc": "6799:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6799:15:12"
															},
															"nativeSrc": "6799:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6799:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6640:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6640:180:12"
											},
											{
												"body": {
													"nativeSrc": "6869:238:12",
													"nodeType": "YulBlock",
													"src": "6869:238:12",
													"statements": [
														{
															"nativeSrc": "6879:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6879:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6901:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6901:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6931:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6931:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6909:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "6909:21:12"
																		},
																		"nativeSrc": "6909:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6909:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6897:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:12"
																},
																"nativeSrc": "6897:40:12",
																"nodeType": "YulFunctionCall",
																"src": "6897:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6883:10:12",
																	"nodeType": "YulTypedName",
																	"src": "6883:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7048:22:12",
																"nodeType": "YulBlock",
																"src": "7048:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7050:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7050:16:12"
																			},
																			"nativeSrc": "7050:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7050:18:12"
																		},
																		"nativeSrc": "7050:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7050:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6991:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "6991:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7003:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7003:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6988:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6988:2:12"
																		},
																		"nativeSrc": "6988:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6988:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7027:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "7027:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7039:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7024:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7024:2:12"
																		},
																		"nativeSrc": "7024:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6985:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6985:2:12"
																},
																"nativeSrc": "6985:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6985:62:12"
															},
															"nativeSrc": "6982:88:12",
															"nodeType": "YulIf",
															"src": "6982:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7090:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "7090:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7079:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7079:6:12"
																},
																"nativeSrc": "7079:22:12",
																"nodeType": "YulFunctionCall",
																"src": "7079:22:12"
															},
															"nativeSrc": "7079:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "7079:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6826:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6855:6:12",
														"nodeType": "YulTypedName",
														"src": "6855:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6863:4:12",
														"nodeType": "YulTypedName",
														"src": "6863:4:12",
														"type": ""
													}
												],
												"src": "6826:281:12"
											},
											{
												"body": {
													"nativeSrc": "7154:88:12",
													"nodeType": "YulBlock",
													"src": "7154:88:12",
													"statements": [
														{
															"nativeSrc": "7164:30:12",
															"nodeType": "YulAssignment",
															"src": "7164:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7174:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7174:18:12"
																},
																"nativeSrc": "7174:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7174:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7164:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7164:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7223:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7223:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7231:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7231:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7203:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "7203:19:12"
																},
																"nativeSrc": "7203:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7203:33:12"
															},
															"nativeSrc": "7203:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7203:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7113:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7138:4:12",
														"nodeType": "YulTypedName",
														"src": "7138:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7147:6:12",
														"nodeType": "YulTypedName",
														"src": "7147:6:12",
														"type": ""
													}
												],
												"src": "7113:129:12"
											},
											{
												"body": {
													"nativeSrc": "7315:241:12",
													"nodeType": "YulBlock",
													"src": "7315:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7420:22:12",
																"nodeType": "YulBlock",
																"src": "7420:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7422:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7422:16:12"
																			},
																			"nativeSrc": "7422:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7422:18:12"
																		},
																		"nativeSrc": "7422:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7422:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7392:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7392:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7400:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7400:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7389:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7389:2:12"
																},
																"nativeSrc": "7389:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7389:30:12"
															},
															"nativeSrc": "7386:56:12",
															"nodeType": "YulIf",
															"src": "7386:56:12"
														},
														{
															"nativeSrc": "7452:37:12",
															"nodeType": "YulAssignment",
															"src": "7452:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7482:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7482:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7460:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7460:21:12"
																},
																"nativeSrc": "7460:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7460:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7452:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:12"
																}
															]
														},
														{
															"nativeSrc": "7526:23:12",
															"nodeType": "YulAssignment",
															"src": "7526:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7538:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7538:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7544:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7544:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7534:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:12"
																},
																"nativeSrc": "7534:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7534:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7526:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7248:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7299:6:12",
														"nodeType": "YulTypedName",
														"src": "7299:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7310:4:12",
														"nodeType": "YulTypedName",
														"src": "7310:4:12",
														"type": ""
													}
												],
												"src": "7248:308:12"
											},
											{
												"body": {
													"nativeSrc": "7626:84:12",
													"nodeType": "YulBlock",
													"src": "7626:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7650:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7650:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7655:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7660:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7660:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7637:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7637:12:12"
																},
																"nativeSrc": "7637:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7637:30:12"
															},
															"nativeSrc": "7637:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7637:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7687:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7687:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7692:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7692:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7683:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7683:3:12"
																		},
																		"nativeSrc": "7683:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7683:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7701:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7701:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7676:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7676:6:12"
																},
																"nativeSrc": "7676:27:12",
																"nodeType": "YulFunctionCall",
																"src": "7676:27:12"
															},
															"nativeSrc": "7676:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "7676:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7562:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7608:3:12",
														"nodeType": "YulTypedName",
														"src": "7608:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7613:3:12",
														"nodeType": "YulTypedName",
														"src": "7613:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7618:6:12",
														"nodeType": "YulTypedName",
														"src": "7618:6:12",
														"type": ""
													}
												],
												"src": "7562:148:12"
											},
											{
												"body": {
													"nativeSrc": "7800:341:12",
													"nodeType": "YulBlock",
													"src": "7800:341:12",
													"statements": [
														{
															"nativeSrc": "7810:75:12",
															"nodeType": "YulAssignment",
															"src": "7810:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7877:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7877:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7835:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "7835:41:12"
																		},
																		"nativeSrc": "7835:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7819:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "7819:15:12"
																},
																"nativeSrc": "7819:66:12",
																"nodeType": "YulFunctionCall",
																"src": "7819:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7810:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7810:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7901:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7901:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7908:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7908:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7894:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:12"
																},
																"nativeSrc": "7894:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7894:21:12"
															},
															"nativeSrc": "7894:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7894:21:12"
														},
														{
															"nativeSrc": "7924:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7924:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7939:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7939:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7946:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7935:3:12"
																},
																"nativeSrc": "7935:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7935:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7928:3:12",
																	"nodeType": "YulTypedName",
																	"src": "7928:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7989:83:12",
																"nodeType": "YulBlock",
																"src": "7989:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7991:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7991:77:12"
																			},
																			"nativeSrc": "7991:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:79:12"
																		},
																		"nativeSrc": "7991:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7991:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7970:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7970:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7975:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7975:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7966:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:12"
																		},
																		"nativeSrc": "7966:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7966:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7984:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7963:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7963:2:12"
																},
																"nativeSrc": "7963:25:12",
																"nodeType": "YulFunctionCall",
																"src": "7963:25:12"
															},
															"nativeSrc": "7960:112:12",
															"nodeType": "YulIf",
															"src": "7960:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8118:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8118:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8123:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8123:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8128:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8081:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "8081:36:12"
																},
																"nativeSrc": "8081:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8081:54:12"
															},
															"nativeSrc": "8081:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "8081:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7716:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7773:3:12",
														"nodeType": "YulTypedName",
														"src": "7773:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7778:6:12",
														"nodeType": "YulTypedName",
														"src": "7778:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7786:3:12",
														"nodeType": "YulTypedName",
														"src": "7786:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7794:5:12",
														"nodeType": "YulTypedName",
														"src": "7794:5:12",
														"type": ""
													}
												],
												"src": "7716:425:12"
											},
											{
												"body": {
													"nativeSrc": "8223:278:12",
													"nodeType": "YulBlock",
													"src": "8223:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8272:83:12",
																"nodeType": "YulBlock",
																"src": "8272:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8274:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8274:77:12"
																			},
																			"nativeSrc": "8274:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8274:79:12"
																		},
																		"nativeSrc": "8274:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8274:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8251:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8251:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8259:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8259:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8247:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8247:3:12"
																				},
																				"nativeSrc": "8247:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8247:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8266:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8266:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8243:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8243:3:12"
																		},
																		"nativeSrc": "8243:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8243:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8236:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:12"
																},
																"nativeSrc": "8236:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8236:35:12"
															},
															"nativeSrc": "8233:122:12",
															"nodeType": "YulIf",
															"src": "8233:122:12"
														},
														{
															"nativeSrc": "8364:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8364:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8391:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8391:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8378:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8378:12:12"
																},
																"nativeSrc": "8378:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8378:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8368:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8368:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8407:88:12",
															"nodeType": "YulAssignment",
															"src": "8407:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8468:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8468:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8476:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8476:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8464:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:12"
																		},
																		"nativeSrc": "8464:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8464:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8483:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8483:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8491:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8491:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8416:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "8416:47:12"
																},
																"nativeSrc": "8416:79:12",
																"nodeType": "YulFunctionCall",
																"src": "8416:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8407:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8407:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8161:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8201:6:12",
														"nodeType": "YulTypedName",
														"src": "8201:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8209:3:12",
														"nodeType": "YulTypedName",
														"src": "8209:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8217:5:12",
														"nodeType": "YulTypedName",
														"src": "8217:5:12",
														"type": ""
													}
												],
												"src": "8161:340:12"
											},
											{
												"body": {
													"nativeSrc": "8600:561:12",
													"nodeType": "YulBlock",
													"src": "8600:561:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8646:83:12",
																"nodeType": "YulBlock",
																"src": "8646:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8648:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8648:77:12"
																			},
																			"nativeSrc": "8648:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8648:79:12"
																		},
																		"nativeSrc": "8648:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8648:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8621:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8621:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8630:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8630:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8617:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:12"
																		},
																		"nativeSrc": "8617:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8617:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8642:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8642:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8613:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8613:3:12"
																},
																"nativeSrc": "8613:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8613:32:12"
															},
															"nativeSrc": "8610:119:12",
															"nodeType": "YulIf",
															"src": "8610:119:12"
														},
														{
															"nativeSrc": "8739:287:12",
															"nodeType": "YulBlock",
															"src": "8739:287:12",
															"statements": [
																{
																	"nativeSrc": "8754:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8754:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8785:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8785:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8796:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8796:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8781:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8781:3:12"
																				},
																				"nativeSrc": "8781:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8768:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "8768:12:12"
																		},
																		"nativeSrc": "8768:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8768:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8758:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8758:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8846:83:12",
																		"nodeType": "YulBlock",
																		"src": "8846:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8848:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "8848:77:12"
																					},
																					"nativeSrc": "8848:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8848:79:12"
																				},
																				"nativeSrc": "8848:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8848:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8818:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8818:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8826:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8815:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8815:2:12"
																		},
																		"nativeSrc": "8815:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8815:30:12"
																	},
																	"nativeSrc": "8812:117:12",
																	"nodeType": "YulIf",
																	"src": "8812:117:12"
																},
																{
																	"nativeSrc": "8943:73:12",
																	"nodeType": "YulAssignment",
																	"src": "8943:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8988:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8988:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8999:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8999:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8984:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8984:3:12"
																				},
																				"nativeSrc": "8984:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8984:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9008:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9008:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8953:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8953:30:12"
																		},
																		"nativeSrc": "8953:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8953:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8943:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8943:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9036:118:12",
															"nodeType": "YulBlock",
															"src": "9036:118:12",
															"statements": [
																{
																	"nativeSrc": "9051:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9051:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9065:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9065:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9055:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9055:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9081:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9081:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9116:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9116:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9127:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9127:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9112:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9112:3:12"
																				},
																				"nativeSrc": "9112:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9112:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9136:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9136:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9091:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9091:20:12"
																		},
																		"nativeSrc": "9091:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9091:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9081:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9081:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "8507:654:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8562:9:12",
														"nodeType": "YulTypedName",
														"src": "8562:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8573:7:12",
														"nodeType": "YulTypedName",
														"src": "8573:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8585:6:12",
														"nodeType": "YulTypedName",
														"src": "8585:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8593:6:12",
														"nodeType": "YulTypedName",
														"src": "8593:6:12",
														"type": ""
													}
												],
												"src": "8507:654:12"
											},
											{
												"body": {
													"nativeSrc": "9232:53:12",
													"nodeType": "YulBlock",
													"src": "9232:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9249:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9249:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9272:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9272:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9254:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9254:17:12"
																		},
																		"nativeSrc": "9254:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9254:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9242:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9242:6:12"
																},
																"nativeSrc": "9242:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9242:37:12"
															},
															"nativeSrc": "9242:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9242:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9167:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9220:5:12",
														"nodeType": "YulTypedName",
														"src": "9220:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9227:3:12",
														"nodeType": "YulTypedName",
														"src": "9227:3:12",
														"type": ""
													}
												],
												"src": "9167:118:12"
											},
											{
												"body": {
													"nativeSrc": "9389:124:12",
													"nodeType": "YulBlock",
													"src": "9389:124:12",
													"statements": [
														{
															"nativeSrc": "9399:26:12",
															"nodeType": "YulAssignment",
															"src": "9399:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9411:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9411:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9422:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9422:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9407:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9407:3:12"
																},
																"nativeSrc": "9407:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9407:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9399:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9399:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9479:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9492:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9492:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9503:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9488:3:12"
																		},
																		"nativeSrc": "9488:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9488:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9435:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9435:43:12"
																},
																"nativeSrc": "9435:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9435:71:12"
															},
															"nativeSrc": "9435:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9435:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9291:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9361:9:12",
														"nodeType": "YulTypedName",
														"src": "9361:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9373:6:12",
														"nodeType": "YulTypedName",
														"src": "9373:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9384:4:12",
														"nodeType": "YulTypedName",
														"src": "9384:4:12",
														"type": ""
													}
												],
												"src": "9291:222:12"
											},
											{
												"body": {
													"nativeSrc": "9585:263:12",
													"nodeType": "YulBlock",
													"src": "9585:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9631:83:12",
																"nodeType": "YulBlock",
																"src": "9631:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9633:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9633:77:12"
																			},
																			"nativeSrc": "9633:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9633:79:12"
																		},
																		"nativeSrc": "9633:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9633:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9606:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9606:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9615:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9615:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9602:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:12"
																		},
																		"nativeSrc": "9602:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9602:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9598:3:12"
																},
																"nativeSrc": "9598:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9598:32:12"
															},
															"nativeSrc": "9595:119:12",
															"nodeType": "YulIf",
															"src": "9595:119:12"
														},
														{
															"nativeSrc": "9724:117:12",
															"nodeType": "YulBlock",
															"src": "9724:117:12",
															"statements": [
																{
																	"nativeSrc": "9739:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9739:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9753:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9753:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9743:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9743:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9768:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9768:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9803:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9803:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9814:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9814:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9799:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9799:3:12"
																				},
																				"nativeSrc": "9799:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9799:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9823:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9823:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9778:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9778:20:12"
																		},
																		"nativeSrc": "9778:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9778:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9768:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9768:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9519:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9555:9:12",
														"nodeType": "YulTypedName",
														"src": "9555:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9566:7:12",
														"nodeType": "YulTypedName",
														"src": "9566:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9578:6:12",
														"nodeType": "YulTypedName",
														"src": "9578:6:12",
														"type": ""
													}
												],
												"src": "9519:329:12"
											},
											{
												"body": {
													"nativeSrc": "9913:40:12",
													"nodeType": "YulBlock",
													"src": "9913:40:12",
													"statements": [
														{
															"nativeSrc": "9924:22:12",
															"nodeType": "YulAssignment",
															"src": "9924:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9940:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9940:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9934:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9934:5:12"
																},
																"nativeSrc": "9934:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9934:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9924:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "9854:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9896:5:12",
														"nodeType": "YulTypedName",
														"src": "9896:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9906:6:12",
														"nodeType": "YulTypedName",
														"src": "9906:6:12",
														"type": ""
													}
												],
												"src": "9854:99:12"
											},
											{
												"body": {
													"nativeSrc": "10055:73:12",
													"nodeType": "YulBlock",
													"src": "10055:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10072:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10077:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:12"
																},
																"nativeSrc": "10065:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10065:19:12"
															},
															"nativeSrc": "10065:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "10065:19:12"
														},
														{
															"nativeSrc": "10093:29:12",
															"nodeType": "YulAssignment",
															"src": "10093:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10112:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10112:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10117:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10117:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10108:3:12"
																},
																"nativeSrc": "10108:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10108:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10093:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "10093:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9959:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10027:3:12",
														"nodeType": "YulTypedName",
														"src": "10027:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10032:6:12",
														"nodeType": "YulTypedName",
														"src": "10032:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10043:11:12",
														"nodeType": "YulTypedName",
														"src": "10043:11:12",
														"type": ""
													}
												],
												"src": "9959:169:12"
											},
											{
												"body": {
													"nativeSrc": "10196:77:12",
													"nodeType": "YulBlock",
													"src": "10196:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10213:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10218:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10218:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10223:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10223:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10207:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10207:5:12"
																},
																"nativeSrc": "10207:23:12",
																"nodeType": "YulFunctionCall",
																"src": "10207:23:12"
															},
															"nativeSrc": "10207:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "10207:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10250:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10250:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10255:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10255:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10246:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10246:3:12"
																		},
																		"nativeSrc": "10246:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10246:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10264:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10264:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:12"
																},
																"nativeSrc": "10239:27:12",
																"nodeType": "YulFunctionCall",
																"src": "10239:27:12"
															},
															"nativeSrc": "10239:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "10239:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10134:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10178:3:12",
														"nodeType": "YulTypedName",
														"src": "10178:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10183:3:12",
														"nodeType": "YulTypedName",
														"src": "10183:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10188:6:12",
														"nodeType": "YulTypedName",
														"src": "10188:6:12",
														"type": ""
													}
												],
												"src": "10134:139:12"
											},
											{
												"body": {
													"nativeSrc": "10371:285:12",
													"nodeType": "YulBlock",
													"src": "10371:285:12",
													"statements": [
														{
															"nativeSrc": "10381:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10381:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10428:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10428:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10395:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "10395:32:12"
																},
																"nativeSrc": "10395:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10395:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10385:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10385:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10443:78:12",
															"nodeType": "YulAssignment",
															"src": "10443:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10509:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10509:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10514:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10514:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10450:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10450:58:12"
																},
																"nativeSrc": "10450:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10450:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10443:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10443:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10569:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10569:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10576:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10576:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10565:3:12"
																		},
																		"nativeSrc": "10565:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10565:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10583:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10583:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10588:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10588:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10530:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "10530:34:12"
																},
																"nativeSrc": "10530:65:12",
																"nodeType": "YulFunctionCall",
																"src": "10530:65:12"
															},
															"nativeSrc": "10530:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "10530:65:12"
														},
														{
															"nativeSrc": "10604:46:12",
															"nodeType": "YulAssignment",
															"src": "10604:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10615:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10615:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10642:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10642:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10620:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "10620:21:12"
																		},
																		"nativeSrc": "10620:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10620:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10611:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10611:3:12"
																},
																"nativeSrc": "10611:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10611:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10604:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10604:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10279:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10352:5:12",
														"nodeType": "YulTypedName",
														"src": "10352:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10359:3:12",
														"nodeType": "YulTypedName",
														"src": "10359:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10367:3:12",
														"nodeType": "YulTypedName",
														"src": "10367:3:12",
														"type": ""
													}
												],
												"src": "10279:377:12"
											},
											{
												"body": {
													"nativeSrc": "10858:436:12",
													"nodeType": "YulBlock",
													"src": "10858:436:12",
													"statements": [
														{
															"nativeSrc": "10868:27:12",
															"nodeType": "YulAssignment",
															"src": "10868:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10880:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10880:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10891:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10891:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10876:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10876:3:12"
																},
																"nativeSrc": "10876:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10876:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10868:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10868:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10916:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10916:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10927:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10927:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10912:3:12"
																		},
																		"nativeSrc": "10912:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10912:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10935:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10935:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10941:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10931:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10931:3:12"
																		},
																		"nativeSrc": "10931:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10931:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10905:6:12"
																},
																"nativeSrc": "10905:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10905:47:12"
															},
															"nativeSrc": "10905:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10905:47:12"
														},
														{
															"nativeSrc": "10961:86:12",
															"nodeType": "YulAssignment",
															"src": "10961:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11033:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11033:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11042:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11042:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10969:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "10969:63:12"
																},
																"nativeSrc": "10969:78:12",
																"nodeType": "YulFunctionCall",
																"src": "10969:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10961:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10961:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11101:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11101:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11114:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11125:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11125:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11110:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:12"
																		},
																		"nativeSrc": "11110:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11057:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11057:43:12"
																},
																"nativeSrc": "11057:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11057:72:12"
															},
															"nativeSrc": "11057:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11057:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11183:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11183:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11196:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:12"
																		},
																		"nativeSrc": "11192:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11139:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11139:43:12"
																},
																"nativeSrc": "11139:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11139:72:12"
															},
															"nativeSrc": "11139:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11139:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11259:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11259:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11272:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11272:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11283:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11283:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11268:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:12"
																		},
																		"nativeSrc": "11268:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "11221:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "11221:37:12"
																},
																"nativeSrc": "11221:66:12",
																"nodeType": "YulFunctionCall",
																"src": "11221:66:12"
															},
															"nativeSrc": "11221:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "11221:66:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "10662:632:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10806:9:12",
														"nodeType": "YulTypedName",
														"src": "10806:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10818:6:12",
														"nodeType": "YulTypedName",
														"src": "10818:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10826:6:12",
														"nodeType": "YulTypedName",
														"src": "10826:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10834:6:12",
														"nodeType": "YulTypedName",
														"src": "10834:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10842:6:12",
														"nodeType": "YulTypedName",
														"src": "10842:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10853:4:12",
														"nodeType": "YulTypedName",
														"src": "10853:4:12",
														"type": ""
													}
												],
												"src": "10662:632:12"
											},
											{
												"body": {
													"nativeSrc": "11332:28:12",
													"nodeType": "YulBlock",
													"src": "11332:28:12",
													"statements": [
														{
															"nativeSrc": "11342:12:12",
															"nodeType": "YulAssignment",
															"src": "11342:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "11349:5:12",
																"nodeType": "YulIdentifier",
																"src": "11349:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11342:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11342:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11300:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11318:5:12",
														"nodeType": "YulTypedName",
														"src": "11318:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11328:3:12",
														"nodeType": "YulTypedName",
														"src": "11328:3:12",
														"type": ""
													}
												],
												"src": "11300:60:12"
											},
											{
												"body": {
													"nativeSrc": "11426:82:12",
													"nodeType": "YulBlock",
													"src": "11426:82:12",
													"statements": [
														{
															"nativeSrc": "11436:66:12",
															"nodeType": "YulAssignment",
															"src": "11436:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11494:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11494:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "11476:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "11476:17:12"
																				},
																				"nativeSrc": "11476:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11476:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11467:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "11467:8:12"
																		},
																		"nativeSrc": "11467:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11467:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11449:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11449:17:12"
																},
																"nativeSrc": "11449:53:12",
																"nodeType": "YulFunctionCall",
																"src": "11449:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11436:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11436:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "11366:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11406:5:12",
														"nodeType": "YulTypedName",
														"src": "11406:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11416:9:12",
														"nodeType": "YulTypedName",
														"src": "11416:9:12",
														"type": ""
													}
												],
												"src": "11366:142:12"
											},
											{
												"body": {
													"nativeSrc": "11574:66:12",
													"nodeType": "YulBlock",
													"src": "11574:66:12",
													"statements": [
														{
															"nativeSrc": "11584:50:12",
															"nodeType": "YulAssignment",
															"src": "11584:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11628:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11628:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11597:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11597:30:12"
																},
																"nativeSrc": "11597:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11597:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11584:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11584:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "11514:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11554:5:12",
														"nodeType": "YulTypedName",
														"src": "11554:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11564:9:12",
														"nodeType": "YulTypedName",
														"src": "11564:9:12",
														"type": ""
													}
												],
												"src": "11514:126:12"
											},
											{
												"body": {
													"nativeSrc": "11720:66:12",
													"nodeType": "YulBlock",
													"src": "11720:66:12",
													"statements": [
														{
															"nativeSrc": "11730:50:12",
															"nodeType": "YulAssignment",
															"src": "11730:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11774:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11774:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11743:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11743:30:12"
																},
																"nativeSrc": "11743:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11743:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11730:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11730:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$611_to_t_address",
												"nativeSrc": "11646:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11700:5:12",
														"nodeType": "YulTypedName",
														"src": "11700:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11710:9:12",
														"nodeType": "YulTypedName",
														"src": "11710:9:12",
														"type": ""
													}
												],
												"src": "11646:140:12"
											},
											{
												"body": {
													"nativeSrc": "11871:80:12",
													"nodeType": "YulBlock",
													"src": "11871:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11888:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11888:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11938:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11938:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$611_to_t_address",
																			"nativeSrc": "11893:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "11893:44:12"
																		},
																		"nativeSrc": "11893:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11881:6:12"
																},
																"nativeSrc": "11881:64:12",
																"nodeType": "YulFunctionCall",
																"src": "11881:64:12"
															},
															"nativeSrc": "11881:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "11881:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack",
												"nativeSrc": "11792:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11859:5:12",
														"nodeType": "YulTypedName",
														"src": "11859:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11866:3:12",
														"nodeType": "YulTypedName",
														"src": "11866:3:12",
														"type": ""
													}
												],
												"src": "11792:159:12"
											},
											{
												"body": {
													"nativeSrc": "12069:138:12",
													"nodeType": "YulBlock",
													"src": "12069:138:12",
													"statements": [
														{
															"nativeSrc": "12079:26:12",
															"nodeType": "YulAssignment",
															"src": "12079:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12091:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12091:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12102:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12102:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12087:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:12"
																},
																"nativeSrc": "12087:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12087:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12079:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12079:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12173:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12186:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12186:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12182:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12182:3:12"
																		},
																		"nativeSrc": "12182:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12182:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack",
																	"nativeSrc": "12115:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "12115:57:12"
																},
																"nativeSrc": "12115:85:12",
																"nodeType": "YulFunctionCall",
																"src": "12115:85:12"
															},
															"nativeSrc": "12115:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "12115:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed",
												"nativeSrc": "11957:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12041:9:12",
														"nodeType": "YulTypedName",
														"src": "12041:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12053:6:12",
														"nodeType": "YulTypedName",
														"src": "12053:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12064:4:12",
														"nodeType": "YulTypedName",
														"src": "12064:4:12",
														"type": ""
													}
												],
												"src": "11957:250:12"
											},
											{
												"body": {
													"nativeSrc": "12319:62:12",
													"nodeType": "YulBlock",
													"src": "12319:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12341:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12341:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12349:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12349:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:12"
																		},
																		"nativeSrc": "12337:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12337:14:12"
																	},
																	{
																		"hexValue": "41504920646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "12353:20:12",
																		"nodeType": "YulLiteral",
																		"src": "12353:20:12",
																		"type": "",
																		"value": "API does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12330:6:12"
																},
																"nativeSrc": "12330:44:12",
																"nodeType": "YulFunctionCall",
																"src": "12330:44:12"
															},
															"nativeSrc": "12330:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "12330:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
												"nativeSrc": "12213:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12311:6:12",
														"nodeType": "YulTypedName",
														"src": "12311:6:12",
														"type": ""
													}
												],
												"src": "12213:168:12"
											},
											{
												"body": {
													"nativeSrc": "12533:220:12",
													"nodeType": "YulBlock",
													"src": "12533:220:12",
													"statements": [
														{
															"nativeSrc": "12543:74:12",
															"nodeType": "YulAssignment",
															"src": "12543:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12609:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12609:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12614:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12614:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12550:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12550:58:12"
																},
																"nativeSrc": "12550:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12550:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12543:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12543:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12715:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																	"nativeSrc": "12626:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12626:88:12"
																},
																"nativeSrc": "12626:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12626:93:12"
															},
															"nativeSrc": "12626:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12626:93:12"
														},
														{
															"nativeSrc": "12728:19:12",
															"nodeType": "YulAssignment",
															"src": "12728:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12739:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12739:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12744:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12735:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:12"
																},
																"nativeSrc": "12735:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12735:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12728:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12728:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12387:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12521:3:12",
														"nodeType": "YulTypedName",
														"src": "12521:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12529:3:12",
														"nodeType": "YulTypedName",
														"src": "12529:3:12",
														"type": ""
													}
												],
												"src": "12387:366:12"
											},
											{
												"body": {
													"nativeSrc": "12930:248:12",
													"nodeType": "YulBlock",
													"src": "12930:248:12",
													"statements": [
														{
															"nativeSrc": "12940:26:12",
															"nodeType": "YulAssignment",
															"src": "12940:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12952:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12952:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12963:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12948:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12948:3:12"
																},
																"nativeSrc": "12948:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12948:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12940:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12940:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12987:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12987:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12998:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12998:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12983:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:12"
																		},
																		"nativeSrc": "12983:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12983:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13006:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13006:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13012:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13012:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:12"
																		},
																		"nativeSrc": "13002:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13002:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12976:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12976:6:12"
																},
																"nativeSrc": "12976:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12976:47:12"
															},
															"nativeSrc": "12976:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12976:47:12"
														},
														{
															"nativeSrc": "13032:139:12",
															"nodeType": "YulAssignment",
															"src": "13032:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13166:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13166:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13040:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13040:124:12"
																},
																"nativeSrc": "13040:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13040:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13032:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13032:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12759:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12910:9:12",
														"nodeType": "YulTypedName",
														"src": "12910:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12925:4:12",
														"nodeType": "YulTypedName",
														"src": "12925:4:12",
														"type": ""
													}
												],
												"src": "12759:419:12"
											},
											{
												"body": {
													"nativeSrc": "13290:67:12",
													"nodeType": "YulBlock",
													"src": "13290:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13312:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13312:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13320:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13320:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13308:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13308:3:12"
																		},
																		"nativeSrc": "13308:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13308:14:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "13324:25:12",
																		"nodeType": "YulLiteral",
																		"src": "13324:25:12",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13301:6:12"
																},
																"nativeSrc": "13301:49:12",
																"nodeType": "YulFunctionCall",
																"src": "13301:49:12"
															},
															"nativeSrc": "13301:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "13301:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "13184:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13282:6:12",
														"nodeType": "YulTypedName",
														"src": "13282:6:12",
														"type": ""
													}
												],
												"src": "13184:173:12"
											},
											{
												"body": {
													"nativeSrc": "13509:220:12",
													"nodeType": "YulBlock",
													"src": "13509:220:12",
													"statements": [
														{
															"nativeSrc": "13519:74:12",
															"nodeType": "YulAssignment",
															"src": "13519:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13585:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13585:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13590:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13526:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13526:58:12"
																},
																"nativeSrc": "13526:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13526:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13519:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13519:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13691:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13691:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "13602:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13602:88:12"
																},
																"nativeSrc": "13602:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13602:93:12"
															},
															"nativeSrc": "13602:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13602:93:12"
														},
														{
															"nativeSrc": "13704:19:12",
															"nodeType": "YulAssignment",
															"src": "13704:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13715:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13720:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13720:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13711:3:12"
																},
																"nativeSrc": "13711:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13711:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13704:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13363:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13497:3:12",
														"nodeType": "YulTypedName",
														"src": "13497:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13505:3:12",
														"nodeType": "YulTypedName",
														"src": "13505:3:12",
														"type": ""
													}
												],
												"src": "13363:366:12"
											},
											{
												"body": {
													"nativeSrc": "13906:248:12",
													"nodeType": "YulBlock",
													"src": "13906:248:12",
													"statements": [
														{
															"nativeSrc": "13916:26:12",
															"nodeType": "YulAssignment",
															"src": "13916:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13928:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13928:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13939:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13939:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13924:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13924:3:12"
																},
																"nativeSrc": "13924:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13924:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13916:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13916:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13963:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13963:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13974:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13974:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13959:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13959:3:12"
																		},
																		"nativeSrc": "13959:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13959:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13982:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13982:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13988:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13988:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13978:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13978:3:12"
																		},
																		"nativeSrc": "13978:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13978:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13952:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13952:6:12"
																},
																"nativeSrc": "13952:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13952:47:12"
															},
															"nativeSrc": "13952:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13952:47:12"
														},
														{
															"nativeSrc": "14008:139:12",
															"nodeType": "YulAssignment",
															"src": "14008:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14142:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14142:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14016:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14016:124:12"
																},
																"nativeSrc": "14016:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14016:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14008:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14008:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13735:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13886:9:12",
														"nodeType": "YulTypedName",
														"src": "13886:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13901:4:12",
														"nodeType": "YulTypedName",
														"src": "13901:4:12",
														"type": ""
													}
												],
												"src": "13735:419:12"
											},
											{
												"body": {
													"nativeSrc": "14266:66:12",
													"nodeType": "YulBlock",
													"src": "14266:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14288:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14288:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14296:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14296:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14284:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:12"
																		},
																		"nativeSrc": "14284:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14284:14:12"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "14300:24:12",
																		"nodeType": "YulLiteral",
																		"src": "14300:24:12",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14277:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14277:6:12"
																},
																"nativeSrc": "14277:48:12",
																"nodeType": "YulFunctionCall",
																"src": "14277:48:12"
															},
															"nativeSrc": "14277:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "14277:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "14160:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14258:6:12",
														"nodeType": "YulTypedName",
														"src": "14258:6:12",
														"type": ""
													}
												],
												"src": "14160:172:12"
											},
											{
												"body": {
													"nativeSrc": "14484:220:12",
													"nodeType": "YulBlock",
													"src": "14484:220:12",
													"statements": [
														{
															"nativeSrc": "14494:74:12",
															"nodeType": "YulAssignment",
															"src": "14494:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14560:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14560:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14565:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14565:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14501:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14501:58:12"
																},
																"nativeSrc": "14501:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14501:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14494:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14494:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14666:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14666:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "14577:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14577:88:12"
																},
																"nativeSrc": "14577:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14577:93:12"
															},
															"nativeSrc": "14577:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14577:93:12"
														},
														{
															"nativeSrc": "14679:19:12",
															"nodeType": "YulAssignment",
															"src": "14679:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14690:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14690:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14695:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14695:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14686:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14686:3:12"
																},
																"nativeSrc": "14686:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14686:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14679:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14679:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14338:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14472:3:12",
														"nodeType": "YulTypedName",
														"src": "14472:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14480:3:12",
														"nodeType": "YulTypedName",
														"src": "14480:3:12",
														"type": ""
													}
												],
												"src": "14338:366:12"
											},
											{
												"body": {
													"nativeSrc": "14881:248:12",
													"nodeType": "YulBlock",
													"src": "14881:248:12",
													"statements": [
														{
															"nativeSrc": "14891:26:12",
															"nodeType": "YulAssignment",
															"src": "14891:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14903:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14903:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14914:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14914:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14899:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14899:3:12"
																},
																"nativeSrc": "14899:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14899:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14891:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14891:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14938:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14938:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14949:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14949:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14934:3:12"
																		},
																		"nativeSrc": "14934:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14934:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14957:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14957:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14963:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14953:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14953:3:12"
																		},
																		"nativeSrc": "14953:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14953:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14927:6:12"
																},
																"nativeSrc": "14927:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14927:47:12"
															},
															"nativeSrc": "14927:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14927:47:12"
														},
														{
															"nativeSrc": "14983:139:12",
															"nodeType": "YulAssignment",
															"src": "14983:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15117:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15117:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14991:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14991:124:12"
																},
																"nativeSrc": "14991:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14991:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14983:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14983:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14710:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14861:9:12",
														"nodeType": "YulTypedName",
														"src": "14861:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14876:4:12",
														"nodeType": "YulTypedName",
														"src": "14876:4:12",
														"type": ""
													}
												],
												"src": "14710:419:12"
											},
											{
												"body": {
													"nativeSrc": "15241:125:12",
													"nodeType": "YulBlock",
													"src": "15241:125:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15263:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15263:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15271:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15271:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15259:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15259:3:12"
																		},
																		"nativeSrc": "15259:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15259:14:12"
																	},
																	{
																		"hexValue": "4e756d626572206f66207265717565737473206d757374206265206772656174",
																		"kind": "string",
																		"nativeSrc": "15275:34:12",
																		"nodeType": "YulLiteral",
																		"src": "15275:34:12",
																		"type": "",
																		"value": "Number of requests must be great"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15252:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15252:6:12"
																},
																"nativeSrc": "15252:58:12",
																"nodeType": "YulFunctionCall",
																"src": "15252:58:12"
															},
															"nativeSrc": "15252:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "15252:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15331:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15331:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15339:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15339:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15327:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15327:3:12"
																		},
																		"nativeSrc": "15327:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15327:15:12"
																	},
																	{
																		"hexValue": "6572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "15344:14:12",
																		"nodeType": "YulLiteral",
																		"src": "15344:14:12",
																		"type": "",
																		"value": "er than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15320:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15320:6:12"
																},
																"nativeSrc": "15320:39:12",
																"nodeType": "YulFunctionCall",
																"src": "15320:39:12"
															},
															"nativeSrc": "15320:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "15320:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731",
												"nativeSrc": "15135:231:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15233:6:12",
														"nodeType": "YulTypedName",
														"src": "15233:6:12",
														"type": ""
													}
												],
												"src": "15135:231:12"
											},
											{
												"body": {
													"nativeSrc": "15518:220:12",
													"nodeType": "YulBlock",
													"src": "15518:220:12",
													"statements": [
														{
															"nativeSrc": "15528:74:12",
															"nodeType": "YulAssignment",
															"src": "15528:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15594:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15594:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15599:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15599:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15535:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15535:58:12"
																},
																"nativeSrc": "15535:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15535:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15528:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15700:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15700:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731",
																	"nativeSrc": "15611:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15611:88:12"
																},
																"nativeSrc": "15611:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15611:93:12"
															},
															"nativeSrc": "15611:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15611:93:12"
														},
														{
															"nativeSrc": "15713:19:12",
															"nodeType": "YulAssignment",
															"src": "15713:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15724:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15724:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15729:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15729:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15720:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15720:3:12"
																},
																"nativeSrc": "15720:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15720:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15713:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15713:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15372:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15506:3:12",
														"nodeType": "YulTypedName",
														"src": "15506:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15514:3:12",
														"nodeType": "YulTypedName",
														"src": "15514:3:12",
														"type": ""
													}
												],
												"src": "15372:366:12"
											},
											{
												"body": {
													"nativeSrc": "15915:248:12",
													"nodeType": "YulBlock",
													"src": "15915:248:12",
													"statements": [
														{
															"nativeSrc": "15925:26:12",
															"nodeType": "YulAssignment",
															"src": "15925:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15937:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15937:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15948:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15948:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15933:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15933:3:12"
																},
																"nativeSrc": "15933:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15933:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15925:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15925:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15972:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15972:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15983:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15983:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15968:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:12"
																		},
																		"nativeSrc": "15968:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15968:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15991:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15991:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15997:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15997:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15987:3:12"
																		},
																		"nativeSrc": "15987:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15987:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15961:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15961:6:12"
																},
																"nativeSrc": "15961:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15961:47:12"
															},
															"nativeSrc": "15961:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15961:47:12"
														},
														{
															"nativeSrc": "16017:139:12",
															"nodeType": "YulAssignment",
															"src": "16017:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16151:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16151:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16025:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16025:124:12"
																},
																"nativeSrc": "16025:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16025:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16017:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16017:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15744:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15895:9:12",
														"nodeType": "YulTypedName",
														"src": "15895:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15910:4:12",
														"nodeType": "YulTypedName",
														"src": "15910:4:12",
														"type": ""
													}
												],
												"src": "15744:419:12"
											},
											{
												"body": {
													"nativeSrc": "16275:61:12",
													"nodeType": "YulBlock",
													"src": "16275:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16297:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16297:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16305:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16305:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16293:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16293:3:12"
																		},
																		"nativeSrc": "16293:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16293:14:12"
																	},
																	{
																		"hexValue": "415049206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "16309:19:12",
																		"nodeType": "YulLiteral",
																		"src": "16309:19:12",
																		"type": "",
																		"value": "API is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16286:6:12"
																},
																"nativeSrc": "16286:43:12",
																"nodeType": "YulFunctionCall",
																"src": "16286:43:12"
															},
															"nativeSrc": "16286:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "16286:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
												"nativeSrc": "16169:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16267:6:12",
														"nodeType": "YulTypedName",
														"src": "16267:6:12",
														"type": ""
													}
												],
												"src": "16169:167:12"
											},
											{
												"body": {
													"nativeSrc": "16488:220:12",
													"nodeType": "YulBlock",
													"src": "16488:220:12",
													"statements": [
														{
															"nativeSrc": "16498:74:12",
															"nodeType": "YulAssignment",
															"src": "16498:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16564:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16564:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16569:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16569:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16505:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16505:58:12"
																},
																"nativeSrc": "16505:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16505:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16498:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16670:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16670:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																	"nativeSrc": "16581:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16581:88:12"
																},
																"nativeSrc": "16581:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16581:93:12"
															},
															"nativeSrc": "16581:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16581:93:12"
														},
														{
															"nativeSrc": "16683:19:12",
															"nodeType": "YulAssignment",
															"src": "16683:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16694:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16699:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16699:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16690:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16690:3:12"
																},
																"nativeSrc": "16690:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16690:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16683:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16683:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16342:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16476:3:12",
														"nodeType": "YulTypedName",
														"src": "16476:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16484:3:12",
														"nodeType": "YulTypedName",
														"src": "16484:3:12",
														"type": ""
													}
												],
												"src": "16342:366:12"
											},
											{
												"body": {
													"nativeSrc": "16885:248:12",
													"nodeType": "YulBlock",
													"src": "16885:248:12",
													"statements": [
														{
															"nativeSrc": "16895:26:12",
															"nodeType": "YulAssignment",
															"src": "16895:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16907:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16907:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16918:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16903:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16903:3:12"
																},
																"nativeSrc": "16903:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16903:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16895:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16895:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16942:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16942:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16953:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16953:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16938:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16938:3:12"
																		},
																		"nativeSrc": "16938:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16938:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16961:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16961:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16967:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16967:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16957:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16957:3:12"
																		},
																		"nativeSrc": "16957:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16957:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16931:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16931:6:12"
																},
																"nativeSrc": "16931:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16931:47:12"
															},
															"nativeSrc": "16931:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16931:47:12"
														},
														{
															"nativeSrc": "16987:139:12",
															"nodeType": "YulAssignment",
															"src": "16987:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17121:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17121:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16995:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16995:124:12"
																},
																"nativeSrc": "16995:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16995:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16987:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16987:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16714:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16865:9:12",
														"nodeType": "YulTypedName",
														"src": "16865:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16880:4:12",
														"nodeType": "YulTypedName",
														"src": "16880:4:12",
														"type": ""
													}
												],
												"src": "16714:419:12"
											},
											{
												"body": {
													"nativeSrc": "17167:152:12",
													"nodeType": "YulBlock",
													"src": "17167:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17184:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17184:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17187:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17187:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17177:6:12"
																},
																"nativeSrc": "17177:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17177:88:12"
															},
															"nativeSrc": "17177:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17177:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17281:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17281:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17284:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17284:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17274:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17274:6:12"
																},
																"nativeSrc": "17274:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17274:15:12"
															},
															"nativeSrc": "17274:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17274:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17305:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17305:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17308:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17308:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17298:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17298:6:12"
																},
																"nativeSrc": "17298:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17298:15:12"
															},
															"nativeSrc": "17298:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17298:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17139:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17139:180:12"
											},
											{
												"body": {
													"nativeSrc": "17373:362:12",
													"nodeType": "YulBlock",
													"src": "17373:362:12",
													"statements": [
														{
															"nativeSrc": "17383:25:12",
															"nodeType": "YulAssignment",
															"src": "17383:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17406:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17406:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17388:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17388:17:12"
																},
																"nativeSrc": "17388:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17388:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17383:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17383:1:12"
																}
															]
														},
														{
															"nativeSrc": "17417:25:12",
															"nodeType": "YulAssignment",
															"src": "17417:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17440:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17440:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17422:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17422:17:12"
																},
																"nativeSrc": "17422:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17422:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17417:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17417:1:12"
																}
															]
														},
														{
															"nativeSrc": "17451:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17451:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17474:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17474:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17477:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17477:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17470:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17470:3:12"
																},
																"nativeSrc": "17470:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17470:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17455:11:12",
																	"nodeType": "YulTypedName",
																	"src": "17455:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17488:41:12",
															"nodeType": "YulAssignment",
															"src": "17488:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17517:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "17517:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17499:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17499:17:12"
																},
																"nativeSrc": "17499:30:12",
																"nodeType": "YulFunctionCall",
																"src": "17499:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17488:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "17488:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17706:22:12",
																"nodeType": "YulBlock",
																"src": "17706:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17708:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17708:16:12"
																			},
																			"nativeSrc": "17708:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17708:18:12"
																		},
																		"nativeSrc": "17708:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17708:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17639:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "17639:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17632:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "17632:6:12"
																				},
																				"nativeSrc": "17632:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17632:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17662:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "17662:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17669:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "17669:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17678:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "17678:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17665:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "17665:3:12"
																						},
																						"nativeSrc": "17665:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "17665:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17659:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "17659:2:12"
																				},
																				"nativeSrc": "17659:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17659:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17612:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17612:2:12"
																		},
																		"nativeSrc": "17612:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17612:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17592:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17592:6:12"
																},
																"nativeSrc": "17592:113:12",
																"nodeType": "YulFunctionCall",
																"src": "17592:113:12"
															},
															"nativeSrc": "17589:139:12",
															"nodeType": "YulIf",
															"src": "17589:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17325:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17356:1:12",
														"nodeType": "YulTypedName",
														"src": "17356:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17359:1:12",
														"nodeType": "YulTypedName",
														"src": "17359:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17365:7:12",
														"nodeType": "YulTypedName",
														"src": "17365:7:12",
														"type": ""
													}
												],
												"src": "17325:410:12"
											},
											{
												"body": {
													"nativeSrc": "17769:152:12",
													"nodeType": "YulBlock",
													"src": "17769:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17786:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17786:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17789:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17789:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17779:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17779:6:12"
																},
																"nativeSrc": "17779:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17779:88:12"
															},
															"nativeSrc": "17779:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17779:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17883:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17883:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17886:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17886:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17876:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17876:6:12"
																},
																"nativeSrc": "17876:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17876:15:12"
															},
															"nativeSrc": "17876:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17876:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17907:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17907:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17910:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17910:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17900:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17900:6:12"
																},
																"nativeSrc": "17900:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17900:15:12"
															},
															"nativeSrc": "17900:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17900:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17741:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17741:180:12"
											},
											{
												"body": {
													"nativeSrc": "17969:143:12",
													"nodeType": "YulBlock",
													"src": "17969:143:12",
													"statements": [
														{
															"nativeSrc": "17979:25:12",
															"nodeType": "YulAssignment",
															"src": "17979:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18002:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18002:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17984:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17984:17:12"
																},
																"nativeSrc": "17984:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17984:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17979:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17979:1:12"
																}
															]
														},
														{
															"nativeSrc": "18013:25:12",
															"nodeType": "YulAssignment",
															"src": "18013:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18036:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18036:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18018:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18018:17:12"
																},
																"nativeSrc": "18018:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18018:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18013:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18013:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18060:22:12",
																"nodeType": "YulBlock",
																"src": "18060:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18062:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18062:16:12"
																			},
																			"nativeSrc": "18062:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18062:18:12"
																		},
																		"nativeSrc": "18062:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18062:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18057:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18057:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18050:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:12"
																},
																"nativeSrc": "18050:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18050:9:12"
															},
															"nativeSrc": "18047:35:12",
															"nodeType": "YulIf",
															"src": "18047:35:12"
														},
														{
															"nativeSrc": "18092:14:12",
															"nodeType": "YulAssignment",
															"src": "18092:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18101:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18101:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18104:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18104:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18097:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18097:3:12"
																},
																"nativeSrc": "18097:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18097:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18092:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18092:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17927:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17958:1:12",
														"nodeType": "YulTypedName",
														"src": "17958:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17961:1:12",
														"nodeType": "YulTypedName",
														"src": "17961:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17967:1:12",
														"nodeType": "YulTypedName",
														"src": "17967:1:12",
														"type": ""
													}
												],
												"src": "17927:185:12"
											},
											{
												"body": {
													"nativeSrc": "18224:61:12",
													"nodeType": "YulBlock",
													"src": "18224:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18246:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18242:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:12"
																		},
																		"nativeSrc": "18242:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:12"
																	},
																	{
																		"hexValue": "4f766572666c6f77206465746563746564",
																		"kind": "string",
																		"nativeSrc": "18258:19:12",
																		"nodeType": "YulLiteral",
																		"src": "18258:19:12",
																		"type": "",
																		"value": "Overflow detected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:12"
																},
																"nativeSrc": "18235:43:12",
																"nodeType": "YulFunctionCall",
																"src": "18235:43:12"
															},
															"nativeSrc": "18235:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "18235:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
												"nativeSrc": "18118:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18216:6:12",
														"nodeType": "YulTypedName",
														"src": "18216:6:12",
														"type": ""
													}
												],
												"src": "18118:167:12"
											},
											{
												"body": {
													"nativeSrc": "18437:220:12",
													"nodeType": "YulBlock",
													"src": "18437:220:12",
													"statements": [
														{
															"nativeSrc": "18447:74:12",
															"nodeType": "YulAssignment",
															"src": "18447:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18513:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18513:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18518:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18518:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18454:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18454:58:12"
																},
																"nativeSrc": "18454:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18454:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18447:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18447:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18619:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18619:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
																	"nativeSrc": "18530:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18530:88:12"
																},
																"nativeSrc": "18530:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18530:93:12"
															},
															"nativeSrc": "18530:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18530:93:12"
														},
														{
															"nativeSrc": "18632:19:12",
															"nodeType": "YulAssignment",
															"src": "18632:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18643:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18643:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18648:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18648:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18639:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18639:3:12"
																},
																"nativeSrc": "18639:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18639:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18632:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18632:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18291:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18425:3:12",
														"nodeType": "YulTypedName",
														"src": "18425:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18433:3:12",
														"nodeType": "YulTypedName",
														"src": "18433:3:12",
														"type": ""
													}
												],
												"src": "18291:366:12"
											},
											{
												"body": {
													"nativeSrc": "18834:248:12",
													"nodeType": "YulBlock",
													"src": "18834:248:12",
													"statements": [
														{
															"nativeSrc": "18844:26:12",
															"nodeType": "YulAssignment",
															"src": "18844:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18856:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18856:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18867:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18867:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18852:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18852:3:12"
																},
																"nativeSrc": "18852:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18852:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18844:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18844:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18891:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18891:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18902:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18902:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18887:3:12"
																		},
																		"nativeSrc": "18887:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18887:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18910:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18910:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18916:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18916:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18906:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18906:3:12"
																		},
																		"nativeSrc": "18906:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18906:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18880:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18880:6:12"
																},
																"nativeSrc": "18880:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18880:47:12"
															},
															"nativeSrc": "18880:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18880:47:12"
														},
														{
															"nativeSrc": "18936:139:12",
															"nodeType": "YulAssignment",
															"src": "18936:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19070:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19070:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18944:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18944:124:12"
																},
																"nativeSrc": "18944:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18944:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18936:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18936:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18663:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18814:9:12",
														"nodeType": "YulTypedName",
														"src": "18814:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18829:4:12",
														"nodeType": "YulTypedName",
														"src": "18829:4:12",
														"type": ""
													}
												],
												"src": "18663:419:12"
											},
											{
												"body": {
													"nativeSrc": "19132:147:12",
													"nodeType": "YulBlock",
													"src": "19132:147:12",
													"statements": [
														{
															"nativeSrc": "19142:25:12",
															"nodeType": "YulAssignment",
															"src": "19142:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19165:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19165:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19147:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19147:17:12"
																},
																"nativeSrc": "19147:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19147:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19142:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19142:1:12"
																}
															]
														},
														{
															"nativeSrc": "19176:25:12",
															"nodeType": "YulAssignment",
															"src": "19176:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19199:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19199:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19181:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19181:17:12"
																},
																"nativeSrc": "19181:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19181:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19176:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19176:1:12"
																}
															]
														},
														{
															"nativeSrc": "19210:16:12",
															"nodeType": "YulAssignment",
															"src": "19210:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19221:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19221:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19224:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19224:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19217:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19217:3:12"
																},
																"nativeSrc": "19217:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19217:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19210:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19210:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19250:22:12",
																"nodeType": "YulBlock",
																"src": "19250:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19252:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19252:16:12"
																			},
																			"nativeSrc": "19252:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19252:18:12"
																		},
																		"nativeSrc": "19252:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19252:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19242:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19242:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19245:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19245:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19239:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19239:2:12"
																},
																"nativeSrc": "19239:10:12",
																"nodeType": "YulFunctionCall",
																"src": "19239:10:12"
															},
															"nativeSrc": "19236:36:12",
															"nodeType": "YulIf",
															"src": "19236:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19088:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19119:1:12",
														"nodeType": "YulTypedName",
														"src": "19119:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19122:1:12",
														"nodeType": "YulTypedName",
														"src": "19122:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19128:3:12",
														"nodeType": "YulTypedName",
														"src": "19128:3:12",
														"type": ""
													}
												],
												"src": "19088:191:12"
											},
											{
												"body": {
													"nativeSrc": "19391:68:12",
													"nodeType": "YulBlock",
													"src": "19391:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19413:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19413:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19421:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19421:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19409:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19409:3:12"
																		},
																		"nativeSrc": "19409:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19409:14:12"
																	},
																	{
																		"hexValue": "415049206e616d652063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "19425:26:12",
																		"nodeType": "YulLiteral",
																		"src": "19425:26:12",
																		"type": "",
																		"value": "API name cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19402:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19402:6:12"
																},
																"nativeSrc": "19402:50:12",
																"nodeType": "YulFunctionCall",
																"src": "19402:50:12"
															},
															"nativeSrc": "19402:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "19402:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
												"nativeSrc": "19285:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19383:6:12",
														"nodeType": "YulTypedName",
														"src": "19383:6:12",
														"type": ""
													}
												],
												"src": "19285:174:12"
											},
											{
												"body": {
													"nativeSrc": "19611:220:12",
													"nodeType": "YulBlock",
													"src": "19611:220:12",
													"statements": [
														{
															"nativeSrc": "19621:74:12",
															"nodeType": "YulAssignment",
															"src": "19621:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19687:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19687:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19692:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19628:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19628:58:12"
																},
																"nativeSrc": "19628:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19628:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19621:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19621:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19793:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19793:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																	"nativeSrc": "19704:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19704:88:12"
																},
																"nativeSrc": "19704:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19704:93:12"
															},
															"nativeSrc": "19704:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19704:93:12"
														},
														{
															"nativeSrc": "19806:19:12",
															"nodeType": "YulAssignment",
															"src": "19806:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19817:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19817:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19822:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19822:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19813:3:12"
																},
																"nativeSrc": "19813:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19813:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19806:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19465:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19599:3:12",
														"nodeType": "YulTypedName",
														"src": "19599:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19607:3:12",
														"nodeType": "YulTypedName",
														"src": "19607:3:12",
														"type": ""
													}
												],
												"src": "19465:366:12"
											},
											{
												"body": {
													"nativeSrc": "20008:248:12",
													"nodeType": "YulBlock",
													"src": "20008:248:12",
													"statements": [
														{
															"nativeSrc": "20018:26:12",
															"nodeType": "YulAssignment",
															"src": "20018:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20030:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20030:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20026:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20026:3:12"
																},
																"nativeSrc": "20026:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20026:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20018:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20018:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20065:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20065:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20076:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20076:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20061:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20061:3:12"
																		},
																		"nativeSrc": "20061:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20061:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20084:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20084:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20090:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20090:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20080:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20080:3:12"
																		},
																		"nativeSrc": "20080:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20080:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20054:6:12"
																},
																"nativeSrc": "20054:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20054:47:12"
															},
															"nativeSrc": "20054:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20054:47:12"
														},
														{
															"nativeSrc": "20110:139:12",
															"nodeType": "YulAssignment",
															"src": "20110:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20244:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20244:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20118:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20118:124:12"
																},
																"nativeSrc": "20118:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20118:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20110:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19837:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19988:9:12",
														"nodeType": "YulTypedName",
														"src": "19988:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20003:4:12",
														"nodeType": "YulTypedName",
														"src": "20003:4:12",
														"type": ""
													}
												],
												"src": "19837:419:12"
											},
											{
												"body": {
													"nativeSrc": "20368:124:12",
													"nodeType": "YulBlock",
													"src": "20368:124:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20390:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20390:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20398:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20398:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20386:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20386:3:12"
																		},
																		"nativeSrc": "20386:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20386:14:12"
																	},
																	{
																		"hexValue": "5072696365207065722072657175657374206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "20402:34:12",
																		"nodeType": "YulLiteral",
																		"src": "20402:34:12",
																		"type": "",
																		"value": "Price per request must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20379:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20379:6:12"
																},
																"nativeSrc": "20379:58:12",
																"nodeType": "YulFunctionCall",
																"src": "20379:58:12"
															},
															"nativeSrc": "20379:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "20379:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20458:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20458:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20466:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20466:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20454:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20454:3:12"
																		},
																		"nativeSrc": "20454:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20454:15:12"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "20471:13:12",
																		"nodeType": "YulLiteral",
																		"src": "20471:13:12",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20447:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20447:6:12"
																},
																"nativeSrc": "20447:38:12",
																"nodeType": "YulFunctionCall",
																"src": "20447:38:12"
															},
															"nativeSrc": "20447:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "20447:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e",
												"nativeSrc": "20262:230:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20360:6:12",
														"nodeType": "YulTypedName",
														"src": "20360:6:12",
														"type": ""
													}
												],
												"src": "20262:230:12"
											},
											{
												"body": {
													"nativeSrc": "20644:220:12",
													"nodeType": "YulBlock",
													"src": "20644:220:12",
													"statements": [
														{
															"nativeSrc": "20654:74:12",
															"nodeType": "YulAssignment",
															"src": "20654:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20720:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20720:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20725:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20725:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20661:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20661:58:12"
																},
																"nativeSrc": "20661:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20661:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20654:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20654:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20826:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20826:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e",
																	"nativeSrc": "20737:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20737:88:12"
																},
																"nativeSrc": "20737:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20737:93:12"
															},
															"nativeSrc": "20737:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20737:93:12"
														},
														{
															"nativeSrc": "20839:19:12",
															"nodeType": "YulAssignment",
															"src": "20839:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20850:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20850:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20855:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20855:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20846:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20846:3:12"
																},
																"nativeSrc": "20846:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20846:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20839:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20839:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20498:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20632:3:12",
														"nodeType": "YulTypedName",
														"src": "20632:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20640:3:12",
														"nodeType": "YulTypedName",
														"src": "20640:3:12",
														"type": ""
													}
												],
												"src": "20498:366:12"
											},
											{
												"body": {
													"nativeSrc": "21041:248:12",
													"nodeType": "YulBlock",
													"src": "21041:248:12",
													"statements": [
														{
															"nativeSrc": "21051:26:12",
															"nodeType": "YulAssignment",
															"src": "21051:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21063:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21074:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21059:3:12"
																},
																"nativeSrc": "21059:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21059:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21051:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21098:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21098:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21109:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21109:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21094:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21094:3:12"
																		},
																		"nativeSrc": "21094:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21094:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21117:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21117:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21123:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21113:3:12"
																		},
																		"nativeSrc": "21113:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21113:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21087:6:12"
																},
																"nativeSrc": "21087:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21087:47:12"
															},
															"nativeSrc": "21087:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21087:47:12"
														},
														{
															"nativeSrc": "21143:139:12",
															"nodeType": "YulAssignment",
															"src": "21143:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21277:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21277:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21151:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21151:124:12"
																},
																"nativeSrc": "21151:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21151:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21143:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21143:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20870:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21021:9:12",
														"nodeType": "YulTypedName",
														"src": "21021:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21036:4:12",
														"nodeType": "YulTypedName",
														"src": "21036:4:12",
														"type": ""
													}
												],
												"src": "20870:419:12"
											},
											{
												"body": {
													"nativeSrc": "21338:190:12",
													"nodeType": "YulBlock",
													"src": "21338:190:12",
													"statements": [
														{
															"nativeSrc": "21348:33:12",
															"nodeType": "YulAssignment",
															"src": "21348:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21375:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21375:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21357:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21357:17:12"
																},
																"nativeSrc": "21357:24:12",
																"nodeType": "YulFunctionCall",
																"src": "21357:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21348:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21348:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21471:22:12",
																"nodeType": "YulBlock",
																"src": "21471:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21473:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "21473:16:12"
																			},
																			"nativeSrc": "21473:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21473:18:12"
																		},
																		"nativeSrc": "21473:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21473:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21396:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21396:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21403:66:12",
																		"nodeType": "YulLiteral",
																		"src": "21403:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21393:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21393:2:12"
																},
																"nativeSrc": "21393:77:12",
																"nodeType": "YulFunctionCall",
																"src": "21393:77:12"
															},
															"nativeSrc": "21390:103:12",
															"nodeType": "YulIf",
															"src": "21390:103:12"
														},
														{
															"nativeSrc": "21502:20:12",
															"nodeType": "YulAssignment",
															"src": "21502:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21513:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21513:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21520:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21520:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21509:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21509:3:12"
																},
																"nativeSrc": "21509:13:12",
																"nodeType": "YulFunctionCall",
																"src": "21509:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21502:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21502:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "21295:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21324:5:12",
														"nodeType": "YulTypedName",
														"src": "21324:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21334:3:12",
														"nodeType": "YulTypedName",
														"src": "21334:3:12",
														"type": ""
													}
												],
												"src": "21295:233:12"
											},
											{
												"body": {
													"nativeSrc": "21562:152:12",
													"nodeType": "YulBlock",
													"src": "21562:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21579:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21582:77:12",
																		"nodeType": "YulLiteral",
																		"src": "21582:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21572:6:12"
																},
																"nativeSrc": "21572:88:12",
																"nodeType": "YulFunctionCall",
																"src": "21572:88:12"
															},
															"nativeSrc": "21572:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "21572:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "21679:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21669:6:12"
																},
																"nativeSrc": "21669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "21669:15:12"
															},
															"nativeSrc": "21669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "21669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21700:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21703:4:12",
																		"nodeType": "YulLiteral",
																		"src": "21703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21693:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21693:6:12"
																},
																"nativeSrc": "21693:15:12",
																"nodeType": "YulFunctionCall",
																"src": "21693:15:12"
															},
															"nativeSrc": "21693:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "21693:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21534:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "21534:180:12"
											},
											{
												"body": {
													"nativeSrc": "21771:269:12",
													"nodeType": "YulBlock",
													"src": "21771:269:12",
													"statements": [
														{
															"nativeSrc": "21781:22:12",
															"nodeType": "YulAssignment",
															"src": "21781:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21795:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21795:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21801:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21801:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21791:3:12"
																},
																"nativeSrc": "21791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21791:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21781:6:12"
																}
															]
														},
														{
															"nativeSrc": "21812:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21812:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21842:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21848:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21838:3:12"
																},
																"nativeSrc": "21838:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21838:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21816:18:12",
																	"nodeType": "YulTypedName",
																	"src": "21816:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21889:51:12",
																"nodeType": "YulBlock",
																"src": "21889:51:12",
																"statements": [
																	{
																		"nativeSrc": "21903:27:12",
																		"nodeType": "YulAssignment",
																		"src": "21903:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21917:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "21917:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21925:4:12",
																					"nodeType": "YulLiteral",
																					"src": "21925:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21913:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "21913:3:12"
																			},
																			"nativeSrc": "21913:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21913:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21903:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21869:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "21869:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21862:6:12"
																},
																"nativeSrc": "21862:26:12",
																"nodeType": "YulFunctionCall",
																"src": "21862:26:12"
															},
															"nativeSrc": "21859:81:12",
															"nodeType": "YulIf",
															"src": "21859:81:12"
														},
														{
															"body": {
																"nativeSrc": "21992:42:12",
																"nodeType": "YulBlock",
																"src": "21992:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "22006:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "22006:16:12"
																			},
																			"nativeSrc": "22006:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22006:18:12"
																		},
																		"nativeSrc": "22006:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "22006:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21956:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "21956:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21979:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21979:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21987:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21987:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21976:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "21976:2:12"
																		},
																		"nativeSrc": "21976:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21976:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21953:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21953:2:12"
																},
																"nativeSrc": "21953:38:12",
																"nodeType": "YulFunctionCall",
																"src": "21953:38:12"
															},
															"nativeSrc": "21950:84:12",
															"nodeType": "YulIf",
															"src": "21950:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21720:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21755:4:12",
														"nodeType": "YulTypedName",
														"src": "21755:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21764:6:12",
														"nodeType": "YulTypedName",
														"src": "21764:6:12",
														"type": ""
													}
												],
												"src": "21720:320:12"
											},
											{
												"body": {
													"nativeSrc": "22100:87:12",
													"nodeType": "YulBlock",
													"src": "22100:87:12",
													"statements": [
														{
															"nativeSrc": "22110:11:12",
															"nodeType": "YulAssignment",
															"src": "22110:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "22118:3:12",
																"nodeType": "YulIdentifier",
																"src": "22118:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22110:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22138:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "22141:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22141:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22131:6:12"
																},
																"nativeSrc": "22131:14:12",
																"nodeType": "YulFunctionCall",
																"src": "22131:14:12"
															},
															"nativeSrc": "22131:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "22131:14:12"
														},
														{
															"nativeSrc": "22154:26:12",
															"nodeType": "YulAssignment",
															"src": "22154:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22172:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22172:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22175:4:12",
																		"nodeType": "YulLiteral",
																		"src": "22175:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22162:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "22162:9:12"
																},
																"nativeSrc": "22162:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22162:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22154:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "22046:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "22087:3:12",
														"nodeType": "YulTypedName",
														"src": "22087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "22095:4:12",
														"nodeType": "YulTypedName",
														"src": "22095:4:12",
														"type": ""
													}
												],
												"src": "22046:141:12"
											},
											{
												"body": {
													"nativeSrc": "22237:49:12",
													"nodeType": "YulBlock",
													"src": "22237:49:12",
													"statements": [
														{
															"nativeSrc": "22247:33:12",
															"nodeType": "YulAssignment",
															"src": "22247:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22265:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "22265:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22272:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22272:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22261:3:12"
																		},
																		"nativeSrc": "22261:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22261:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22277:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22257:3:12"
																},
																"nativeSrc": "22257:23:12",
																"nodeType": "YulFunctionCall",
																"src": "22257:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22247:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22193:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22220:5:12",
														"nodeType": "YulTypedName",
														"src": "22220:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22230:6:12",
														"nodeType": "YulTypedName",
														"src": "22230:6:12",
														"type": ""
													}
												],
												"src": "22193:93:12"
											},
											{
												"body": {
													"nativeSrc": "22345:54:12",
													"nodeType": "YulBlock",
													"src": "22345:54:12",
													"statements": [
														{
															"nativeSrc": "22355:37:12",
															"nodeType": "YulAssignment",
															"src": "22355:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22380:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22380:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22386:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22386:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22376:3:12"
																},
																"nativeSrc": "22376:16:12",
																"nodeType": "YulFunctionCall",
																"src": "22376:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22355:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "22355:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22292:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22320:4:12",
														"nodeType": "YulTypedName",
														"src": "22320:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22326:5:12",
														"nodeType": "YulTypedName",
														"src": "22326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22336:8:12",
														"nodeType": "YulTypedName",
														"src": "22336:8:12",
														"type": ""
													}
												],
												"src": "22292:107:12"
											},
											{
												"body": {
													"nativeSrc": "22481:317:12",
													"nodeType": "YulBlock",
													"src": "22481:317:12",
													"statements": [
														{
															"nativeSrc": "22491:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "22491:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22512:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "22512:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22524:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22524:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22508:3:12"
																},
																"nativeSrc": "22508:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22508:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22495:9:12",
																	"nodeType": "YulTypedName",
																	"src": "22495:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22535:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "22535:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22566:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22566:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22577:66:12",
																		"nodeType": "YulLiteral",
																		"src": "22577:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "22547:18:12"
																},
																"nativeSrc": "22547:97:12",
																"nodeType": "YulFunctionCall",
																"src": "22547:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22539:4:12",
																	"nodeType": "YulTypedName",
																	"src": "22539:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22653:51:12",
															"nodeType": "YulAssignment",
															"src": "22653:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22684:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22684:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22695:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "22695:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22665:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "22665:18:12"
																},
																"nativeSrc": "22665:39:12",
																"nodeType": "YulFunctionCall",
																"src": "22665:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22653:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "22653:8:12"
																}
															]
														},
														{
															"nativeSrc": "22713:30:12",
															"nodeType": "YulAssignment",
															"src": "22713:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22726:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22726:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22737:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22737:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22733:3:12"
																		},
																		"nativeSrc": "22733:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22733:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22722:3:12"
																},
																"nativeSrc": "22722:21:12",
																"nodeType": "YulFunctionCall",
																"src": "22722:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "22713:5:12"
																}
															]
														},
														{
															"nativeSrc": "22752:40:12",
															"nodeType": "YulAssignment",
															"src": "22752:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22765:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22765:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22776:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "22776:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22786:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22786:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22772:3:12"
																		},
																		"nativeSrc": "22772:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22772:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22762:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "22762:2:12"
																},
																"nativeSrc": "22762:30:12",
																"nodeType": "YulFunctionCall",
																"src": "22762:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22752:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22405:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22442:5:12",
														"nodeType": "YulTypedName",
														"src": "22442:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22449:10:12",
														"nodeType": "YulTypedName",
														"src": "22449:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22461:8:12",
														"nodeType": "YulTypedName",
														"src": "22461:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22474:6:12",
														"nodeType": "YulTypedName",
														"src": "22474:6:12",
														"type": ""
													}
												],
												"src": "22405:393:12"
											},
											{
												"body": {
													"nativeSrc": "22864:82:12",
													"nodeType": "YulBlock",
													"src": "22864:82:12",
													"statements": [
														{
															"nativeSrc": "22874:66:12",
															"nodeType": "YulAssignment",
															"src": "22874:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22932:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "22932:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22914:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "22914:17:12"
																				},
																				"nativeSrc": "22914:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "22914:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22905:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "22905:8:12"
																		},
																		"nativeSrc": "22905:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22905:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22887:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "22887:17:12"
																},
																"nativeSrc": "22887:53:12",
																"nodeType": "YulFunctionCall",
																"src": "22887:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22874:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "22874:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22804:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22844:5:12",
														"nodeType": "YulTypedName",
														"src": "22844:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22854:9:12",
														"nodeType": "YulTypedName",
														"src": "22854:9:12",
														"type": ""
													}
												],
												"src": "22804:142:12"
											},
											{
												"body": {
													"nativeSrc": "22999:28:12",
													"nodeType": "YulBlock",
													"src": "22999:28:12",
													"statements": [
														{
															"nativeSrc": "23009:12:12",
															"nodeType": "YulAssignment",
															"src": "23009:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "23016:5:12",
																"nodeType": "YulIdentifier",
																"src": "23016:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23009:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22952:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22985:5:12",
														"nodeType": "YulTypedName",
														"src": "22985:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22995:3:12",
														"nodeType": "YulTypedName",
														"src": "22995:3:12",
														"type": ""
													}
												],
												"src": "22952:75:12"
											},
											{
												"body": {
													"nativeSrc": "23109:193:12",
													"nodeType": "YulBlock",
													"src": "23109:193:12",
													"statements": [
														{
															"nativeSrc": "23119:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23119:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23174:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "23174:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23143:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "23143:30:12"
																},
																"nativeSrc": "23143:39:12",
																"nodeType": "YulFunctionCall",
																"src": "23143:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23123:16:12",
																	"nodeType": "YulTypedName",
																	"src": "23123:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23198:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23198:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23238:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "23238:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23232:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "23232:5:12"
																				},
																				"nativeSrc": "23232:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23232:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23245:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23245:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23277:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "23277:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23253:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "23253:23:12"
																				},
																				"nativeSrc": "23253:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23253:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23204:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "23204:27:12"
																		},
																		"nativeSrc": "23204:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23204:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23191:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23191:6:12"
																},
																"nativeSrc": "23191:105:12",
																"nodeType": "YulFunctionCall",
																"src": "23191:105:12"
															},
															"nativeSrc": "23191:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "23191:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23033:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23086:4:12",
														"nodeType": "YulTypedName",
														"src": "23086:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23092:6:12",
														"nodeType": "YulTypedName",
														"src": "23092:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23100:7:12",
														"nodeType": "YulTypedName",
														"src": "23100:7:12",
														"type": ""
													}
												],
												"src": "23033:269:12"
											},
											{
												"body": {
													"nativeSrc": "23357:24:12",
													"nodeType": "YulBlock",
													"src": "23357:24:12",
													"statements": [
														{
															"nativeSrc": "23367:8:12",
															"nodeType": "YulAssignment",
															"src": "23367:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "23374:1:12",
																"nodeType": "YulLiteral",
																"src": "23374:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23367:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23367:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23308:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23353:3:12",
														"nodeType": "YulTypedName",
														"src": "23353:3:12",
														"type": ""
													}
												],
												"src": "23308:73:12"
											},
											{
												"body": {
													"nativeSrc": "23440:136:12",
													"nodeType": "YulBlock",
													"src": "23440:136:12",
													"statements": [
														{
															"nativeSrc": "23450:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23450:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23464:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "23464:30:12"
																},
																"nativeSrc": "23464:32:12",
																"nodeType": "YulFunctionCall",
																"src": "23464:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23454:6:12",
																	"nodeType": "YulTypedName",
																	"src": "23454:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23549:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23549:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23555:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23563:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23563:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23505:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23505:43:12"
																},
																"nativeSrc": "23505:65:12",
																"nodeType": "YulFunctionCall",
																"src": "23505:65:12"
															},
															"nativeSrc": "23505:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "23505:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23387:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23426:4:12",
														"nodeType": "YulTypedName",
														"src": "23426:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23432:6:12",
														"nodeType": "YulTypedName",
														"src": "23432:6:12",
														"type": ""
													}
												],
												"src": "23387:189:12"
											},
											{
												"body": {
													"nativeSrc": "23632:136:12",
													"nodeType": "YulBlock",
													"src": "23632:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "23699:63:12",
																"nodeType": "YulBlock",
																"src": "23699:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23743:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "23743:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23750:1:12",
																					"nodeType": "YulLiteral",
																					"src": "23750:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23713:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "23713:29:12"
																			},
																			"nativeSrc": "23713:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23713:39:12"
																		},
																		"nativeSrc": "23713:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23713:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23652:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "23652:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23659:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23659:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23649:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23649:2:12"
																},
																"nativeSrc": "23649:14:12",
																"nodeType": "YulFunctionCall",
																"src": "23649:14:12"
															},
															"nativeSrc": "23642:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23664:26:12",
																"nodeType": "YulBlock",
																"src": "23664:26:12",
																"statements": [
																	{
																		"nativeSrc": "23666:22:12",
																		"nodeType": "YulAssignment",
																		"src": "23666:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23679:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "23679:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23686:1:12",
																					"nodeType": "YulLiteral",
																					"src": "23686:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23675:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "23675:3:12"
																			},
																			"nativeSrc": "23675:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23675:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23666:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "23666:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23646:2:12",
																"nodeType": "YulBlock",
																"src": "23646:2:12",
																"statements": []
															},
															"src": "23642:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23582:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23620:5:12",
														"nodeType": "YulTypedName",
														"src": "23620:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23627:3:12",
														"nodeType": "YulTypedName",
														"src": "23627:3:12",
														"type": ""
													}
												],
												"src": "23582:186:12"
											},
											{
												"body": {
													"nativeSrc": "23853:464:12",
													"nodeType": "YulBlock",
													"src": "23853:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "23879:431:12",
																"nodeType": "YulBlock",
																"src": "23879:431:12",
																"statements": [
																	{
																		"nativeSrc": "23893:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23893:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23941:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "23941:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23909:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "23909:31:12"
																			},
																			"nativeSrc": "23909:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23909:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23897:8:12",
																				"nodeType": "YulTypedName",
																				"src": "23897:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23960:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23960:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23983:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "23983:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24011:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "24011:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23993:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "23993:17:12"
																					},
																					"nativeSrc": "23993:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "23993:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23979:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "23979:3:12"
																			},
																			"nativeSrc": "23979:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23979:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23964:11:12",
																				"nodeType": "YulTypedName",
																				"src": "23964:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24180:27:12",
																			"nodeType": "YulBlock",
																			"src": "24180:27:12",
																			"statements": [
																				{
																					"nativeSrc": "24182:23:12",
																					"nodeType": "YulAssignment",
																					"src": "24182:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24197:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "24197:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24182:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "24182:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24164:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "24164:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24176:2:12",
																					"nodeType": "YulLiteral",
																					"src": "24176:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24161:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "24161:2:12"
																			},
																			"nativeSrc": "24161:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "24161:18:12"
																		},
																		"nativeSrc": "24158:49:12",
																		"nodeType": "YulIf",
																		"src": "24158:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24249:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "24249:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24266:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "24266:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24294:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "24294:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24276:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "24276:17:12"
																							},
																							"nativeSrc": "24276:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "24276:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24262:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "24262:3:12"
																					},
																					"nativeSrc": "24262:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24262:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24220:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "24220:28:12"
																			},
																			"nativeSrc": "24220:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "24220:80:12"
																		},
																		"nativeSrc": "24220:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "24220:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23870:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23870:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23875:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23875:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23867:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23867:2:12"
																},
																"nativeSrc": "23867:11:12",
																"nodeType": "YulFunctionCall",
																"src": "23867:11:12"
															},
															"nativeSrc": "23864:446:12",
															"nodeType": "YulIf",
															"src": "23864:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23774:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23829:5:12",
														"nodeType": "YulTypedName",
														"src": "23829:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23836:3:12",
														"nodeType": "YulTypedName",
														"src": "23836:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23841:10:12",
														"nodeType": "YulTypedName",
														"src": "23841:10:12",
														"type": ""
													}
												],
												"src": "23774:543:12"
											},
											{
												"body": {
													"nativeSrc": "24386:54:12",
													"nodeType": "YulBlock",
													"src": "24386:54:12",
													"statements": [
														{
															"nativeSrc": "24396:37:12",
															"nodeType": "YulAssignment",
															"src": "24396:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24421:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24421:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24427:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24427:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24417:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24417:3:12"
																},
																"nativeSrc": "24417:16:12",
																"nodeType": "YulFunctionCall",
																"src": "24417:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24396:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "24396:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24323:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24361:4:12",
														"nodeType": "YulTypedName",
														"src": "24361:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24367:5:12",
														"nodeType": "YulTypedName",
														"src": "24367:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24377:8:12",
														"nodeType": "YulTypedName",
														"src": "24377:8:12",
														"type": ""
													}
												],
												"src": "24323:117:12"
											},
											{
												"body": {
													"nativeSrc": "24497:118:12",
													"nodeType": "YulBlock",
													"src": "24497:118:12",
													"statements": [
														{
															"nativeSrc": "24507:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "24507:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24556:1:12",
																						"nodeType": "YulLiteral",
																						"src": "24556:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24559:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "24559:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24552:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "24552:3:12"
																				},
																				"nativeSrc": "24552:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "24552:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24571:1:12",
																						"nodeType": "YulLiteral",
																						"src": "24571:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24567:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "24567:3:12"
																				},
																				"nativeSrc": "24567:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "24567:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24523:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "24523:28:12"
																		},
																		"nativeSrc": "24523:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24523:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24519:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24519:3:12"
																},
																"nativeSrc": "24519:56:12",
																"nodeType": "YulFunctionCall",
																"src": "24519:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24511:4:12",
																	"nodeType": "YulTypedName",
																	"src": "24511:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24584:25:12",
															"nodeType": "YulAssignment",
															"src": "24584:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24598:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24598:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24604:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24604:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24594:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24594:3:12"
																},
																"nativeSrc": "24594:15:12",
																"nodeType": "YulFunctionCall",
																"src": "24594:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24584:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24584:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24446:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24474:4:12",
														"nodeType": "YulTypedName",
														"src": "24474:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24480:5:12",
														"nodeType": "YulTypedName",
														"src": "24480:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24490:6:12",
														"nodeType": "YulTypedName",
														"src": "24490:6:12",
														"type": ""
													}
												],
												"src": "24446:169:12"
											},
											{
												"body": {
													"nativeSrc": "24701:214:12",
													"nodeType": "YulBlock",
													"src": "24701:214:12",
													"statements": [
														{
															"nativeSrc": "24834:37:12",
															"nodeType": "YulAssignment",
															"src": "24834:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24861:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24861:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24867:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24867:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24842:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "24842:18:12"
																},
																"nativeSrc": "24842:29:12",
																"nodeType": "YulFunctionCall",
																"src": "24842:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24834:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24834:4:12"
																}
															]
														},
														{
															"nativeSrc": "24880:29:12",
															"nodeType": "YulAssignment",
															"src": "24880:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24891:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24891:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24901:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24901:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24904:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "24904:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24897:3:12"
																		},
																		"nativeSrc": "24897:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24897:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24888:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "24888:2:12"
																},
																"nativeSrc": "24888:21:12",
																"nodeType": "YulFunctionCall",
																"src": "24888:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24880:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24880:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24620:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24682:4:12",
														"nodeType": "YulTypedName",
														"src": "24682:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24688:3:12",
														"nodeType": "YulTypedName",
														"src": "24688:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24696:4:12",
														"nodeType": "YulTypedName",
														"src": "24696:4:12",
														"type": ""
													}
												],
												"src": "24620:295:12"
											},
											{
												"body": {
													"nativeSrc": "25012:1303:12",
													"nodeType": "YulBlock",
													"src": "25012:1303:12",
													"statements": [
														{
															"nativeSrc": "25023:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "25023:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "25070:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25070:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25037:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "25037:32:12"
																},
																"nativeSrc": "25037:37:12",
																"nodeType": "YulFunctionCall",
																"src": "25037:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25027:6:12",
																	"nodeType": "YulTypedName",
																	"src": "25027:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25159:22:12",
																"nodeType": "YulBlock",
																"src": "25159:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25161:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "25161:16:12"
																			},
																			"nativeSrc": "25161:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25161:18:12"
																		},
																		"nativeSrc": "25161:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25161:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25131:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25131:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25139:18:12",
																		"nodeType": "YulLiteral",
																		"src": "25139:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25128:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "25128:2:12"
																},
																"nativeSrc": "25128:30:12",
																"nodeType": "YulFunctionCall",
																"src": "25128:30:12"
															},
															"nativeSrc": "25125:56:12",
															"nodeType": "YulIf",
															"src": "25125:56:12"
														},
														{
															"nativeSrc": "25191:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "25191:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25237:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25237:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25231:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "25231:5:12"
																		},
																		"nativeSrc": "25231:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25231:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25205:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "25205:25:12"
																},
																"nativeSrc": "25205:38:12",
																"nodeType": "YulFunctionCall",
																"src": "25205:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25195:6:12",
																	"nodeType": "YulTypedName",
																	"src": "25195:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25336:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25336:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25342:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25342:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25350:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25350:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25290:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "25290:45:12"
																},
																"nativeSrc": "25290:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25290:67:12"
															},
															"nativeSrc": "25290:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "25290:67:12"
														},
														{
															"nativeSrc": "25367:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "25367:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "25384:1:12",
																"nodeType": "YulLiteral",
																"src": "25384:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25371:9:12",
																	"nodeType": "YulTypedName",
																	"src": "25371:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25395:17:12",
															"nodeType": "YulAssignment",
															"src": "25395:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "25408:4:12",
																"nodeType": "YulLiteral",
																"src": "25408:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25395:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "25395:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25459:611:12",
																		"nodeType": "YulBlock",
																		"src": "25459:611:12",
																		"statements": [
																			{
																				"nativeSrc": "25473:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25473:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25492:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "25492:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25504:4:12",
																									"nodeType": "YulLiteral",
																									"src": "25504:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25500:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "25500:3:12"
																							},
																							"nativeSrc": "25500:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "25500:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25488:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "25488:3:12"
																					},
																					"nativeSrc": "25488:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "25488:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25477:7:12",
																						"nodeType": "YulTypedName",
																						"src": "25477:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25524:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25524:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25570:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "25570:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25538:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "25538:31:12"
																					},
																					"nativeSrc": "25538:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "25538:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25528:6:12",
																						"nodeType": "YulTypedName",
																						"src": "25528:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25588:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25588:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25597:1:12",
																					"nodeType": "YulLiteral",
																					"src": "25597:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25592:1:12",
																						"nodeType": "YulTypedName",
																						"src": "25592:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25656:163:12",
																					"nodeType": "YulBlock",
																					"src": "25656:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25681:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "25681:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25699:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "25699:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25704:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "25704:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25695:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "25695:3:12"
																												},
																												"nativeSrc": "25695:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "25695:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25689:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "25689:5:12"
																										},
																										"nativeSrc": "25689:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "25689:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25674:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "25674:6:12"
																								},
																								"nativeSrc": "25674:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25674:42:12"
																							},
																							"nativeSrc": "25674:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "25674:42:12"
																						},
																						{
																							"nativeSrc": "25733:24:12",
																							"nodeType": "YulAssignment",
																							"src": "25733:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25747:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "25747:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25755:1:12",
																										"nodeType": "YulLiteral",
																										"src": "25755:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25743:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "25743:3:12"
																								},
																								"nativeSrc": "25743:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25743:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25733:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "25733:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25774:31:12",
																							"nodeType": "YulAssignment",
																							"src": "25774:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25791:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "25791:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25802:2:12",
																										"nodeType": "YulLiteral",
																										"src": "25802:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25787:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "25787:3:12"
																								},
																								"nativeSrc": "25787:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25787:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25774:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "25774:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25622:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "25622:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25625:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "25625:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25619:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "25619:2:12"
																					},
																					"nativeSrc": "25619:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "25619:14:12"
																				},
																				"nativeSrc": "25611:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25634:21:12",
																					"nodeType": "YulBlock",
																					"src": "25634:21:12",
																					"statements": [
																						{
																							"nativeSrc": "25636:17:12",
																							"nodeType": "YulAssignment",
																							"src": "25636:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25645:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "25645:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25648:4:12",
																										"nodeType": "YulLiteral",
																										"src": "25648:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25641:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "25641:3:12"
																								},
																								"nativeSrc": "25641:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25641:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25636:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "25636:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25615:3:12",
																					"nodeType": "YulBlock",
																					"src": "25615:3:12",
																					"statements": []
																				},
																				"src": "25611:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "25855:156:12",
																					"nodeType": "YulBlock",
																					"src": "25855:156:12",
																					"statements": [
																						{
																							"nativeSrc": "25873:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25873:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25900:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "25900:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25905:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "25905:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25896:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "25896:3:12"
																										},
																										"nativeSrc": "25896:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "25896:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25890:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "25890:5:12"
																								},
																								"nativeSrc": "25890:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25890:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25877:9:12",
																									"nodeType": "YulTypedName",
																									"src": "25877:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25940:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "25940:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25967:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "25967:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25982:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "25982:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25990:4:12",
																														"nodeType": "YulLiteral",
																														"src": "25990:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25978:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "25978:3:12"
																												},
																												"nativeSrc": "25978:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "25978:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25948:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "25948:18:12"
																										},
																										"nativeSrc": "25948:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "25948:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25933:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "25933:6:12"
																								},
																								"nativeSrc": "25933:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "25933:64:12"
																							},
																							"nativeSrc": "25933:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "25933:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25838:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "25838:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25847:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "25847:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25835:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "25835:2:12"
																					},
																					"nativeSrc": "25835:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "25835:19:12"
																				},
																				"nativeSrc": "25832:179:12",
																				"nodeType": "YulIf",
																				"src": "25832:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26031:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "26031:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26045:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "26045:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26053:1:12",
																											"nodeType": "YulLiteral",
																											"src": "26053:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26041:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "26041:3:12"
																									},
																									"nativeSrc": "26041:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "26041:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26057:1:12",
																									"nodeType": "YulLiteral",
																									"src": "26057:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26037:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "26037:3:12"
																							},
																							"nativeSrc": "26037:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "26037:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26024:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "26024:6:12"
																					},
																					"nativeSrc": "26024:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "26024:36:12"
																				},
																				"nativeSrc": "26024:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "26024:36:12"
																			}
																		]
																	},
																	"nativeSrc": "25452:618:12",
																	"nodeType": "YulCase",
																	"src": "25452:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25457:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25457:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26087:222:12",
																		"nodeType": "YulBlock",
																		"src": "26087:222:12",
																		"statements": [
																			{
																				"nativeSrc": "26101:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26101:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26114:1:12",
																					"nodeType": "YulLiteral",
																					"src": "26114:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26105:5:12",
																						"nodeType": "YulTypedName",
																						"src": "26105:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26138:67:12",
																					"nodeType": "YulBlock",
																					"src": "26138:67:12",
																					"statements": [
																						{
																							"nativeSrc": "26156:35:12",
																							"nodeType": "YulAssignment",
																							"src": "26156:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26175:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "26175:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26180:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "26180:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26171:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "26171:3:12"
																										},
																										"nativeSrc": "26171:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "26171:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26165:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "26165:5:12"
																								},
																								"nativeSrc": "26165:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "26165:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26156:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "26156:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26131:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "26131:6:12"
																				},
																				"nativeSrc": "26128:77:12",
																				"nodeType": "YulIf",
																				"src": "26128:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26225:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "26225:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26284:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "26284:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26291:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "26291:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26231:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "26231:52:12"
																							},
																							"nativeSrc": "26231:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "26231:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26218:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "26218:6:12"
																					},
																					"nativeSrc": "26218:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "26218:81:12"
																				},
																				"nativeSrc": "26218:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "26218:81:12"
																			}
																		]
																	},
																	"nativeSrc": "26079:230:12",
																	"nodeType": "YulCase",
																	"src": "26079:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25432:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25432:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25440:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25440:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25429:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "25429:2:12"
																},
																"nativeSrc": "25429:14:12",
																"nodeType": "YulFunctionCall",
																"src": "25429:14:12"
															},
															"nativeSrc": "25422:887:12",
															"nodeType": "YulSwitch",
															"src": "25422:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24920:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25001:4:12",
														"nodeType": "YulTypedName",
														"src": "25001:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25007:3:12",
														"nodeType": "YulTypedName",
														"src": "25007:3:12",
														"type": ""
													}
												],
												"src": "24920:1395:12"
											},
											{
												"body": {
													"nativeSrc": "26467:277:12",
													"nodeType": "YulBlock",
													"src": "26467:277:12",
													"statements": [
														{
															"nativeSrc": "26477:26:12",
															"nodeType": "YulAssignment",
															"src": "26477:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26489:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26489:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26500:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26500:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26485:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26485:3:12"
																},
																"nativeSrc": "26485:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26485:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26477:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26477:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26524:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26524:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26535:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26535:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26520:3:12"
																		},
																		"nativeSrc": "26520:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26520:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26543:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26543:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26549:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26549:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26539:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26539:3:12"
																		},
																		"nativeSrc": "26539:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26539:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26513:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26513:6:12"
																},
																"nativeSrc": "26513:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26513:47:12"
															},
															"nativeSrc": "26513:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26513:47:12"
														},
														{
															"nativeSrc": "26569:86:12",
															"nodeType": "YulAssignment",
															"src": "26569:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26641:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26641:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26650:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26650:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26577:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "26577:63:12"
																},
																"nativeSrc": "26577:78:12",
																"nodeType": "YulFunctionCall",
																"src": "26577:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26569:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26569:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26709:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26709:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26722:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26722:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26733:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26733:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26718:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26718:3:12"
																		},
																		"nativeSrc": "26718:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26718:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26665:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26665:43:12"
																},
																"nativeSrc": "26665:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26665:72:12"
															},
															"nativeSrc": "26665:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26665:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "26321:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26431:9:12",
														"nodeType": "YulTypedName",
														"src": "26431:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26443:6:12",
														"nodeType": "YulTypedName",
														"src": "26443:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26451:6:12",
														"nodeType": "YulTypedName",
														"src": "26451:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26462:4:12",
														"nodeType": "YulTypedName",
														"src": "26462:4:12",
														"type": ""
													}
												],
												"src": "26321:423:12"
											},
											{
												"body": {
													"nativeSrc": "26813:80:12",
													"nodeType": "YulBlock",
													"src": "26813:80:12",
													"statements": [
														{
															"nativeSrc": "26823:22:12",
															"nodeType": "YulAssignment",
															"src": "26823:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "26838:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26838:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26832:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "26832:5:12"
																},
																"nativeSrc": "26832:13:12",
																"nodeType": "YulFunctionCall",
																"src": "26832:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26823:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "26823:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26881:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "26881:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "26854:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "26854:26:12"
																},
																"nativeSrc": "26854:33:12",
																"nodeType": "YulFunctionCall",
																"src": "26854:33:12"
															},
															"nativeSrc": "26854:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "26854:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "26750:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "26791:6:12",
														"nodeType": "YulTypedName",
														"src": "26791:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26799:3:12",
														"nodeType": "YulTypedName",
														"src": "26799:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "26807:5:12",
														"nodeType": "YulTypedName",
														"src": "26807:5:12",
														"type": ""
													}
												],
												"src": "26750:143:12"
											},
											{
												"body": {
													"nativeSrc": "26976:274:12",
													"nodeType": "YulBlock",
													"src": "26976:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "27022:83:12",
																"nodeType": "YulBlock",
																"src": "27022:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27024:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "27024:77:12"
																			},
																			"nativeSrc": "27024:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "27024:79:12"
																		},
																		"nativeSrc": "27024:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "27024:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26997:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "26997:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27006:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27006:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26993:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26993:3:12"
																		},
																		"nativeSrc": "26993:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26993:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27018:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27018:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26989:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26989:3:12"
																},
																"nativeSrc": "26989:32:12",
																"nodeType": "YulFunctionCall",
																"src": "26989:32:12"
															},
															"nativeSrc": "26986:119:12",
															"nodeType": "YulIf",
															"src": "26986:119:12"
														},
														{
															"nativeSrc": "27115:128:12",
															"nodeType": "YulBlock",
															"src": "27115:128:12",
															"statements": [
																{
																	"nativeSrc": "27130:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27130:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27144:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27144:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27134:6:12",
																			"nodeType": "YulTypedName",
																			"src": "27134:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27159:74:12",
																	"nodeType": "YulAssignment",
																	"src": "27159:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27205:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "27205:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27216:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "27216:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27201:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "27201:3:12"
																				},
																				"nativeSrc": "27201:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "27201:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27225:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "27225:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "27169:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "27169:31:12"
																		},
																		"nativeSrc": "27169:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27169:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "27159:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "27159:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "26899:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26946:9:12",
														"nodeType": "YulTypedName",
														"src": "26946:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26957:7:12",
														"nodeType": "YulTypedName",
														"src": "26957:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26969:6:12",
														"nodeType": "YulTypedName",
														"src": "26969:6:12",
														"type": ""
													}
												],
												"src": "26899:351:12"
											},
											{
												"body": {
													"nativeSrc": "27362:65:12",
													"nodeType": "YulBlock",
													"src": "27362:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27384:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "27384:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27392:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27392:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27380:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27380:3:12"
																		},
																		"nativeSrc": "27380:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27380:14:12"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "27396:23:12",
																		"nodeType": "YulLiteral",
																		"src": "27396:23:12",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27373:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27373:6:12"
																},
																"nativeSrc": "27373:47:12",
																"nodeType": "YulFunctionCall",
																"src": "27373:47:12"
															},
															"nativeSrc": "27373:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "27373:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "27256:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27354:6:12",
														"nodeType": "YulTypedName",
														"src": "27354:6:12",
														"type": ""
													}
												],
												"src": "27256:171:12"
											},
											{
												"body": {
													"nativeSrc": "27579:220:12",
													"nodeType": "YulBlock",
													"src": "27579:220:12",
													"statements": [
														{
															"nativeSrc": "27589:74:12",
															"nodeType": "YulAssignment",
															"src": "27589:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27655:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27655:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27660:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27660:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27596:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "27596:58:12"
																},
																"nativeSrc": "27596:67:12",
																"nodeType": "YulFunctionCall",
																"src": "27596:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27589:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27589:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27761:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27761:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "27672:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "27672:88:12"
																},
																"nativeSrc": "27672:93:12",
																"nodeType": "YulFunctionCall",
																"src": "27672:93:12"
															},
															"nativeSrc": "27672:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "27672:93:12"
														},
														{
															"nativeSrc": "27774:19:12",
															"nodeType": "YulAssignment",
															"src": "27774:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27785:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27785:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27790:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27790:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27781:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27781:3:12"
																},
																"nativeSrc": "27781:12:12",
																"nodeType": "YulFunctionCall",
																"src": "27781:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27774:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27774:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27433:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27567:3:12",
														"nodeType": "YulTypedName",
														"src": "27567:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27575:3:12",
														"nodeType": "YulTypedName",
														"src": "27575:3:12",
														"type": ""
													}
												],
												"src": "27433:366:12"
											},
											{
												"body": {
													"nativeSrc": "27976:248:12",
													"nodeType": "YulBlock",
													"src": "27976:248:12",
													"statements": [
														{
															"nativeSrc": "27986:26:12",
															"nodeType": "YulAssignment",
															"src": "27986:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27998:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27998:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28009:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28009:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27994:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27994:3:12"
																},
																"nativeSrc": "27994:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27994:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27986:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27986:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28033:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28033:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28044:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28044:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28029:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28029:3:12"
																		},
																		"nativeSrc": "28029:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28029:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28052:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "28052:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28058:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28058:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28048:3:12"
																		},
																		"nativeSrc": "28048:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28048:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28022:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28022:6:12"
																},
																"nativeSrc": "28022:47:12",
																"nodeType": "YulFunctionCall",
																"src": "28022:47:12"
															},
															"nativeSrc": "28022:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "28022:47:12"
														},
														{
															"nativeSrc": "28078:139:12",
															"nodeType": "YulAssignment",
															"src": "28078:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28212:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "28212:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28086:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "28086:124:12"
																},
																"nativeSrc": "28086:131:12",
																"nodeType": "YulFunctionCall",
																"src": "28086:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28078:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28078:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27805:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27956:9:12",
														"nodeType": "YulTypedName",
														"src": "27956:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27971:4:12",
														"nodeType": "YulTypedName",
														"src": "27971:4:12",
														"type": ""
													}
												],
												"src": "27805:419:12"
											},
											{
												"body": {
													"nativeSrc": "28336:69:12",
													"nodeType": "YulBlock",
													"src": "28336:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28358:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "28358:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28366:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28366:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28354:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28354:3:12"
																		},
																		"nativeSrc": "28354:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28354:14:12"
																	},
																	{
																		"hexValue": "4e6f2072656d61696e696e6720415049207265717565737473",
																		"kind": "string",
																		"nativeSrc": "28370:27:12",
																		"nodeType": "YulLiteral",
																		"src": "28370:27:12",
																		"type": "",
																		"value": "No remaining API requests"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28347:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28347:6:12"
																},
																"nativeSrc": "28347:51:12",
																"nodeType": "YulFunctionCall",
																"src": "28347:51:12"
															},
															"nativeSrc": "28347:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "28347:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198",
												"nativeSrc": "28230:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28328:6:12",
														"nodeType": "YulTypedName",
														"src": "28328:6:12",
														"type": ""
													}
												],
												"src": "28230:175:12"
											},
											{
												"body": {
													"nativeSrc": "28557:220:12",
													"nodeType": "YulBlock",
													"src": "28557:220:12",
													"statements": [
														{
															"nativeSrc": "28567:74:12",
															"nodeType": "YulAssignment",
															"src": "28567:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28633:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28633:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28638:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28638:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28574:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "28574:58:12"
																},
																"nativeSrc": "28574:67:12",
																"nodeType": "YulFunctionCall",
																"src": "28574:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28567:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28567:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28739:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28739:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198",
																	"nativeSrc": "28650:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "28650:88:12"
																},
																"nativeSrc": "28650:93:12",
																"nodeType": "YulFunctionCall",
																"src": "28650:93:12"
															},
															"nativeSrc": "28650:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "28650:93:12"
														},
														{
															"nativeSrc": "28752:19:12",
															"nodeType": "YulAssignment",
															"src": "28752:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28763:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28763:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28768:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28768:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28759:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28759:3:12"
																},
																"nativeSrc": "28759:12:12",
																"nodeType": "YulFunctionCall",
																"src": "28759:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28752:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28752:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28411:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28545:3:12",
														"nodeType": "YulTypedName",
														"src": "28545:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28553:3:12",
														"nodeType": "YulTypedName",
														"src": "28553:3:12",
														"type": ""
													}
												],
												"src": "28411:366:12"
											},
											{
												"body": {
													"nativeSrc": "28954:248:12",
													"nodeType": "YulBlock",
													"src": "28954:248:12",
													"statements": [
														{
															"nativeSrc": "28964:26:12",
															"nodeType": "YulAssignment",
															"src": "28964:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28976:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28976:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28987:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28987:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28972:3:12"
																},
																"nativeSrc": "28972:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28972:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28964:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28964:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29011:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29011:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29022:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29022:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29007:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29007:3:12"
																		},
																		"nativeSrc": "29007:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29007:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29030:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "29030:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29036:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29026:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29026:3:12"
																		},
																		"nativeSrc": "29026:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29026:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29000:6:12"
																},
																"nativeSrc": "29000:47:12",
																"nodeType": "YulFunctionCall",
																"src": "29000:47:12"
															},
															"nativeSrc": "29000:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "29000:47:12"
														},
														{
															"nativeSrc": "29056:139:12",
															"nodeType": "YulAssignment",
															"src": "29056:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29190:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "29190:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29064:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "29064:124:12"
																},
																"nativeSrc": "29064:131:12",
																"nodeType": "YulFunctionCall",
																"src": "29064:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29056:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28783:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28934:9:12",
														"nodeType": "YulTypedName",
														"src": "28934:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28949:4:12",
														"nodeType": "YulTypedName",
														"src": "28949:4:12",
														"type": ""
													}
												],
												"src": "28783:419:12"
											},
											{
												"body": {
													"nativeSrc": "29253:149:12",
													"nodeType": "YulBlock",
													"src": "29253:149:12",
													"statements": [
														{
															"nativeSrc": "29263:25:12",
															"nodeType": "YulAssignment",
															"src": "29263:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29286:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "29286:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29268:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "29268:17:12"
																},
																"nativeSrc": "29268:20:12",
																"nodeType": "YulFunctionCall",
																"src": "29268:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "29263:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "29263:1:12"
																}
															]
														},
														{
															"nativeSrc": "29297:25:12",
															"nodeType": "YulAssignment",
															"src": "29297:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "29320:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "29320:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29302:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "29302:17:12"
																},
																"nativeSrc": "29302:20:12",
																"nodeType": "YulFunctionCall",
																"src": "29302:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "29297:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "29297:1:12"
																}
															]
														},
														{
															"nativeSrc": "29331:17:12",
															"nodeType": "YulAssignment",
															"src": "29331:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29343:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "29343:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "29346:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "29346:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "29339:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29339:3:12"
																},
																"nativeSrc": "29339:9:12",
																"nodeType": "YulFunctionCall",
																"src": "29339:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "29331:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29331:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29373:22:12",
																"nodeType": "YulBlock",
																"src": "29373:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "29375:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "29375:16:12"
																			},
																			"nativeSrc": "29375:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "29375:18:12"
																		},
																		"nativeSrc": "29375:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "29375:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "29364:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "29364:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "29370:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "29370:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "29361:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "29361:2:12"
																},
																"nativeSrc": "29361:11:12",
																"nodeType": "YulFunctionCall",
																"src": "29361:11:12"
															},
															"nativeSrc": "29358:37:12",
															"nodeType": "YulIf",
															"src": "29358:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "29208:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "29239:1:12",
														"nodeType": "YulTypedName",
														"src": "29239:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "29242:1:12",
														"nodeType": "YulTypedName",
														"src": "29242:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "29248:4:12",
														"nodeType": "YulTypedName",
														"src": "29248:4:12",
														"type": ""
													}
												],
												"src": "29208:194:12"
											},
											{
												"body": {
													"nativeSrc": "29514:63:12",
													"nodeType": "YulBlock",
													"src": "29514:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29536:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "29536:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29544:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29544:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29532:3:12"
																		},
																		"nativeSrc": "29532:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29532:14:12"
																	},
																	{
																		"hexValue": "415049206973207374696c6c20616374697665",
																		"kind": "string",
																		"nativeSrc": "29548:21:12",
																		"nodeType": "YulLiteral",
																		"src": "29548:21:12",
																		"type": "",
																		"value": "API is still active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29525:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29525:6:12"
																},
																"nativeSrc": "29525:45:12",
																"nodeType": "YulFunctionCall",
																"src": "29525:45:12"
															},
															"nativeSrc": "29525:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "29525:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb",
												"nativeSrc": "29408:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29506:6:12",
														"nodeType": "YulTypedName",
														"src": "29506:6:12",
														"type": ""
													}
												],
												"src": "29408:169:12"
											},
											{
												"body": {
													"nativeSrc": "29729:220:12",
													"nodeType": "YulBlock",
													"src": "29729:220:12",
													"statements": [
														{
															"nativeSrc": "29739:74:12",
															"nodeType": "YulAssignment",
															"src": "29739:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29805:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29805:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29810:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29810:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29746:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "29746:58:12"
																},
																"nativeSrc": "29746:67:12",
																"nodeType": "YulFunctionCall",
																"src": "29746:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29739:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29911:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29911:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb",
																	"nativeSrc": "29822:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "29822:88:12"
																},
																"nativeSrc": "29822:93:12",
																"nodeType": "YulFunctionCall",
																"src": "29822:93:12"
															},
															"nativeSrc": "29822:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "29822:93:12"
														},
														{
															"nativeSrc": "29924:19:12",
															"nodeType": "YulAssignment",
															"src": "29924:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29935:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29935:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29940:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29940:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29931:3:12"
																},
																"nativeSrc": "29931:12:12",
																"nodeType": "YulFunctionCall",
																"src": "29931:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29924:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29924:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29583:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29717:3:12",
														"nodeType": "YulTypedName",
														"src": "29717:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29725:3:12",
														"nodeType": "YulTypedName",
														"src": "29725:3:12",
														"type": ""
													}
												],
												"src": "29583:366:12"
											},
											{
												"body": {
													"nativeSrc": "30126:248:12",
													"nodeType": "YulBlock",
													"src": "30126:248:12",
													"statements": [
														{
															"nativeSrc": "30136:26:12",
															"nodeType": "YulAssignment",
															"src": "30136:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30148:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "30148:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30159:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30159:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30144:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30144:3:12"
																},
																"nativeSrc": "30144:18:12",
																"nodeType": "YulFunctionCall",
																"src": "30144:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30136:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30136:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30183:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30183:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30194:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30194:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30179:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30179:3:12"
																		},
																		"nativeSrc": "30179:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30179:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30202:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "30202:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30208:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30208:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30198:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30198:3:12"
																		},
																		"nativeSrc": "30198:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30198:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30172:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30172:6:12"
																},
																"nativeSrc": "30172:47:12",
																"nodeType": "YulFunctionCall",
																"src": "30172:47:12"
															},
															"nativeSrc": "30172:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "30172:47:12"
														},
														{
															"nativeSrc": "30228:139:12",
															"nodeType": "YulAssignment",
															"src": "30228:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30362:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "30362:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30236:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "30236:124:12"
																},
																"nativeSrc": "30236:131:12",
																"nodeType": "YulFunctionCall",
																"src": "30236:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30228:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30228:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29955:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30106:9:12",
														"nodeType": "YulTypedName",
														"src": "30106:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30121:4:12",
														"nodeType": "YulTypedName",
														"src": "30121:4:12",
														"type": ""
													}
												],
												"src": "29955:419:12"
											},
											{
												"body": {
													"nativeSrc": "30486:65:12",
													"nodeType": "YulBlock",
													"src": "30486:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30508:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "30508:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30516:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30516:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30504:3:12"
																		},
																		"nativeSrc": "30504:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30504:14:12"
																	},
																	{
																		"hexValue": "4e6f20726571756573747320746f20726566756e64",
																		"kind": "string",
																		"nativeSrc": "30520:23:12",
																		"nodeType": "YulLiteral",
																		"src": "30520:23:12",
																		"type": "",
																		"value": "No requests to refund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30497:6:12"
																},
																"nativeSrc": "30497:47:12",
																"nodeType": "YulFunctionCall",
																"src": "30497:47:12"
															},
															"nativeSrc": "30497:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "30497:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a",
												"nativeSrc": "30380:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30478:6:12",
														"nodeType": "YulTypedName",
														"src": "30478:6:12",
														"type": ""
													}
												],
												"src": "30380:171:12"
											},
											{
												"body": {
													"nativeSrc": "30703:220:12",
													"nodeType": "YulBlock",
													"src": "30703:220:12",
													"statements": [
														{
															"nativeSrc": "30713:74:12",
															"nodeType": "YulAssignment",
															"src": "30713:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30779:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "30779:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30784:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30784:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30720:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "30720:58:12"
																},
																"nativeSrc": "30720:67:12",
																"nodeType": "YulFunctionCall",
																"src": "30720:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30713:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30713:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30885:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "30885:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a",
																	"nativeSrc": "30796:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "30796:88:12"
																},
																"nativeSrc": "30796:93:12",
																"nodeType": "YulFunctionCall",
																"src": "30796:93:12"
															},
															"nativeSrc": "30796:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "30796:93:12"
														},
														{
															"nativeSrc": "30898:19:12",
															"nodeType": "YulAssignment",
															"src": "30898:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30909:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "30909:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30914:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30914:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30905:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30905:3:12"
																},
																"nativeSrc": "30905:12:12",
																"nodeType": "YulFunctionCall",
																"src": "30905:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30898:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30898:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30557:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30691:3:12",
														"nodeType": "YulTypedName",
														"src": "30691:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30699:3:12",
														"nodeType": "YulTypedName",
														"src": "30699:3:12",
														"type": ""
													}
												],
												"src": "30557:366:12"
											},
											{
												"body": {
													"nativeSrc": "31100:248:12",
													"nodeType": "YulBlock",
													"src": "31100:248:12",
													"statements": [
														{
															"nativeSrc": "31110:26:12",
															"nodeType": "YulAssignment",
															"src": "31110:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31122:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "31122:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31133:2:12",
																		"nodeType": "YulLiteral",
																		"src": "31133:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31118:3:12"
																},
																"nativeSrc": "31118:18:12",
																"nodeType": "YulFunctionCall",
																"src": "31118:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31110:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "31110:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31157:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31157:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31168:1:12",
																				"nodeType": "YulLiteral",
																				"src": "31168:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31153:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31153:3:12"
																		},
																		"nativeSrc": "31153:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31153:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31176:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "31176:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31182:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31182:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31172:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31172:3:12"
																		},
																		"nativeSrc": "31172:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31172:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31146:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "31146:6:12"
																},
																"nativeSrc": "31146:47:12",
																"nodeType": "YulFunctionCall",
																"src": "31146:47:12"
															},
															"nativeSrc": "31146:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "31146:47:12"
														},
														{
															"nativeSrc": "31202:139:12",
															"nodeType": "YulAssignment",
															"src": "31202:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31336:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "31336:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31210:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "31210:124:12"
																},
																"nativeSrc": "31210:131:12",
																"nodeType": "YulFunctionCall",
																"src": "31210:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31202:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "31202:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30929:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31080:9:12",
														"nodeType": "YulTypedName",
														"src": "31080:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31095:4:12",
														"nodeType": "YulTypedName",
														"src": "31095:4:12",
														"type": ""
													}
												],
												"src": "30929:419:12"
											},
											{
												"body": {
													"nativeSrc": "31508:288:12",
													"nodeType": "YulBlock",
													"src": "31508:288:12",
													"statements": [
														{
															"nativeSrc": "31518:26:12",
															"nodeType": "YulAssignment",
															"src": "31518:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31530:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "31530:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31541:2:12",
																		"nodeType": "YulLiteral",
																		"src": "31541:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31526:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31526:3:12"
																},
																"nativeSrc": "31526:18:12",
																"nodeType": "YulFunctionCall",
																"src": "31526:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31518:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "31518:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31598:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "31598:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31611:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31611:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31622:1:12",
																				"nodeType": "YulLiteral",
																				"src": "31622:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31607:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31607:3:12"
																		},
																		"nativeSrc": "31607:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31607:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31554:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "31554:43:12"
																},
																"nativeSrc": "31554:71:12",
																"nodeType": "YulFunctionCall",
																"src": "31554:71:12"
															},
															"nativeSrc": "31554:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "31554:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31679:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "31679:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31692:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31692:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31703:2:12",
																				"nodeType": "YulLiteral",
																				"src": "31703:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31688:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31688:3:12"
																		},
																		"nativeSrc": "31688:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31688:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31635:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "31635:43:12"
																},
																"nativeSrc": "31635:72:12",
																"nodeType": "YulFunctionCall",
																"src": "31635:72:12"
															},
															"nativeSrc": "31635:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "31635:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31761:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "31761:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31774:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31774:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31785:2:12",
																				"nodeType": "YulLiteral",
																				"src": "31785:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31770:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31770:3:12"
																		},
																		"nativeSrc": "31770:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31770:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31717:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "31717:43:12"
																},
																"nativeSrc": "31717:72:12",
																"nodeType": "YulFunctionCall",
																"src": "31717:72:12"
															},
															"nativeSrc": "31717:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "31717:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "31354:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31464:9:12",
														"nodeType": "YulTypedName",
														"src": "31464:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31476:6:12",
														"nodeType": "YulTypedName",
														"src": "31476:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31484:6:12",
														"nodeType": "YulTypedName",
														"src": "31484:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31492:6:12",
														"nodeType": "YulTypedName",
														"src": "31492:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31503:4:12",
														"nodeType": "YulTypedName",
														"src": "31503:4:12",
														"type": ""
													}
												],
												"src": "31354:442:12"
											},
											{
												"body": {
													"nativeSrc": "31908:75:12",
													"nodeType": "YulBlock",
													"src": "31908:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31930:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "31930:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31938:1:12",
																				"nodeType": "YulLiteral",
																				"src": "31938:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31926:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31926:3:12"
																		},
																		"nativeSrc": "31926:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31926:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "31942:33:12",
																		"nodeType": "YulLiteral",
																		"src": "31942:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31919:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "31919:6:12"
																},
																"nativeSrc": "31919:57:12",
																"nodeType": "YulFunctionCall",
																"src": "31919:57:12"
															},
															"nativeSrc": "31919:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "31919:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "31802:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31900:6:12",
														"nodeType": "YulTypedName",
														"src": "31900:6:12",
														"type": ""
													}
												],
												"src": "31802:181:12"
											},
											{
												"body": {
													"nativeSrc": "32135:220:12",
													"nodeType": "YulBlock",
													"src": "32135:220:12",
													"statements": [
														{
															"nativeSrc": "32145:74:12",
															"nodeType": "YulAssignment",
															"src": "32145:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32211:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "32211:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32216:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32216:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32152:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "32152:58:12"
																},
																"nativeSrc": "32152:67:12",
																"nodeType": "YulFunctionCall",
																"src": "32152:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32145:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32145:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32317:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "32317:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "32228:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "32228:88:12"
																},
																"nativeSrc": "32228:93:12",
																"nodeType": "YulFunctionCall",
																"src": "32228:93:12"
															},
															"nativeSrc": "32228:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "32228:93:12"
														},
														{
															"nativeSrc": "32330:19:12",
															"nodeType": "YulAssignment",
															"src": "32330:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32341:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "32341:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32346:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32346:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32337:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32337:3:12"
																},
																"nativeSrc": "32337:12:12",
																"nodeType": "YulFunctionCall",
																"src": "32337:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32330:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31989:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32123:3:12",
														"nodeType": "YulTypedName",
														"src": "32123:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32131:3:12",
														"nodeType": "YulTypedName",
														"src": "32131:3:12",
														"type": ""
													}
												],
												"src": "31989:366:12"
											},
											{
												"body": {
													"nativeSrc": "32532:248:12",
													"nodeType": "YulBlock",
													"src": "32532:248:12",
													"statements": [
														{
															"nativeSrc": "32542:26:12",
															"nodeType": "YulAssignment",
															"src": "32542:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32554:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "32554:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32565:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32565:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32550:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32550:3:12"
																},
																"nativeSrc": "32550:18:12",
																"nodeType": "YulFunctionCall",
																"src": "32550:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32542:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "32542:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32589:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "32589:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32600:1:12",
																				"nodeType": "YulLiteral",
																				"src": "32600:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32585:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32585:3:12"
																		},
																		"nativeSrc": "32585:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32585:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32608:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "32608:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32614:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "32614:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32604:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32604:3:12"
																		},
																		"nativeSrc": "32604:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32604:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32578:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "32578:6:12"
																},
																"nativeSrc": "32578:47:12",
																"nodeType": "YulFunctionCall",
																"src": "32578:47:12"
															},
															"nativeSrc": "32578:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "32578:47:12"
														},
														{
															"nativeSrc": "32634:139:12",
															"nodeType": "YulAssignment",
															"src": "32634:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32768:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "32768:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32642:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "32642:124:12"
																},
																"nativeSrc": "32642:131:12",
																"nodeType": "YulFunctionCall",
																"src": "32642:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32634:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "32634:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32361:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32512:9:12",
														"nodeType": "YulTypedName",
														"src": "32512:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32527:4:12",
														"nodeType": "YulTypedName",
														"src": "32527:4:12",
														"type": ""
													}
												],
												"src": "32361:419:12"
											},
											{
												"body": {
													"nativeSrc": "32912:206:12",
													"nodeType": "YulBlock",
													"src": "32912:206:12",
													"statements": [
														{
															"nativeSrc": "32922:26:12",
															"nodeType": "YulAssignment",
															"src": "32922:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32934:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "32934:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32945:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32945:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32930:3:12"
																},
																"nativeSrc": "32930:18:12",
																"nodeType": "YulFunctionCall",
																"src": "32930:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32922:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "32922:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33002:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "33002:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33015:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33015:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33026:1:12",
																				"nodeType": "YulLiteral",
																				"src": "33026:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33011:3:12"
																		},
																		"nativeSrc": "33011:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33011:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "32958:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "32958:43:12"
																},
																"nativeSrc": "32958:71:12",
																"nodeType": "YulFunctionCall",
																"src": "32958:71:12"
															},
															"nativeSrc": "32958:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "32958:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "33083:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "33083:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33096:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33096:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33107:2:12",
																				"nodeType": "YulLiteral",
																				"src": "33107:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33092:3:12"
																		},
																		"nativeSrc": "33092:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33092:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33039:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "33039:43:12"
																},
																"nativeSrc": "33039:72:12",
																"nodeType": "YulFunctionCall",
																"src": "33039:72:12"
															},
															"nativeSrc": "33039:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "33039:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "32786:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32876:9:12",
														"nodeType": "YulTypedName",
														"src": "32876:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "32888:6:12",
														"nodeType": "YulTypedName",
														"src": "32888:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32896:6:12",
														"nodeType": "YulTypedName",
														"src": "32896:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32907:4:12",
														"nodeType": "YulTypedName",
														"src": "32907:4:12",
														"type": ""
													}
												],
												"src": "32786:332:12"
											},
											{
												"body": {
													"nativeSrc": "33250:206:12",
													"nodeType": "YulBlock",
													"src": "33250:206:12",
													"statements": [
														{
															"nativeSrc": "33260:26:12",
															"nodeType": "YulAssignment",
															"src": "33260:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33272:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "33272:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33283:2:12",
																		"nodeType": "YulLiteral",
																		"src": "33283:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "33268:3:12"
																},
																"nativeSrc": "33268:18:12",
																"nodeType": "YulFunctionCall",
																"src": "33268:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33260:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "33260:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33340:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "33340:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33353:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33353:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33364:1:12",
																				"nodeType": "YulLiteral",
																				"src": "33364:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33349:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33349:3:12"
																		},
																		"nativeSrc": "33349:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33349:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "33296:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "33296:43:12"
																},
																"nativeSrc": "33296:71:12",
																"nodeType": "YulFunctionCall",
																"src": "33296:71:12"
															},
															"nativeSrc": "33296:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "33296:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "33421:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "33421:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33434:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33434:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33445:2:12",
																				"nodeType": "YulLiteral",
																				"src": "33445:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33430:3:12"
																		},
																		"nativeSrc": "33430:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33430:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "33377:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "33377:43:12"
																},
																"nativeSrc": "33377:72:12",
																"nodeType": "YulFunctionCall",
																"src": "33377:72:12"
															},
															"nativeSrc": "33377:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "33377:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "33124:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33214:9:12",
														"nodeType": "YulTypedName",
														"src": "33214:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "33226:6:12",
														"nodeType": "YulTypedName",
														"src": "33226:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33234:6:12",
														"nodeType": "YulTypedName",
														"src": "33234:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33245:4:12",
														"nodeType": "YulTypedName",
														"src": "33245:4:12",
														"type": ""
													}
												],
												"src": "33124:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$611_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$611_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"API does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number of requests must be great\")\n\n        mstore(add(memPtr, 32), \"er than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"API is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Overflow detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633(memPtr) {\n\n        mstore(add(memPtr, 0), \"API name cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price per request must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198(memPtr) {\n\n        mstore(add(memPtr, 0), \"No remaining API requests\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"API is still active\")\n\n    }\n\n    function abi_encode_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No requests to refund\")\n\n    }\n\n    function abi_encode_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1104": [
									{
										"length": 32,
										"start": 2461
									},
									{
										"length": 32,
										"start": 3545
									},
									{
										"length": 32,
										"start": 3880
									},
									{
										"length": 32,
										"start": 4138
									},
									{
										"length": 32,
										"start": 5589
									},
									{
										"length": 32,
										"start": 5777
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xAF6E5689 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xBC39C0EF EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x428 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x838C0557 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8D1D44A9 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x8E04D8D8 EQ PUSH2 0x353 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x24CCE39F GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x24CCE39F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x400BB18D EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x6D177A00 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x2B9 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x99952C8 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xCD2C460 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH2 0xED2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x141F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x430 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4B8 JUMPI POP PUSH2 0x4B7 DUP3 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x571 PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DA PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x166D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x33446694866E808B8C5250F584345F59832E7A6F29E30BF7A8EAD78441940D9E DUP3 PUSH1 0x40 MLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x720 DUP2 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x1730 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x738 PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A6 DUP3 DUP3 PUSH2 0x1820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP4 DUP3 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E2 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B DUP6 PUSH1 0x40 MLOAD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xAC1 PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF7 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2A PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x70E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP1 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC52 SWAP1 PUSH2 0x262A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2862 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH32 0x708B6915AAD37CD1D491E64BF7A3B53C298499411A09F4B2315E30DA638B5DE2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD09 SWAP3 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xDCF SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP PUSH2 0xE1E CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 TIMESTAMP PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEC4 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xEDE PUSH0 DUP1 SHL CALLER PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF14 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF25 PUSH2 0x198C JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x106E PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x10E6 PUSH2 0x1A58 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AC SWAP1 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x2A6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7598AFFE5BB8B864E84F0B819F6B046054C8F0D6771E8AE086411B5DD2A8BC12 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x269E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x269E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BB SWAP1 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154F SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x23FB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1619 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x93C496F36ECAB5F5583F216646CAC3ACB12A63AEACDDB1A9251CEB81F0EE36E7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1676 DUP3 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x167F DUP2 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x1689 DUP4 DUP4 PUSH2 0x1820 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172D DUP2 PUSH2 0x1728 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x173B DUP4 DUP4 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x180F JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17AC PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1813 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x182B DUP4 DUP4 PUSH2 0x12F7 JUMP JUMPDEST ISZERO PUSH2 0x1900 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x189D PUSH2 0x1819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1904 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1986 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x193F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AB2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C7 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A53 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A0C SWAP3 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1AB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A6B DUP3 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x1AAE JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AD1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1AEA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B05 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B47 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3E SWAP2 SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1B5E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAD DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF2 DUP2 PUSH2 0x1BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C23 DUP2 PUSH2 0x1C11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B DUP3 PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH2 0x1C61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C96 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA5 DUP2 PUSH2 0x1C11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC0 DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CDC JUMPI PUSH2 0x1CDB PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CFA DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D19 JUMPI PUSH2 0x1D18 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D26 DUP5 DUP3 DUP6 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D41 DUP2 PUSH2 0x1D2F JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D5C DUP2 PUSH2 0x1D38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D84 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D96 DUP2 PUSH2 0x1D2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAF PUSH0 DUP4 ADD DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD9 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E02 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1DCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E33 JUMPI PUSH2 0x1E32 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E51 DUP6 DUP3 DUP7 ADD PUSH2 0x1C88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1EE7 DUP3 PUSH2 0x1EA1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F18 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH2 0x1F24 DUP3 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F43 JUMPI PUSH2 0x1F42 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST PUSH2 0x1F4C DUP3 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH2 0x1F74 DUP5 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1F0F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x1E9D JUMP JUMPDEST JUMPDEST PUSH2 0x1FA0 DUP5 DUP3 DUP6 PUSH2 0x1F59 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FCC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1B5A JUMP JUMPDEST JUMPDEST PUSH2 0x2014 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2025 DUP6 DUP3 DUP7 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2038 DUP2 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2051 PUSH0 DUP4 ADD DUP5 PUSH2 0x202F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2079 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B4 DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x20BE DUP2 DUP6 PUSH2 0x208C JUMP JUMPDEST SWAP4 POP PUSH2 0x20CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x209C JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FA DUP2 DUP8 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2109 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x2116 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BE9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x214F PUSH2 0x214A PUSH2 0x2145 DUP5 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2160 DUP3 PUSH2 0x2135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 DUP3 PUSH2 0x2156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2181 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x219A PUSH0 DUP4 ADD DUP5 PUSH2 0x2178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41504920646F6573206E6F742065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D4 PUSH1 0x12 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x21DF DUP3 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2201 DUP2 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223C PUSH1 0x17 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2247 DUP3 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 PUSH2 0x2230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A4 PUSH1 0x16 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x22AF DUP3 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22D1 DUP2 PUSH2 0x2298 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F66207265717565737473206D757374206265206772656174 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572207468616E207A65726F0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2332 PUSH1 0x2C DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x233D DUP3 PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x2326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x239A PUSH1 0x11 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x23A5 DUP3 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C7 DUP2 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2405 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2410 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x241E DUP2 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2435 JUMPI PUSH2 0x2434 PUSH2 0x23CE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2473 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x247E DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x248E JUMPI PUSH2 0x248D PUSH2 0x243C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F766572666C6F77206465746563746564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24CD PUSH1 0x11 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x24D8 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24FA DUP2 PUSH2 0x24C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250B DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2516 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x252E JUMPI PUSH2 0x252D PUSH2 0x23CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x415049206E616D652063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2568 PUSH1 0x18 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2573 DUP3 PUSH2 0x2534 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2595 DUP2 PUSH2 0x255C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365207065722072657175657374206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 PUSH1 0x2B DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2601 DUP3 PUSH2 0x259C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2623 DUP2 PUSH2 0x25EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2634 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2666 JUMPI PUSH2 0x2665 PUSH2 0x23CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26C8 JUMPI PUSH2 0x26C7 PUSH2 0x2671 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x272A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2734 DUP7 DUP4 PUSH2 0x26EF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2766 PUSH2 0x2761 PUSH2 0x275C DUP5 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1C11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277F DUP4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x278B DUP3 PUSH2 0x276D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27A7 PUSH2 0x279B JUMP JUMPDEST PUSH2 0x27B2 DUP2 DUP5 DUP5 PUSH2 0x2776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27CA PUSH0 DUP3 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x281A JUMPI PUSH2 0x27EB DUP2 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0x27F4 DUP5 PUSH2 0x26E0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2803 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2817 PUSH2 0x280F DUP6 PUSH2 0x26E0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x283A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x281F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2852 DUP4 DUP4 PUSH2 0x282B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x286B DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2884 JUMPI PUSH2 0x2883 PUSH2 0x1EB1 JUMP JUMPDEST JUMPDEST PUSH2 0x288E DUP3 SLOAD PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2899 DUP3 DUP3 DUP6 PUSH2 0x27D9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28CA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28C2 DUP6 DUP3 PUSH2 0x2847 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D8 DUP7 PUSH2 0x26CE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28FF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28DA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x291C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2918 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x282B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2949 DUP2 DUP6 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2958 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x1C9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x1B56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29D2 PUSH1 0x15 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x29DD DUP3 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FF DUP2 PUSH2 0x29C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E672041504920726571756573747300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A3A PUSH1 0x19 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A45 DUP3 PUSH2 0x2A06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A67 DUP2 PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A78 DUP3 PUSH2 0x1C11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A83 DUP4 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A9B JUMPI PUSH2 0x2A9A PUSH2 0x23CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x415049206973207374696C6C2061637469766500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD5 PUSH1 0x13 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE0 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B02 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20726571756573747320746F20726566756E640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B3D PUSH1 0x15 DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B48 DUP3 PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6A DUP2 PUSH2 0x2B31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B84 PUSH0 DUP4 ADD DUP7 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2B9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDA PUSH1 0x1F DUP4 PUSH2 0x208C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE5 DUP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C07 DUP2 PUSH2 0x2BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C21 PUSH0 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2C2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C48 PUSH0 DUP4 ADD DUP6 PUSH2 0x202F JUMP JUMPDEST PUSH2 0x2C55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x1F DUP2 SWAP15 0x2E SWAP3 MULMOD XOR 0xC CODECOPY 0xD2 0xAB 0xEC SELFDESTRUCT EXTCODEHASH 0xEE 0xE7 0xBA PUSH26 0x3989A7254CBCE4091C45ED843A64736F6C634300081A00330000 ",
							"sourceMap": "437:5937:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:27:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6128:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2309:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2971:241:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5895:225:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3220:728;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2200:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;612:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2422:541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3956:544;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4992:275;;;:::i;:::-;;585:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4508:476;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1007:41:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5275:612;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;549:29:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;973:27:11:-;;;;:::o;6128:243::-;6213:4;6247:12;;6238:6;:21;6230:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6319:10;:17;6330:5;6319:17;;;;;;;;;;;;;;;:36;;:44;6356:6;6319:44;;;;;;;;;;;;6300:15;:63;;6293:70;;6128:243;;;;:::o;2309:105::-;1979:39;2232:4:0;1987:18:11;;2007:10;1979:7;:39::i;:::-;1971:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2376:30:::1;649:23;2399:6;2376:10;:30::i;:::-;2309:105:::0;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;2971:241:11:-;2114:31;649:23;2134:10;2114:7;:31::i;:::-;2106:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3072:12:::1;;3063:6;:21;3055:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3142:9;3118:4;:12;3123:6;3118:12;;;;;;;;;;;:21;;;:33;;;;;;;;;;;;;;;;;;3186:6;3169:35;3194:9;3169:35;;;;;;:::i;:::-;;;;;;;;2971:241:::0;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;5895:225:11:-;5979:7;6016:12;;6007:6;:21;5999:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6069:10;:17;6080:5;6069:17;;;;;;;;;;;;;;;:35;;:43;6105:6;6069:43;;;;;;;;;;;;6062:50;;5895:225;;;;:::o;3220:728::-;3319:12;;3310:6;:21;3302:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3385:1;3373:9;:13;3365:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3448:21;3472:4;:12;3477:6;3472:12;;;;;;;;;;;3448:36;;3503:3;:12;;;;;;;;;;;;3495:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3550:17;3592:9;3570:3;:19;;;:31;;;;:::i;:::-;3550:51;;3645:3;:19;;;3632:9;3620;:21;;;;:::i;:::-;:44;3612:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3699:60;3722:10;3742:4;3749:9;3699:5;:22;;;;:60;;;;;;:::i;:::-;3822:9;3770:10;:22;3781:10;3770:22;;;;;;;;;;;;;;;:40;;:48;3811:6;3770:48;;;;;;;;;;;;:61;;;;;;;:::i;:::-;;;;;;;;3864:9;3842:3;:18;;;:31;;;;;;;:::i;:::-;;;;;;;;3922:6;3910:10;3891:49;;;3930:9;3891:49;;;;;;:::i;:::-;;;;;;;;3291:657;;3220:728;;:::o;2200:101::-;1979:39;2232:4:0;1987:18:11;;2007:10;1979:7;:39::i;:::-;1971:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:29:::1;649:23;2286:6;2264:9;:29::i;:::-;2200:101:::0;:::o;612:60::-;649:23;612:60;:::o;2422:541::-;2114:31;649:23;2134:10;2114:7;:31::i;:::-;2106:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2550:1:::1;2534:5;2528:19;:23;2520:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2618:1;2599:16;:20;2591:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2680:13;2696:12;;:14;;;;;;;;;:::i;:::-;;;;;2680:30;;2735:157;;;;;;;;2766:5;2735:157;;;;2803:16;2735:157;;;;2850:1;2735:157;;;;2876:4;2735:157;;;;::::0;2721:4:::1;:11;2726:5;2721:11;;;;;;;;;;;:171;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:5;2910:45;2931:5;2938:16;2910:45;;;;;;;:::i;:::-;;;;;;;;2509:454;2422:541:::0;;:::o;3956:544::-;4058:12;;4049:6;:21;4041:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4106:21;4130:4;:12;4135:6;4130:12;;;;;;;;;;;4106:36;;4161:3;:12;;;;;;;;;;;;4153:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4208:17;4250:9;4228:3;:19;;;:31;;;;:::i;:::-;4208:51;;4270:60;4293:10;4313:4;4320:9;4270:5;:22;;;;:60;;;;;;:::i;:::-;4413:9;4395:15;:27;;;;:::i;:::-;4343:10;:22;4354:10;4343:22;;;;;;;;;;;;;;;:41;;:49;4385:6;4343:49;;;;;;;;;;;:79;;;;4474:6;4462:10;4440:52;;;4482:9;4440:52;;;;;;:::i;:::-;;;;;;;;4030:470;;3956:544;;:::o;4992:275::-;1979:39;2232:4:0;1987:18:11;;2007:10;1979:7;:39::i;:::-;1971:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:5::1;:19;:21::i;:::-;5061:15:11::2;5079:5;:15;;;5103:4;5079:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5061:48;;5138:1;5128:7;:11;5120:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5178:34;5197:5;;;;;;;;;;;5204:7;5178:5;:18;;;;:34;;;;;:::i;:::-;5244:5;;;;;;;;;;;5228:31;;;5251:7;5228:31;;;;;;:::i;:::-;;;;;;;;5050:217;2303:20:5::1;:18;:20::i;:::-;4992:275:11:o:0;585:20::-;;;;;;;;;;;;;:::o;4508:476::-;4583:12;;4574:6;:21;4566:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4631:21;4655:4;:12;4660:6;4655:12;;;;;;;;;;;4631:36;;4686:3;:12;;;;;;;;;;;;4678:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4733:17;4753:10;:22;4764:10;4753:22;;;;;;;;;;;;;;;:40;;:48;4794:6;4753:48;;;;;;;;;;;;4733:68;;4832:1;4820:9;:13;4812:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4928:1;4876:10;:22;4887:10;4876:22;;;;;;;;;;;;;;;:40;;:48;4917:6;4876:48;;;;;;;;;;;;:53;;;;;;;:::i;:::-;;;;;;;;4969:6;4957:10;4945:31;;;;;;;;;;;;4555:429;;4508:476;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1007:41:11:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5275:612::-;5358:12;;5349:6;:21;5341:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5413:4;:12;5418:6;5413:12;;;;;;;;;;;:21;;;;;;;;;;;;5412:22;5404:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5471:25;5499:10;:22;5510:10;5499:22;;;;;;;;;;;;;;;:40;;:48;5540:6;5499:48;;;;;;;;;;;;5471:76;;5586:1;5566:17;:21;5558:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5626:20;5669:4;:12;5674:6;5669:12;;;;;;;;;;;:28;;;5649:17;:48;;;;:::i;:::-;5626:71;;5759:1;5708:10;:22;5719:10;5708:22;;;;;;;;;;;;;;;:40;;:48;5749:6;5708:48;;;;;;;;;;;:52;;;;5773:44;5792:10;5804:12;5773:5;:18;;;;:44;;;;;:::i;:::-;5858:6;5846:10;5833:46;;;5866:12;5833:46;;;;;;:::i;:::-;;;;;;;;5330:557;;5275:612;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;549:29:11:-;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7686:720:7:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:126::-;1990:7;2030:42;2023:5;2019:54;2008:65;;1953:126;;;:::o;2085:96::-;2122:7;2151:24;2169:5;2151:24;:::i;:::-;2140:35;;2085:96;;;:::o;2187:122::-;2260:24;2278:5;2260:24;:::i;:::-;2253:5;2250:35;2240:63;;2299:1;2296;2289:12;2240:63;2187:122;:::o;2315:139::-;2361:5;2399:6;2386:20;2377:29;;2415:33;2442:5;2415:33;:::i;:::-;2315:139;;;;:::o;2460:122::-;2533:24;2551:5;2533:24;:::i;:::-;2526:5;2523:35;2513:63;;2572:1;2569;2562:12;2513:63;2460:122;:::o;2588:139::-;2634:5;2672:6;2659:20;2650:29;;2688:33;2715:5;2688:33;:::i;:::-;2588:139;;;;:::o;2733:474::-;2801:6;2809;2858:2;2846:9;2837:7;2833:23;2829:32;2826:119;;;2864:79;;:::i;:::-;2826:119;2984:1;3009:53;3054:7;3045:6;3034:9;3030:22;3009:53;:::i;:::-;2999:63;;2955:117;3111:2;3137:53;3182:7;3173:6;3162:9;3158:22;3137:53;:::i;:::-;3127:63;;3082:118;2733:474;;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:122::-;3704:24;3722:5;3704:24;:::i;:::-;3697:5;3694:35;3684:63;;3743:1;3740;3733:12;3684:63;3631:122;:::o;3759:139::-;3805:5;3843:6;3830:20;3821:29;;3859:33;3886:5;3859:33;:::i;:::-;3759:139;;;;:::o;3904:329::-;3963:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:119;;;4018:79;;:::i;:::-;3980:119;4138:1;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4109:117;3904:329;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:116::-;4661:21;4676:5;4661:21;:::i;:::-;4654:5;4651:32;4641:60;;4697:1;4694;4687:12;4641:60;4591:116;:::o;4713:133::-;4756:5;4794:6;4781:20;4772:29;;4810:30;4834:5;4810:30;:::i;:::-;4713:133;;;;:::o;4852:468::-;4917:6;4925;4974:2;4962:9;4953:7;4949:23;4945:32;4942:119;;;4980:79;;:::i;:::-;4942:119;5100:1;5125:53;5170:7;5161:6;5150:9;5146:22;5125:53;:::i;:::-;5115:63;;5071:117;5227:2;5253:50;5295:7;5286:6;5275:9;5271:22;5253:50;:::i;:::-;5243:60;;5198:115;4852:468;;;;;:::o;5326:474::-;5394:6;5402;5451:2;5439:9;5430:7;5426:23;5422:32;5419:119;;;5457:79;;:::i;:::-;5419:119;5577:1;5602:53;5647:7;5638:6;5627:9;5623:22;5602:53;:::i;:::-;5592:63;;5548:117;5704:2;5730:53;5775:7;5766:6;5755:9;5751:22;5730:53;:::i;:::-;5720:63;;5675:118;5326:474;;;;;:::o;5806:::-;5874:6;5882;5931:2;5919:9;5910:7;5906:23;5902:32;5899:119;;;5937:79;;:::i;:::-;5899:119;6057:1;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;:::i;:::-;6072:63;;6028:117;6184:2;6210:53;6255:7;6246:6;6235:9;6231:22;6210:53;:::i;:::-;6200:63;;6155:118;5806:474;;;;;:::o;6286:117::-;6395:1;6392;6385:12;6409:117;6518:1;6515;6508:12;6532:102;6573:6;6624:2;6620:7;6615:2;6608:5;6604:14;6600:28;6590:38;;6532:102;;;:::o;6640:180::-;6688:77;6685:1;6678:88;6785:4;6782:1;6775:15;6809:4;6806:1;6799:15;6826:281;6909:27;6931:4;6909:27;:::i;:::-;6901:6;6897:40;7039:6;7027:10;7024:22;7003:18;6991:10;6988:34;6985:62;6982:88;;;7050:18;;:::i;:::-;6982:88;7090:10;7086:2;7079:22;6869:238;6826:281;;:::o;7113:129::-;7147:6;7174:20;;:::i;:::-;7164:30;;7203:33;7231:4;7223:6;7203:33;:::i;:::-;7113:129;;;:::o;7248:308::-;7310:4;7400:18;7392:6;7389:30;7386:56;;;7422:18;;:::i;:::-;7386:56;7460:29;7482:6;7460:29;:::i;:::-;7452:37;;7544:4;7538;7534:15;7526:23;;7248:308;;;:::o;7562:148::-;7660:6;7655:3;7650;7637:30;7701:1;7692:6;7687:3;7683:16;7676:27;7562:148;;;:::o;7716:425::-;7794:5;7819:66;7835:49;7877:6;7835:49;:::i;:::-;7819:66;:::i;:::-;7810:75;;7908:6;7901:5;7894:21;7946:4;7939:5;7935:16;7984:3;7975:6;7970:3;7966:16;7963:25;7960:112;;;7991:79;;:::i;:::-;7960:112;8081:54;8128:6;8123:3;8118;8081:54;:::i;:::-;7800:341;7716:425;;;;;:::o;8161:340::-;8217:5;8266:3;8259:4;8251:6;8247:17;8243:27;8233:122;;8274:79;;:::i;:::-;8233:122;8391:6;8378:20;8416:79;8491:3;8483:6;8476:4;8468:6;8464:17;8416:79;:::i;:::-;8407:88;;8223:278;8161:340;;;;:::o;8507:654::-;8585:6;8593;8642:2;8630:9;8621:7;8617:23;8613:32;8610:119;;;8648:79;;:::i;:::-;8610:119;8796:1;8785:9;8781:17;8768:31;8826:18;8818:6;8815:30;8812:117;;;8848:79;;:::i;:::-;8812:117;8953:63;9008:7;8999:6;8988:9;8984:22;8953:63;:::i;:::-;8943:73;;8739:287;9065:2;9091:53;9136:7;9127:6;9116:9;9112:22;9091:53;:::i;:::-;9081:63;;9036:118;8507:654;;;;;:::o;9167:118::-;9254:24;9272:5;9254:24;:::i;:::-;9249:3;9242:37;9167:118;;:::o;9291:222::-;9384:4;9422:2;9411:9;9407:18;9399:26;;9435:71;9503:1;9492:9;9488:17;9479:6;9435:71;:::i;:::-;9291:222;;;;:::o;9519:329::-;9578:6;9627:2;9615:9;9606:7;9602:23;9598:32;9595:119;;;9633:79;;:::i;:::-;9595:119;9753:1;9778:53;9823:7;9814:6;9803:9;9799:22;9778:53;:::i;:::-;9768:63;;9724:117;9519:329;;;;:::o;9854:99::-;9906:6;9940:5;9934:12;9924:22;;9854:99;;;:::o;9959:169::-;10043:11;10077:6;10072:3;10065:19;10117:4;10112:3;10108:14;10093:29;;9959:169;;;;:::o;10134:139::-;10223:6;10218:3;10213;10207:23;10264:1;10255:6;10250:3;10246:16;10239:27;10134:139;;;:::o;10279:377::-;10367:3;10395:39;10428:5;10395:39;:::i;:::-;10450:71;10514:6;10509:3;10450:71;:::i;:::-;10443:78;;10530:65;10588:6;10583:3;10576:4;10569:5;10565:16;10530:65;:::i;:::-;10620:29;10642:6;10620:29;:::i;:::-;10615:3;10611:39;10604:46;;10371:285;10279:377;;;;:::o;10662:632::-;10853:4;10891:3;10880:9;10876:19;10868:27;;10941:9;10935:4;10931:20;10927:1;10916:9;10912:17;10905:47;10969:78;11042:4;11033:6;10969:78;:::i;:::-;10961:86;;11057:72;11125:2;11114:9;11110:18;11101:6;11057:72;:::i;:::-;11139;11207:2;11196:9;11192:18;11183:6;11139:72;:::i;:::-;11221:66;11283:2;11272:9;11268:18;11259:6;11221:66;:::i;:::-;10662:632;;;;;;;:::o;11300:60::-;11328:3;11349:5;11342:12;;11300:60;;;:::o;11366:142::-;11416:9;11449:53;11467:34;11476:24;11494:5;11476:24;:::i;:::-;11467:34;:::i;:::-;11449:53;:::i;:::-;11436:66;;11366:142;;;:::o;11514:126::-;11564:9;11597:37;11628:5;11597:37;:::i;:::-;11584:50;;11514:126;;;:::o;11646:140::-;11710:9;11743:37;11774:5;11743:37;:::i;:::-;11730:50;;11646:140;;;:::o;11792:159::-;11893:51;11938:5;11893:51;:::i;:::-;11888:3;11881:64;11792:159;;:::o;11957:250::-;12064:4;12102:2;12091:9;12087:18;12079:26;;12115:85;12197:1;12186:9;12182:17;12173:6;12115:85;:::i;:::-;11957:250;;;;:::o;12213:168::-;12353:20;12349:1;12341:6;12337:14;12330:44;12213:168;:::o;12387:366::-;12529:3;12550:67;12614:2;12609:3;12550:67;:::i;:::-;12543:74;;12626:93;12715:3;12626:93;:::i;:::-;12744:2;12739:3;12735:12;12728:19;;12387:366;;;:::o;12759:419::-;12925:4;12963:2;12952:9;12948:18;12940:26;;13012:9;13006:4;13002:20;12998:1;12987:9;12983:17;12976:47;13040:131;13166:4;13040:131;:::i;:::-;13032:139;;12759:419;;;:::o;13184:173::-;13324:25;13320:1;13312:6;13308:14;13301:49;13184:173;:::o;13363:366::-;13505:3;13526:67;13590:2;13585:3;13526:67;:::i;:::-;13519:74;;13602:93;13691:3;13602:93;:::i;:::-;13720:2;13715:3;13711:12;13704:19;;13363:366;;;:::o;13735:419::-;13901:4;13939:2;13928:9;13924:18;13916:26;;13988:9;13982:4;13978:20;13974:1;13963:9;13959:17;13952:47;14016:131;14142:4;14016:131;:::i;:::-;14008:139;;13735:419;;;:::o;14160:172::-;14300:24;14296:1;14288:6;14284:14;14277:48;14160:172;:::o;14338:366::-;14480:3;14501:67;14565:2;14560:3;14501:67;:::i;:::-;14494:74;;14577:93;14666:3;14577:93;:::i;:::-;14695:2;14690:3;14686:12;14679:19;;14338:366;;;:::o;14710:419::-;14876:4;14914:2;14903:9;14899:18;14891:26;;14963:9;14957:4;14953:20;14949:1;14938:9;14934:17;14927:47;14991:131;15117:4;14991:131;:::i;:::-;14983:139;;14710:419;;;:::o;15135:231::-;15275:34;15271:1;15263:6;15259:14;15252:58;15344:14;15339:2;15331:6;15327:15;15320:39;15135:231;:::o;15372:366::-;15514:3;15535:67;15599:2;15594:3;15535:67;:::i;:::-;15528:74;;15611:93;15700:3;15611:93;:::i;:::-;15729:2;15724:3;15720:12;15713:19;;15372:366;;;:::o;15744:419::-;15910:4;15948:2;15937:9;15933:18;15925:26;;15997:9;15991:4;15987:20;15983:1;15972:9;15968:17;15961:47;16025:131;16151:4;16025:131;:::i;:::-;16017:139;;15744:419;;;:::o;16169:167::-;16309:19;16305:1;16297:6;16293:14;16286:43;16169:167;:::o;16342:366::-;16484:3;16505:67;16569:2;16564:3;16505:67;:::i;:::-;16498:74;;16581:93;16670:3;16581:93;:::i;:::-;16699:2;16694:3;16690:12;16683:19;;16342:366;;;:::o;16714:419::-;16880:4;16918:2;16907:9;16903:18;16895:26;;16967:9;16961:4;16957:20;16953:1;16942:9;16938:17;16931:47;16995:131;17121:4;16995:131;:::i;:::-;16987:139;;16714:419;;;:::o;17139:180::-;17187:77;17184:1;17177:88;17284:4;17281:1;17274:15;17308:4;17305:1;17298:15;17325:410;17365:7;17388:20;17406:1;17388:20;:::i;:::-;17383:25;;17422:20;17440:1;17422:20;:::i;:::-;17417:25;;17477:1;17474;17470:9;17499:30;17517:11;17499:30;:::i;:::-;17488:41;;17678:1;17669:7;17665:15;17662:1;17659:22;17639:1;17632:9;17612:83;17589:139;;17708:18;;:::i;:::-;17589:139;17373:362;17325:410;;;;:::o;17741:180::-;17789:77;17786:1;17779:88;17886:4;17883:1;17876:15;17910:4;17907:1;17900:15;17927:185;17967:1;17984:20;18002:1;17984:20;:::i;:::-;17979:25;;18018:20;18036:1;18018:20;:::i;:::-;18013:25;;18057:1;18047:35;;18062:18;;:::i;:::-;18047:35;18104:1;18101;18097:9;18092:14;;17927:185;;;;:::o;18118:167::-;18258:19;18254:1;18246:6;18242:14;18235:43;18118:167;:::o;18291:366::-;18433:3;18454:67;18518:2;18513:3;18454:67;:::i;:::-;18447:74;;18530:93;18619:3;18530:93;:::i;:::-;18648:2;18643:3;18639:12;18632:19;;18291:366;;;:::o;18663:419::-;18829:4;18867:2;18856:9;18852:18;18844:26;;18916:9;18910:4;18906:20;18902:1;18891:9;18887:17;18880:47;18944:131;19070:4;18944:131;:::i;:::-;18936:139;;18663:419;;;:::o;19088:191::-;19128:3;19147:20;19165:1;19147:20;:::i;:::-;19142:25;;19181:20;19199:1;19181:20;:::i;:::-;19176:25;;19224:1;19221;19217:9;19210:16;;19245:3;19242:1;19239:10;19236:36;;;19252:18;;:::i;:::-;19236:36;19088:191;;;;:::o;19285:174::-;19425:26;19421:1;19413:6;19409:14;19402:50;19285:174;:::o;19465:366::-;19607:3;19628:67;19692:2;19687:3;19628:67;:::i;:::-;19621:74;;19704:93;19793:3;19704:93;:::i;:::-;19822:2;19817:3;19813:12;19806:19;;19465:366;;;:::o;19837:419::-;20003:4;20041:2;20030:9;20026:18;20018:26;;20090:9;20084:4;20080:20;20076:1;20065:9;20061:17;20054:47;20118:131;20244:4;20118:131;:::i;:::-;20110:139;;19837:419;;;:::o;20262:230::-;20402:34;20398:1;20390:6;20386:14;20379:58;20471:13;20466:2;20458:6;20454:15;20447:38;20262:230;:::o;20498:366::-;20640:3;20661:67;20725:2;20720:3;20661:67;:::i;:::-;20654:74;;20737:93;20826:3;20737:93;:::i;:::-;20855:2;20850:3;20846:12;20839:19;;20498:366;;;:::o;20870:419::-;21036:4;21074:2;21063:9;21059:18;21051:26;;21123:9;21117:4;21113:20;21109:1;21098:9;21094:17;21087:47;21151:131;21277:4;21151:131;:::i;:::-;21143:139;;20870:419;;;:::o;21295:233::-;21334:3;21357:24;21375:5;21357:24;:::i;:::-;21348:33;;21403:66;21396:5;21393:77;21390:103;;21473:18;;:::i;:::-;21390:103;21520:1;21513:5;21509:13;21502:20;;21295:233;;;:::o;21534:180::-;21582:77;21579:1;21572:88;21679:4;21676:1;21669:15;21703:4;21700:1;21693:15;21720:320;21764:6;21801:1;21795:4;21791:12;21781:22;;21848:1;21842:4;21838:12;21869:18;21859:81;;21925:4;21917:6;21913:17;21903:27;;21859:81;21987:2;21979:6;21976:14;21956:18;21953:38;21950:84;;22006:18;;:::i;:::-;21950:84;21771:269;21720:320;;;:::o;22046:141::-;22095:4;22118:3;22110:11;;22141:3;22138:1;22131:14;22175:4;22172:1;22162:18;22154:26;;22046:141;;;:::o;22193:93::-;22230:6;22277:2;22272;22265:5;22261:14;22257:23;22247:33;;22193:93;;;:::o;22292:107::-;22336:8;22386:5;22380:4;22376:16;22355:37;;22292:107;;;;:::o;22405:393::-;22474:6;22524:1;22512:10;22508:18;22547:97;22577:66;22566:9;22547:97;:::i;:::-;22665:39;22695:8;22684:9;22665:39;:::i;:::-;22653:51;;22737:4;22733:9;22726:5;22722:21;22713:30;;22786:4;22776:8;22772:19;22765:5;22762:30;22752:40;;22481:317;;22405:393;;;;;:::o;22804:142::-;22854:9;22887:53;22905:34;22914:24;22932:5;22914:24;:::i;:::-;22905:34;:::i;:::-;22887:53;:::i;:::-;22874:66;;22804:142;;;:::o;22952:75::-;22995:3;23016:5;23009:12;;22952:75;;;:::o;23033:269::-;23143:39;23174:7;23143:39;:::i;:::-;23204:91;23253:41;23277:16;23253:41;:::i;:::-;23245:6;23238:4;23232:11;23204:91;:::i;:::-;23198:4;23191:105;23109:193;23033:269;;;:::o;23308:73::-;23353:3;23308:73;:::o;23387:189::-;23464:32;;:::i;:::-;23505:65;23563:6;23555;23549:4;23505:65;:::i;:::-;23440:136;23387:189;;:::o;23582:186::-;23642:120;23659:3;23652:5;23649:14;23642:120;;;23713:39;23750:1;23743:5;23713:39;:::i;:::-;23686:1;23679:5;23675:13;23666:22;;23642:120;;;23582:186;;:::o;23774:543::-;23875:2;23870:3;23867:11;23864:446;;;23909:38;23941:5;23909:38;:::i;:::-;23993:29;24011:10;23993:29;:::i;:::-;23983:8;23979:44;24176:2;24164:10;24161:18;24158:49;;;24197:8;24182:23;;24158:49;24220:80;24276:22;24294:3;24276:22;:::i;:::-;24266:8;24262:37;24249:11;24220:80;:::i;:::-;23879:431;;23864:446;23774:543;;;:::o;24323:117::-;24377:8;24427:5;24421:4;24417:16;24396:37;;24323:117;;;;:::o;24446:169::-;24490:6;24523:51;24571:1;24567:6;24559:5;24556:1;24552:13;24523:51;:::i;:::-;24519:56;24604:4;24598;24594:15;24584:25;;24497:118;24446:169;;;;:::o;24620:295::-;24696:4;24842:29;24867:3;24861:4;24842:29;:::i;:::-;24834:37;;24904:3;24901:1;24897:11;24891:4;24888:21;24880:29;;24620:295;;;;:::o;24920:1395::-;25037:37;25070:3;25037:37;:::i;:::-;25139:18;25131:6;25128:30;25125:56;;;25161:18;;:::i;:::-;25125:56;25205:38;25237:4;25231:11;25205:38;:::i;:::-;25290:67;25350:6;25342;25336:4;25290:67;:::i;:::-;25384:1;25408:4;25395:17;;25440:2;25432:6;25429:14;25457:1;25452:618;;;;26114:1;26131:6;26128:77;;;26180:9;26175:3;26171:19;26165:26;26156:35;;26128:77;26231:67;26291:6;26284:5;26231:67;:::i;:::-;26225:4;26218:81;26087:222;25422:887;;25452:618;25504:4;25500:9;25492:6;25488:22;25538:37;25570:4;25538:37;:::i;:::-;25597:1;25611:208;25625:7;25622:1;25619:14;25611:208;;;25704:9;25699:3;25695:19;25689:26;25681:6;25674:42;25755:1;25747:6;25743:14;25733:24;;25802:2;25791:9;25787:18;25774:31;;25648:4;25645:1;25641:12;25636:17;;25611:208;;;25847:6;25838:7;25835:19;25832:179;;;25905:9;25900:3;25896:19;25890:26;25948:48;25990:4;25982:6;25978:17;25967:9;25948:48;:::i;:::-;25940:6;25933:64;25855:156;25832:179;26057:1;26053;26045:6;26041:14;26037:22;26031:4;26024:36;25459:611;;;25422:887;;25012:1303;;;24920:1395;;:::o;26321:423::-;26462:4;26500:2;26489:9;26485:18;26477:26;;26549:9;26543:4;26539:20;26535:1;26524:9;26520:17;26513:47;26577:78;26650:4;26641:6;26577:78;:::i;:::-;26569:86;;26665:72;26733:2;26722:9;26718:18;26709:6;26665:72;:::i;:::-;26321:423;;;;;:::o;26750:143::-;26807:5;26838:6;26832:13;26823:22;;26854:33;26881:5;26854:33;:::i;:::-;26750:143;;;;:::o;26899:351::-;26969:6;27018:2;27006:9;26997:7;26993:23;26989:32;26986:119;;;27024:79;;:::i;:::-;26986:119;27144:1;27169:64;27225:7;27216:6;27205:9;27201:22;27169:64;:::i;:::-;27159:74;;27115:128;26899:351;;;;:::o;27256:171::-;27396:23;27392:1;27384:6;27380:14;27373:47;27256:171;:::o;27433:366::-;27575:3;27596:67;27660:2;27655:3;27596:67;:::i;:::-;27589:74;;27672:93;27761:3;27672:93;:::i;:::-;27790:2;27785:3;27781:12;27774:19;;27433:366;;;:::o;27805:419::-;27971:4;28009:2;27998:9;27994:18;27986:26;;28058:9;28052:4;28048:20;28044:1;28033:9;28029:17;28022:47;28086:131;28212:4;28086:131;:::i;:::-;28078:139;;27805:419;;;:::o;28230:175::-;28370:27;28366:1;28358:6;28354:14;28347:51;28230:175;:::o;28411:366::-;28553:3;28574:67;28638:2;28633:3;28574:67;:::i;:::-;28567:74;;28650:93;28739:3;28650:93;:::i;:::-;28768:2;28763:3;28759:12;28752:19;;28411:366;;;:::o;28783:419::-;28949:4;28987:2;28976:9;28972:18;28964:26;;29036:9;29030:4;29026:20;29022:1;29011:9;29007:17;29000:47;29064:131;29190:4;29064:131;:::i;:::-;29056:139;;28783:419;;;:::o;29208:194::-;29248:4;29268:20;29286:1;29268:20;:::i;:::-;29263:25;;29302:20;29320:1;29302:20;:::i;:::-;29297:25;;29346:1;29343;29339:9;29331:17;;29370:1;29364:4;29361:11;29358:37;;;29375:18;;:::i;:::-;29358:37;29208:194;;;;:::o;29408:169::-;29548:21;29544:1;29536:6;29532:14;29525:45;29408:169;:::o;29583:366::-;29725:3;29746:67;29810:2;29805:3;29746:67;:::i;:::-;29739:74;;29822:93;29911:3;29822:93;:::i;:::-;29940:2;29935:3;29931:12;29924:19;;29583:366;;;:::o;29955:419::-;30121:4;30159:2;30148:9;30144:18;30136:26;;30208:9;30202:4;30198:20;30194:1;30183:9;30179:17;30172:47;30236:131;30362:4;30236:131;:::i;:::-;30228:139;;29955:419;;;:::o;30380:171::-;30520:23;30516:1;30508:6;30504:14;30497:47;30380:171;:::o;30557:366::-;30699:3;30720:67;30784:2;30779:3;30720:67;:::i;:::-;30713:74;;30796:93;30885:3;30796:93;:::i;:::-;30914:2;30909:3;30905:12;30898:19;;30557:366;;;:::o;30929:419::-;31095:4;31133:2;31122:9;31118:18;31110:26;;31182:9;31176:4;31172:20;31168:1;31157:9;31153:17;31146:47;31210:131;31336:4;31210:131;:::i;:::-;31202:139;;30929:419;;;:::o;31354:442::-;31503:4;31541:2;31530:9;31526:18;31518:26;;31554:71;31622:1;31611:9;31607:17;31598:6;31554:71;:::i;:::-;31635:72;31703:2;31692:9;31688:18;31679:6;31635:72;:::i;:::-;31717;31785:2;31774:9;31770:18;31761:6;31717:72;:::i;:::-;31354:442;;;;;;:::o;31802:181::-;31942:33;31938:1;31930:6;31926:14;31919:57;31802:181;:::o;31989:366::-;32131:3;32152:67;32216:2;32211:3;32152:67;:::i;:::-;32145:74;;32228:93;32317:3;32228:93;:::i;:::-;32346:2;32341:3;32337:12;32330:19;;31989:366;;;:::o;32361:419::-;32527:4;32565:2;32554:9;32550:18;32542:26;;32614:9;32608:4;32604:20;32600:1;32589:9;32585:17;32578:47;32642:131;32768:4;32642:131;:::i;:::-;32634:139;;32361:419;;;:::o;32786:332::-;32907:4;32945:2;32934:9;32930:18;32922:26;;32958:71;33026:1;33015:9;33011:17;33002:6;32958:71;:::i;:::-;33039:72;33107:2;33096:9;33092:18;33083:6;33039:72;:::i;:::-;32786:332;;;;;:::o;33124:::-;33245:4;33283:2;33272:9;33268:18;33260:26;;33296:71;33364:1;33353:9;33349:17;33340:6;33296:71;:::i;:::-;33377:72;33445:2;33434:9;33430:18;33421:6;33377:72;:::i;:::-;33124:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2282000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "348",
								"DEFAULT_ADMIN_ROLE()": "374",
								"addAdmin(address)": "infinite",
								"apiIdCounter()": "2471",
								"apis(uint256)": "infinite",
								"getRemainingRequests(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getSubscriptionStatus(address,uint256)": "5287",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3144",
								"owner()": "2619",
								"purchaseAPIAccess(uint256,uint256)": "infinite",
								"purchaseSubscription(uint256,uint256)": "infinite",
								"refundUnusedRequests(uint256)": "infinite",
								"registerAPI(string,uint256)": "infinite",
								"removeAdmin(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setAPIStatus(uint256,bool)": "infinite",
								"supportsInterface(bytes4)": "741",
								"token()": "infinite",
								"useAPIAccess(uint256)": "infinite",
								"withdrawTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1681,
									"end": 1929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1750,
									"end": 1751,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1723,
									"end": 1752,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1723,
									"end": 1752,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1752,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1723,
									"end": 1752,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1752,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1715,
									"end": 1778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1715,
									"end": 1778,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1793,
									"end": 1799,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1799,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1814,
									"end": 1824,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1811,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1811,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1806,
									"end": 1824,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1844,
									"end": 1862,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1844,
									"end": 1862,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1864,
									"end": 1874,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1843,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1833,
									"end": 1843,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1833,
									"end": 1843,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1833,
									"end": 1875,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 649,
									"end": 672,
									"name": "PUSH",
									"source": 11,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1906,
									"end": 1916,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1883,
									"end": 1893,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1883,
									"end": 1893,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1883,
									"end": 1917,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1681,
									"end": 1929,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1497,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1526,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1515,
									"end": 1518,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1527,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1560,
									"end": 1564,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1555,
									"end": 1558,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1551,
									"end": 1565,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1565,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1740,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1711,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1715,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1741,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1899,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1981,
									"end": 1983,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1976,
									"end": 1979,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1917,
									"end": 1984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1910,
									"end": 1984,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1910,
									"end": 1984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2082,
									"end": 2085,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1993,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2113,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2106,
									"end": 2109,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2095,
									"end": 2114,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2095,
									"end": 2114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2296,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2330,
									"end": 2332,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2319,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2333,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2379,
									"end": 2388,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2373,
									"end": 2377,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2369,
									"end": 2389,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2354,
									"end": 2363,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2350,
									"end": 2367,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2533,
									"end": 2537,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2407,
									"end": 2538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2538,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2538,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1104"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 6374,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220031f819e2e9209180c39d2abecff3feee7ba793989a7254cbce4091c45ed843a64736f6c634300081a0033",
									".code": [
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "75B238FC"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "AF6E5689"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "BC39C0EF"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "75B238FC"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "838C0557"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "8D1D44A9"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "8D8F2ADB"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "8E04D8D8"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "24CCE39F"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "24CCE39F"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "400BB18D"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "6D177A00"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "70480275"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "99952C8"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "CD2C460"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "1785F53C"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 437,
											"end": 6374,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 973,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 6128,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 6128,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 6128,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2309,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2309,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2971,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2971,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5895,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5895,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5895,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3220,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3220,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2200,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2200,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 612,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 612,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 2422,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2422,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3956,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3956,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4992,
											"end": 5267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 585,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 585,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 4508,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 4508,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5275,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5275,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 578,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 549,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 549,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 973,
											"end": 1000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6259,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6247,
											"end": 6259,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6238,
											"end": 6259,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6230,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6230,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6329,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6335,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6336,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6363,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6300,
											"end": 6315,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6300,
											"end": 6363,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6300,
											"end": 6363,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1971,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 649,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2399,
											"end": 2405,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2376,
											"end": 2406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2376,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2114,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2106,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3072,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3063,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3063,
											"end": 3084,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3055,
											"end": 3107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3055,
											"end": 3107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3129,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3130,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3118,
											"end": 3139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "33446694866E808B8C5250F584345F59832E7A6F29E30BF7A8EAD78441940D9E"
										},
										{
											"begin": 3194,
											"end": 3203,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3169,
											"end": 3204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3204,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2971,
											"end": 3212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6007,
											"end": 6028,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5999,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5999,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6111,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6112,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3319,
											"end": 3331,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3310,
											"end": 3331,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3302,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3302,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3382,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3373,
											"end": 3386,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3365,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3365,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3448,
											"end": 3484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3495,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3495,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3573,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3589,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3589,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 3570,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3570,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3648,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3664,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3645,
											"end": 3664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3664,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 3620,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 3620,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3664,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3612,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3612,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3722,
											"end": 3732,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3699,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3780,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3791,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3792,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3817,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3770,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3770,
											"end": 3831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3845,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3842,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3920,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH",
											"source": 11,
											"value": "651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3891,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3940,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3220,
											"end": 3948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1971,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 649,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2286,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2264,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2264,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 612,
											"end": 672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 612,
											"end": 672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2114,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2106,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2106,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2550,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2551,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2520,
											"end": 2580,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2520,
											"end": 2580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2619,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2591,
											"end": 2667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2591,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2696,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2696,
											"end": 2710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2696,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2732,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2721,
											"end": 2892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "708B6915AAD37CD1D491E64BF7A3B53C298499411A09F4B2315E30DA638B5DE2"
										},
										{
											"begin": 2931,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2938,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2910,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2955,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4070,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4058,
											"end": 4070,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4049,
											"end": 4070,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4041,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4041,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4153,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4208,
											"end": 4225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4247,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4228,
											"end": 4247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4247,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4228,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4208,
											"end": 4259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4208,
											"end": 4259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4293,
											"end": 4303,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4320,
											"end": 4329,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4275,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 4270,
											"end": 4292,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4292,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4270,
											"end": 4292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4410,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 4395,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4364,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4384,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4392,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4472,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH",
											"source": 11,
											"value": "6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4440,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4492,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4992,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 1979,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1971,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1971,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5084,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 5079,
											"end": 5094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5094,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5103,
											"end": 5107,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5079,
											"end": 5109,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5109,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5079,
											"end": 5109,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5079,
											"end": 5109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5061,
											"end": 5109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5061,
											"end": 5109,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5135,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5139,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5120,
											"end": 5165,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5120,
											"end": 5165,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5202,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5211,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5183,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 5178,
											"end": 5196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5196,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5178,
											"end": 5196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5178,
											"end": 5212,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5249,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
										},
										{
											"begin": 5251,
											"end": 5258,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5228,
											"end": 5259,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5259,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5267,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 605,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 585,
											"end": 605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4566,
											"end": 4618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4566,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4631,
											"end": 4667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4689,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4678,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4763,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4774,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4775,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4820,
											"end": 4833,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4812,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4876,
											"end": 4886,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4897,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4898,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4923,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4924,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4876,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4957,
											"end": 4967,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "PUSH",
											"source": 11,
											"value": "7598AFFE5BB8B864E84F0B819F6B046054C8F0D6771E8AE086411B5DD2A8BC12"
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 4984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 4984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5341,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5341,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5417,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5413,
											"end": 5434,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5412,
											"end": 5434,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5404,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5404,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5509,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5520,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5547,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5587,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 5558,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5558,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5680,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5681,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5697,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5697,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5649,
											"end": 5697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5649,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5626,
											"end": 5697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5626,
											"end": 5697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5718,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5756,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5760,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 5792,
											"end": 5802,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 5773,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5856,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH",
											"source": 11,
											"value": "93C496F36ECAB5F5583F216646CAC3ACB12A63AEACDDB1A9251CEB81F0EE36E7"
										},
										{
											"begin": 5866,
											"end": 5878,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5833,
											"end": 5879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5879,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 578,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 549,
											"end": 578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 549,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2073,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2151,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2085,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2278,
											"end": 2283,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2260,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2285,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2415,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2582,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2460,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2551,
											"end": 2556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 2533,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2557,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2533,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2526,
											"end": 2531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2558,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2513,
											"end": 2576,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2576,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2513,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2715,
											"end": 2720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2688,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2721,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2688,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2860,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2837,
											"end": 2844,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2856,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2829,
											"end": 2861,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 2864,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3030,
											"end": 3052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 3009,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2955,
											"end": 3072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 3137,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 3704,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3694,
											"end": 3729,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3805,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3859,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4015,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4018,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4109,
											"end": 4226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4326,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4351,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4507,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4707,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4591,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4661,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4654,
											"end": 4659,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4651,
											"end": 4683,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 4641,
											"end": 4701,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4699,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4701,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 4641,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4781,
											"end": 4801,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4810,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 4923,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4931,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 4971,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 4960,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4972,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4977,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5061,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 4942,
											"end": 5061,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4980,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5061,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 4942,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 5170,
											"end": 5177,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5161,
											"end": 5167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5159,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5146,
											"end": 5168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5125,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5178,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 5125,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5178,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 5295,
											"end": 5302,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5286,
											"end": 5292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5284,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5271,
											"end": 5293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5253,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5303,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 5253,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 5320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5394,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5408,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5426,
											"end": 5449,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5454,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 5457,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 5457,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5419,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 5647,
											"end": 5654,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5602,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 5602,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5602,
											"end": 5655,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 5602,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5655,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5592,
											"end": 5655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5730,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 5775,
											"end": 5782,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5766,
											"end": 5772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5730,
											"end": 5783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5783,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 5730,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5326,
											"end": 5800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5929,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5934,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 5937,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6082,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6255,
											"end": 6262,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6210,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6200,
											"end": 6263,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6200,
											"end": 6263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 6280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6286,
											"end": 6403,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6286,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6393,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6385,
											"end": 6397,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6409,
											"end": 6526,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6409,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6508,
											"end": 6520,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6634,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6532,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6573,
											"end": 6579,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6626,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6620,
											"end": 6627,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6608,
											"end": 6613,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6628,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6590,
											"end": 6628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6590,
											"end": 6628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6634,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6640,
											"end": 6820,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6640,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6765,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6775,
											"end": 6790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6813,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6814,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7107,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6826,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6909,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6936,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 6909,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7039,
											"end": 7045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7024,
											"end": 7046,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6991,
											"end": 7001,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6988,
											"end": 7022,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 7047,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7070,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 6982,
											"end": 7070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7050,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7070,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 6982,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7090,
											"end": 7100,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6869,
											"end": 7107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7107,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 7107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7242,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7113,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7174,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7174,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7174,
											"end": 7194,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7174,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7231,
											"end": 7235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7229,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7203,
											"end": 7236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7203,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7242,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7556,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7248,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7389,
											"end": 7419,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7442,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7386,
											"end": 7442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7422,
											"end": 7440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 7422,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7442,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7386,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 7460,
											"end": 7489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7538,
											"end": 7542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7526,
											"end": 7549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7526,
											"end": 7549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7556,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7710,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7562,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7660,
											"end": 7666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7667,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7687,
											"end": 7690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 7835,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7835,
											"end": 7884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7884,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 7835,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7819,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7885,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 7819,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 7885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 7885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7901,
											"end": 7906,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7939,
											"end": 7944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7970,
											"end": 7973,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7988,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7960,
											"end": 8072,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7960,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 7960,
											"end": 8072,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 7991,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7991,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7991,
											"end": 8070,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 7991,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7960,
											"end": 8072,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 7960,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8121,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8081,
											"end": 8135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8135,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8081,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 8141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8263,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8251,
											"end": 8257,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8243,
											"end": 8270,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 8233,
											"end": 8355,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 8274,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 8274,
											"end": 8353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8353,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 8274,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8355,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 8233,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8378,
											"end": 8398,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 8491,
											"end": 8494,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8476,
											"end": 8480,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8474,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 8416,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8495,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 8416,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8407,
											"end": 8495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8585,
											"end": 8591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8628,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8640,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8613,
											"end": 8645,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8729,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 8610,
											"end": 8729,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8648,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 8648,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 8648,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8648,
											"end": 8727,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 8648,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8729,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 8610,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8781,
											"end": 8798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8799,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8818,
											"end": 8824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8815,
											"end": 8845,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8929,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 8812,
											"end": 8929,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 8848,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 8848,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8927,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 8848,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8929,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 8812,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 9008,
											"end": 9015,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 8953,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8953,
											"end": 9016,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 8953,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9065,
											"end": 9067,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9091,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9136,
											"end": 9143,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9125,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9091,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 9091,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9091,
											"end": 9144,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9091,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9144,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9036,
											"end": 9154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8507,
											"end": 9161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9285,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 9167,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9254,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 9272,
											"end": 9277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9254,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 9254,
											"end": 9278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9254,
											"end": 9278,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 9254,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9242,
											"end": 9279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9384,
											"end": 9388,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9411,
											"end": 9420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9425,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9399,
											"end": 9425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9399,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9488,
											"end": 9505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 9435,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9506,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 9435,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9613,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9602,
											"end": 9625,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9630,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9595,
											"end": 9714,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9595,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 9595,
											"end": 9714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 9633,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 9633,
											"end": 9712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9712,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 9633,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9595,
											"end": 9714,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 9595,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9823,
											"end": 9830,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9821,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9778,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 9778,
											"end": 9831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9778,
											"end": 9831,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 9778,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9724,
											"end": 9841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9953,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9854,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9912,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 9946,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10043,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10083,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10072,
											"end": 10075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10065,
											"end": 10084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10108,
											"end": 10122,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9959,
											"end": 10128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10273,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10134,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10218,
											"end": 10221,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10207,
											"end": 10230,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10261,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10250,
											"end": 10253,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10239,
											"end": 10266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10395,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10428,
											"end": 10433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 10395,
											"end": 10434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10434,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10395,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10514,
											"end": 10520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 10450,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10521,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10450,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10521,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10530,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 10588,
											"end": 10594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10586,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10569,
											"end": 10574,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10565,
											"end": 10581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10530,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10530,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10530,
											"end": 10595,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 10530,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 10642,
											"end": 10648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 10620,
											"end": 10649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10649,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 10620,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10611,
											"end": 10650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10650,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10371,
											"end": 10656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10894,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10868,
											"end": 10895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10868,
											"end": 10895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10941,
											"end": 10950,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10935,
											"end": 10939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10931,
											"end": 10951,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10912,
											"end": 10929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 10952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11042,
											"end": 11046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11033,
											"end": 11039,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 10969,
											"end": 11047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10969,
											"end": 11047,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 10969,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10961,
											"end": 11047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10961,
											"end": 11047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 11125,
											"end": 11127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11114,
											"end": 11123,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11101,
											"end": 11107,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 11057,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11207,
											"end": 11209,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 11139,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11283,
											"end": 11285,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11272,
											"end": 11281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 11221,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11287,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11221,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 11294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11360,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 11300,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11328,
											"end": 11331,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11349,
											"end": 11354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11342,
											"end": 11354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11360,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11508,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 11366,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11416,
											"end": 11425,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 11476,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 11494,
											"end": 11499,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11476,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 11476,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11476,
											"end": 11500,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 11476,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 11467,
											"end": 11501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 11449,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11502,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11449,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11436,
											"end": 11502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11436,
											"end": 11502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11508,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11640,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 11514,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 11628,
											"end": 11633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 11597,
											"end": 11634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 11597,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11584,
											"end": 11634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11584,
											"end": 11634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11786,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 11646,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 11743,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11730,
											"end": 11780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11730,
											"end": 11780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11786,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11951,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 11792,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 11938,
											"end": 11943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 11893,
											"end": 11944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 11944,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 11893,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11888,
											"end": 11891,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 11945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 11951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12182,
											"end": 12199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 12115,
											"end": 12200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12115,
											"end": 12200,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12115,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12381,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12213,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12353,
											"end": 12373,
											"name": "PUSH",
											"source": 12,
											"value": "41504920646F6573206E6F742065786973740000000000000000000000000000"
										},
										{
											"begin": 12349,
											"end": 12350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12341,
											"end": 12347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12337,
											"end": 12351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12330,
											"end": 12374,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12529,
											"end": 12532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 12614,
											"end": 12616,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12609,
											"end": 12612,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 12550,
											"end": 12617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12543,
											"end": 12617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 12715,
											"end": 12718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 12626,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12728,
											"end": 12747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12728,
											"end": 12747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12948,
											"end": 12966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13012,
											"end": 13021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13002,
											"end": 13022,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12998,
											"end": 12999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12996,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12976,
											"end": 13023,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 13040,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13032,
											"end": 13171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13032,
											"end": 13171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 13178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13357,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13184,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13349,
											"name": "PUSH",
											"source": 12,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 13320,
											"end": 13321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13308,
											"end": 13322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13363,
											"end": 13729,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 13363,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13505,
											"end": 13508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13526,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 13590,
											"end": 13592,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 13585,
											"end": 13588,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13526,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 13526,
											"end": 13593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13526,
											"end": 13593,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 13526,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13519,
											"end": 13593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13519,
											"end": 13593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13602,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 13691,
											"end": 13694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13602,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13602,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13602,
											"end": 13695,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 13602,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13720,
											"end": 13722,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13715,
											"end": 13718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13711,
											"end": 13723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13363,
											"end": 13729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13363,
											"end": 13729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13363,
											"end": 13729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13363,
											"end": 13729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13735,
											"end": 14154,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 13735,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13901,
											"end": 13905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13939,
											"end": 13941,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13924,
											"end": 13942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13916,
											"end": 13942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13916,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13988,
											"end": 13997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 13986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13978,
											"end": 13998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13974,
											"end": 13975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13963,
											"end": 13972,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13952,
											"end": 13999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14016,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 14142,
											"end": 14146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14016,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 14016,
											"end": 14147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14016,
											"end": 14147,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 14016,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14008,
											"end": 14147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14008,
											"end": 14147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13735,
											"end": 14154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13735,
											"end": 14154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13735,
											"end": 14154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13735,
											"end": 14154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14332,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 14160,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14300,
											"end": 14324,
											"name": "PUSH",
											"source": 12,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 14296,
											"end": 14297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14288,
											"end": 14294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14284,
											"end": 14298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14277,
											"end": 14325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14480,
											"end": 14483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 14565,
											"end": 14567,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 14560,
											"end": 14563,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 14501,
											"end": 14568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14494,
											"end": 14568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14494,
											"end": 14568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 14577,
											"end": 14670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14695,
											"end": 14697,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14690,
											"end": 14693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14679,
											"end": 14698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14679,
											"end": 14698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14338,
											"end": 14704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14914,
											"end": 14916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14903,
											"end": 14912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14899,
											"end": 14917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14891,
											"end": 14917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14891,
											"end": 14917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14963,
											"end": 14972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14957,
											"end": 14961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14953,
											"end": 14973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14934,
											"end": 14951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14927,
											"end": 14974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 15117,
											"end": 15121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 14991,
											"end": 15122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 15122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 15122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 15129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15135,
											"end": 15366,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 15135,
											"end": 15366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15275,
											"end": 15309,
											"name": "PUSH",
											"source": 12,
											"value": "4E756D626572206F66207265717565737473206D757374206265206772656174"
										},
										{
											"begin": 15271,
											"end": 15272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15263,
											"end": 15269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15259,
											"end": 15273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15358,
											"name": "PUSH",
											"source": 12,
											"value": "6572207468616E207A65726F0000000000000000000000000000000000000000"
										},
										{
											"begin": 15339,
											"end": 15341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15331,
											"end": 15337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15327,
											"end": 15342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15359,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15135,
											"end": 15366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15135,
											"end": 15366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15372,
											"end": 15738,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 15372,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15514,
											"end": 15517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15535,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 15599,
											"end": 15601,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 15594,
											"end": 15597,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15535,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15535,
											"end": 15602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15535,
											"end": 15602,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 15535,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15528,
											"end": 15602,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15528,
											"end": 15602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 15700,
											"end": 15703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 15611,
											"end": 15704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15704,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 15611,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15729,
											"end": 15731,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15724,
											"end": 15727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 15732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15713,
											"end": 15732,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15713,
											"end": 15732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15372,
											"end": 15738,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15372,
											"end": 15738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15372,
											"end": 15738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15372,
											"end": 15738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 16163,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 15744,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15948,
											"end": 15950,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15937,
											"end": 15946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15925,
											"end": 15951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15925,
											"end": 15951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15997,
											"end": 16006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15991,
											"end": 15995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15987,
											"end": 16007,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15983,
											"end": 15984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15968,
											"end": 15985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15961,
											"end": 16008,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16025,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16151,
											"end": 16155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16025,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 16025,
											"end": 16156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16025,
											"end": 16156,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16025,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16017,
											"end": 16156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 16163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 16163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 16163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 16163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16169,
											"end": 16336,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16169,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16309,
											"end": 16328,
											"name": "PUSH",
											"source": 12,
											"value": "415049206973206E6F7420616374697665000000000000000000000000000000"
										},
										{
											"begin": 16305,
											"end": 16306,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16297,
											"end": 16303,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16293,
											"end": 16307,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16169,
											"end": 16336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16169,
											"end": 16336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16708,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 16342,
											"end": 16708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16484,
											"end": 16487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16505,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16569,
											"end": 16571,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 16564,
											"end": 16567,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16505,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 16505,
											"end": 16572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16505,
											"end": 16572,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16505,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16498,
											"end": 16572,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16498,
											"end": 16572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16670,
											"end": 16673,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16581,
											"end": 16674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16674,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16581,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16694,
											"end": 16697,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16690,
											"end": 16702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16702,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16342,
											"end": 16708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 17133,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 16714,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16880,
											"end": 16884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16918,
											"end": 16920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16907,
											"end": 16916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16895,
											"end": 16921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16895,
											"end": 16921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16967,
											"end": 16976,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16961,
											"end": 16965,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16957,
											"end": 16977,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16953,
											"end": 16954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16938,
											"end": 16955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 16978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16995,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 17121,
											"end": 17125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16995,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 16995,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16995,
											"end": 17126,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16995,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16987,
											"end": 17126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16987,
											"end": 17126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 17133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 17133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 17133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16714,
											"end": 17133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17139,
											"end": 17319,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 17139,
											"end": 17319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17187,
											"end": 17264,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17184,
											"end": 17185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17177,
											"end": 17265,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17288,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 17281,
											"end": 17282,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17274,
											"end": 17289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17308,
											"end": 17312,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17305,
											"end": 17306,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17298,
											"end": 17313,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17365,
											"end": 17372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17406,
											"end": 17407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17388,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 17388,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17388,
											"end": 17408,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17388,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17383,
											"end": 17408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17383,
											"end": 17408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17422,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17440,
											"end": 17441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17422,
											"end": 17442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 17422,
											"end": 17442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17422,
											"end": 17442,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17422,
											"end": 17442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17417,
											"end": 17442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17417,
											"end": 17442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17477,
											"end": 17478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17474,
											"end": 17475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17470,
											"end": 17479,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17499,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17517,
											"end": 17528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17499,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 17499,
											"end": 17529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17499,
											"end": 17529,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17499,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17488,
											"end": 17529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17488,
											"end": 17529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17678,
											"end": 17679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17669,
											"end": 17676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17665,
											"end": 17680,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 17662,
											"end": 17663,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17659,
											"end": 17681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17639,
											"end": 17640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17632,
											"end": 17641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17695,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 17589,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17589,
											"end": 17728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17708,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 17708,
											"end": 17726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17726,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17708,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17589,
											"end": 17728,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17589,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17373,
											"end": 17735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17325,
											"end": 17735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17741,
											"end": 17921,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 17741,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17866,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17786,
											"end": 17787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17779,
											"end": 17867,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17886,
											"end": 17890,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 17883,
											"end": 17884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17876,
											"end": 17891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17910,
											"end": 17914,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17907,
											"end": 17908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17900,
											"end": 17915,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 17968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17984,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 18002,
											"end": 18003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17984,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 17984,
											"end": 18004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17984,
											"end": 18004,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 17984,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17979,
											"end": 18004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18018,
											"end": 18038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 18036,
											"end": 18037,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18018,
											"end": 18038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 18018,
											"end": 18038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18018,
											"end": 18038,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 18018,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18013,
											"end": 18038,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18013,
											"end": 18038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18057,
											"end": 18058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18062,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 18062,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 18062,
											"end": 18080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18062,
											"end": 18080,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 18062,
											"end": 18080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18101,
											"end": 18102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18097,
											"end": 18106,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18285,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 18118,
											"end": 18285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18258,
											"end": 18277,
											"name": "PUSH",
											"source": 12,
											"value": "4F766572666C6F77206465746563746564000000000000000000000000000000"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18235,
											"end": 18278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18657,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 18291,
											"end": 18657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18433,
											"end": 18436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18454,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 18518,
											"end": 18520,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 18513,
											"end": 18516,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 18454,
											"end": 18521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18454,
											"end": 18521,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 18454,
											"end": 18521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18447,
											"end": 18521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18447,
											"end": 18521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18530,
											"end": 18623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 18619,
											"end": 18622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18530,
											"end": 18623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 18530,
											"end": 18623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18530,
											"end": 18623,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 18530,
											"end": 18623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18648,
											"end": 18650,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18643,
											"end": 18646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 18651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19082,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 18663,
											"end": 19082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18829,
											"end": 18833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18867,
											"end": 18869,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18856,
											"end": 18865,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18852,
											"end": 18870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18870,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 18925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18910,
											"end": 18914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18906,
											"end": 18926,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18902,
											"end": 18903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18900,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18887,
											"end": 18904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18880,
											"end": 18927,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18944,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 19070,
											"end": 19074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18944,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 18944,
											"end": 19075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18944,
											"end": 19075,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18944,
											"end": 19075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 19075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 19075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19128,
											"end": 19131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19147,
											"end": 19167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 19165,
											"end": 19166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19147,
											"end": 19167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 19147,
											"end": 19167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19147,
											"end": 19167,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 19147,
											"end": 19167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19181,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 19199,
											"end": 19200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19181,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 19181,
											"end": 19201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19181,
											"end": 19201,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 19181,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19176,
											"end": 19201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19176,
											"end": 19201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19224,
											"end": 19225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19221,
											"end": 19222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19217,
											"end": 19226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19210,
											"end": 19226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19210,
											"end": 19226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19245,
											"end": 19248,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19242,
											"end": 19243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19239,
											"end": 19249,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19272,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 19236,
											"end": 19272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 19252,
											"end": 19270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19272,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 19236,
											"end": 19272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19088,
											"end": 19279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19285,
											"end": 19459,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 19285,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19425,
											"end": 19451,
											"name": "PUSH",
											"source": 12,
											"value": "415049206E616D652063616E6E6F7420626520656D7074790000000000000000"
										},
										{
											"begin": 19421,
											"end": 19422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19413,
											"end": 19419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19409,
											"end": 19423,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19402,
											"end": 19452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19285,
											"end": 19459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19285,
											"end": 19459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19465,
											"end": 19831,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 19465,
											"end": 19831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19628,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 19692,
											"end": 19694,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 19687,
											"end": 19690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19628,
											"end": 19695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 19628,
											"end": 19695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19628,
											"end": 19695,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 19628,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19621,
											"end": 19695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19621,
											"end": 19695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 19793,
											"end": 19796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 19704,
											"end": 19797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19797,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 19704,
											"end": 19797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19822,
											"end": 19824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19813,
											"end": 19825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19806,
											"end": 19825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19806,
											"end": 19825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19465,
											"end": 19831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19465,
											"end": 19831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19465,
											"end": 19831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19465,
											"end": 19831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 20256,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 19837,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20003,
											"end": 20007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20030,
											"end": 20039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20018,
											"end": 20044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20018,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20090,
											"end": 20099,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20084,
											"end": 20088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20080,
											"end": 20100,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20076,
											"end": 20077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20065,
											"end": 20074,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20061,
											"end": 20078,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20054,
											"end": 20101,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20118,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 20244,
											"end": 20248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20118,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 20118,
											"end": 20249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20118,
											"end": 20249,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 20118,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20110,
											"end": 20249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20110,
											"end": 20249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 20256,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 20256,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 20256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 20256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20262,
											"end": 20492,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 20262,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20402,
											"end": 20436,
											"name": "PUSH",
											"source": 12,
											"value": "5072696365207065722072657175657374206D75737420626520677265617465"
										},
										{
											"begin": 20398,
											"end": 20399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20390,
											"end": 20396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20386,
											"end": 20400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20379,
											"end": 20437,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20471,
											"end": 20484,
											"name": "PUSH",
											"source": 12,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 20466,
											"end": 20468,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20458,
											"end": 20464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20454,
											"end": 20469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20447,
											"end": 20485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20262,
											"end": 20492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20262,
											"end": 20492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20864,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 20498,
											"end": 20864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20640,
											"end": 20643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20661,
											"end": 20728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 20725,
											"end": 20727,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 20720,
											"end": 20723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20661,
											"end": 20728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 20661,
											"end": 20728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20661,
											"end": 20728,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 20661,
											"end": 20728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20654,
											"end": 20728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 20830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 20826,
											"end": 20829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 20830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 20737,
											"end": 20830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20737,
											"end": 20830,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 20737,
											"end": 20830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20855,
											"end": 20857,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20850,
											"end": 20853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20846,
											"end": 20858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20839,
											"end": 20858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20839,
											"end": 20858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20864,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20864,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20498,
											"end": 20864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 21289,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 20870,
											"end": 21289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21036,
											"end": 21040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21074,
											"end": 21076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21063,
											"end": 21072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21051,
											"end": 21077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21051,
											"end": 21077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21123,
											"end": 21132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21117,
											"end": 21121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21113,
											"end": 21133,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21109,
											"end": 21110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21098,
											"end": 21107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21094,
											"end": 21111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21087,
											"end": 21134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21151,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 21277,
											"end": 21281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21151,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 21151,
											"end": 21282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21151,
											"end": 21282,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 21151,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21143,
											"end": 21282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21143,
											"end": 21282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 21289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 21289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 21289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 21289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21528,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 21295,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21334,
											"end": 21337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21357,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 21375,
											"end": 21380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 21357,
											"end": 21381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21357,
											"end": 21381,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 21357,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21403,
											"end": 21469,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21396,
											"end": 21401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21470,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21390,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 21390,
											"end": 21493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21473,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 21473,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 21473,
											"end": 21491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21473,
											"end": 21491,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 21473,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21390,
											"end": 21493,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 21390,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21520,
											"end": 21521,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21513,
											"end": 21518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21509,
											"end": 21522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21502,
											"end": 21522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21502,
											"end": 21522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21534,
											"end": 21714,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 21534,
											"end": 21714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21582,
											"end": 21659,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21579,
											"end": 21580,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21572,
											"end": 21660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21679,
											"end": 21683,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 21676,
											"end": 21677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 21669,
											"end": 21684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21703,
											"end": 21707,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21700,
											"end": 21701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21693,
											"end": 21708,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 22040,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 21720,
											"end": 22040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21764,
											"end": 21770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21801,
											"end": 21802,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 21795,
											"end": 21799,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21791,
											"end": 21803,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 21781,
											"end": 21803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21781,
											"end": 21803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21848,
											"end": 21849,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21842,
											"end": 21846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21838,
											"end": 21850,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21869,
											"end": 21887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21859,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 21859,
											"end": 21940,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21925,
											"end": 21929,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 21917,
											"end": 21923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21913,
											"end": 21930,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21903,
											"end": 21930,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21903,
											"end": 21930,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21859,
											"end": 21940,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 21859,
											"end": 21940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21987,
											"end": 21989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21979,
											"end": 21985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21976,
											"end": 21990,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 21956,
											"end": 21974,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21953,
											"end": 21991,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21950,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 21950,
											"end": 22034,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22006,
											"end": 22024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 22006,
											"end": 22024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 22006,
											"end": 22024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22006,
											"end": 22024,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 22006,
											"end": 22024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21950,
											"end": 22034,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 21950,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21771,
											"end": 22040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 22040,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 22040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 22040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21720,
											"end": 22040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22187,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 22046,
											"end": 22187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22095,
											"end": 22099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22118,
											"end": 22121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22110,
											"end": 22121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22110,
											"end": 22121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22141,
											"end": 22144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22138,
											"end": 22139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22131,
											"end": 22145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22175,
											"end": 22179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22172,
											"end": 22173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22193,
											"end": 22286,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 22193,
											"end": 22286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22230,
											"end": 22236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22277,
											"end": 22279,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22272,
											"end": 22274,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22265,
											"end": 22270,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22261,
											"end": 22275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22257,
											"end": 22280,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22193,
											"end": 22286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22193,
											"end": 22286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22193,
											"end": 22286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22193,
											"end": 22286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22336,
											"end": 22344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22386,
											"end": 22391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22380,
											"end": 22384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22376,
											"end": 22392,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 22355,
											"end": 22392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22355,
											"end": 22392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22474,
											"end": 22480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22524,
											"end": 22525,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 22512,
											"end": 22522,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22508,
											"end": 22526,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 22547,
											"end": 22644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 22577,
											"end": 22643,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22566,
											"end": 22575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22547,
											"end": 22644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 22547,
											"end": 22644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22547,
											"end": 22644,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 22547,
											"end": 22644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22665,
											"end": 22704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22695,
											"end": 22703,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22684,
											"end": 22693,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22665,
											"end": 22704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 22665,
											"end": 22704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22665,
											"end": 22704,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22665,
											"end": 22704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22653,
											"end": 22704,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 22653,
											"end": 22704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22737,
											"end": 22741,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22733,
											"end": 22742,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 22726,
											"end": 22731,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22722,
											"end": 22743,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22713,
											"end": 22743,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22713,
											"end": 22743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22786,
											"end": 22790,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22776,
											"end": 22784,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22772,
											"end": 22791,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22765,
											"end": 22770,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22762,
											"end": 22792,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 22752,
											"end": 22792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22752,
											"end": 22792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22481,
											"end": 22798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22481,
											"end": 22798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22946,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 22804,
											"end": 22946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22854,
											"end": 22863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22887,
											"end": 22940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 22905,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22914,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 22932,
											"end": 22937,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22914,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 22914,
											"end": 22938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22914,
											"end": 22938,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 22914,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22905,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 22905,
											"end": 22939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22905,
											"end": 22939,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22905,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22887,
											"end": 22940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 22887,
											"end": 22940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22887,
											"end": 22940,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 22887,
											"end": 22940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22874,
											"end": 22940,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22874,
											"end": 22940,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 23027,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 22952,
											"end": 23027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22995,
											"end": 22998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23016,
											"end": 23021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23009,
											"end": 23021,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23009,
											"end": 23021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 23027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 23027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 23027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 23027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23033,
											"end": 23302,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 23033,
											"end": 23302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23143,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 23174,
											"end": 23181,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23143,
											"end": 23182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 23143,
											"end": 23182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23143,
											"end": 23182,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 23143,
											"end": 23182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23204,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 23253,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 23277,
											"end": 23293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23253,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 23253,
											"end": 23294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23253,
											"end": 23294,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 23253,
											"end": 23294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23245,
											"end": 23251,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23238,
											"end": 23242,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23232,
											"end": 23243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 23204,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 23204,
											"end": 23295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23204,
											"end": 23295,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 23204,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23198,
											"end": 23202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23191,
											"end": 23296,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 23109,
											"end": 23302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23033,
											"end": 23302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23033,
											"end": 23302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23033,
											"end": 23302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23033,
											"end": 23302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23308,
											"end": 23381,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 23308,
											"end": 23381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23308,
											"end": 23381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23308,
											"end": 23381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23387,
											"end": 23576,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 23387,
											"end": 23576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23464,
											"end": 23496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 23464,
											"end": 23496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 23464,
											"end": 23496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23464,
											"end": 23496,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 23464,
											"end": 23496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23505,
											"end": 23570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 23563,
											"end": 23569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23555,
											"end": 23561,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23549,
											"end": 23553,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23505,
											"end": 23570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 23505,
											"end": 23570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23505,
											"end": 23570,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 23505,
											"end": 23570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23440,
											"end": 23576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23387,
											"end": 23576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23387,
											"end": 23576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23387,
											"end": 23576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23582,
											"end": 23768,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 23582,
											"end": 23768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "tag",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23662,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23652,
											"end": 23657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23649,
											"end": 23663,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23713,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 23750,
											"end": 23751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23743,
											"end": 23748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23713,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 23713,
											"end": 23752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23713,
											"end": 23752,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 23713,
											"end": 23752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23686,
											"end": 23687,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 23679,
											"end": 23684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23675,
											"end": 23688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23666,
											"end": 23688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23666,
											"end": 23688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 23642,
											"end": 23762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23582,
											"end": 23768,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23582,
											"end": 23768,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23582,
											"end": 23768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 24317,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 23774,
											"end": 24317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23875,
											"end": 23877,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 23870,
											"end": 23873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23867,
											"end": 23878,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23864,
											"end": 24310,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23864,
											"end": 24310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 23864,
											"end": 24310,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23909,
											"end": 23947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 23941,
											"end": 23946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23909,
											"end": 23947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 23909,
											"end": 23947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23909,
											"end": 23947,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 23909,
											"end": 23947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23993,
											"end": 24022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 24011,
											"end": 24021,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23993,
											"end": 24022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 23993,
											"end": 24022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23993,
											"end": 24022,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 23993,
											"end": 24022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23983,
											"end": 23991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23979,
											"end": 24023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24176,
											"end": 24178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24164,
											"end": 24174,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24161,
											"end": 24179,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24158,
											"end": 24207,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24158,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 24158,
											"end": 24207,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24197,
											"end": 24205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24182,
											"end": 24205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24182,
											"end": 24205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24158,
											"end": 24207,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 24158,
											"end": 24207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24220,
											"end": 24300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 24276,
											"end": 24298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 24294,
											"end": 24297,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24276,
											"end": 24298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 24276,
											"end": 24298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24276,
											"end": 24298,
											"name": "tag",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 24276,
											"end": 24298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24266,
											"end": 24274,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24262,
											"end": 24299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24249,
											"end": 24260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24220,
											"end": 24300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 24220,
											"end": 24300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24220,
											"end": 24300,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 24220,
											"end": 24300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23879,
											"end": 24310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23879,
											"end": 24310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23864,
											"end": 24310,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 23864,
											"end": 24310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 24317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 24317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 24317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 24317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24377,
											"end": 24385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24427,
											"end": 24432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24421,
											"end": 24425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24417,
											"end": 24433,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 24396,
											"end": 24433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24396,
											"end": 24433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24490,
											"end": 24496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24523,
											"end": 24574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 24571,
											"end": 24572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24567,
											"end": 24573,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 24559,
											"end": 24564,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24556,
											"end": 24557,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 24552,
											"end": 24565,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 24523,
											"end": 24574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 24523,
											"end": 24574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24523,
											"end": 24574,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 24523,
											"end": 24574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24519,
											"end": 24575,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 24604,
											"end": 24608,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 24598,
											"end": 24602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24594,
											"end": 24609,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24584,
											"end": 24609,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24584,
											"end": 24609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24497,
											"end": 24615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24446,
											"end": 24615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24696,
											"end": 24700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24842,
											"end": 24871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 24867,
											"end": 24870,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24861,
											"end": 24865,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24842,
											"end": 24871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 24842,
											"end": 24871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24842,
											"end": 24871,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 24842,
											"end": 24871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24834,
											"end": 24871,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24834,
											"end": 24871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24904,
											"end": 24907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24901,
											"end": 24902,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 24897,
											"end": 24908,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 24891,
											"end": 24895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24888,
											"end": 24909,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24880,
											"end": 24909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24920,
											"end": 26315,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 24920,
											"end": 26315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25037,
											"end": 25074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 25070,
											"end": 25073,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25037,
											"end": 25074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 25037,
											"end": 25074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25037,
											"end": 25074,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 25037,
											"end": 25074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25139,
											"end": 25157,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25131,
											"end": 25137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25128,
											"end": 25158,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 25125,
											"end": 25181,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25125,
											"end": 25181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 25125,
											"end": 25181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25161,
											"end": 25179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 25161,
											"end": 25179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 25161,
											"end": 25179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25161,
											"end": 25179,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 25161,
											"end": 25179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25125,
											"end": 25181,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 25125,
											"end": 25181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25205,
											"end": 25243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 25237,
											"end": 25241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25231,
											"end": 25242,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 25205,
											"end": 25243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 25205,
											"end": 25243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25205,
											"end": 25243,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 25205,
											"end": 25243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25290,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 25350,
											"end": 25356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25342,
											"end": 25348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25336,
											"end": 25340,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25290,
											"end": 25357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 25290,
											"end": 25357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25290,
											"end": 25357,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 25290,
											"end": 25357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25384,
											"end": 25385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25408,
											"end": 25412,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25395,
											"end": 25412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25395,
											"end": 25412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25440,
											"end": 25442,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 25432,
											"end": 25438,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25429,
											"end": 25443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 25457,
											"end": 25458,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26114,
											"end": 26115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26131,
											"end": 26137,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26128,
											"end": 26205,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26128,
											"end": 26205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 26128,
											"end": 26205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26180,
											"end": 26189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26175,
											"end": 26178,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 26171,
											"end": 26190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26165,
											"end": 26191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26156,
											"end": 26191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26156,
											"end": 26191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26128,
											"end": 26205,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 26128,
											"end": 26205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26231,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 26291,
											"end": 26297,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26284,
											"end": 26289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26231,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 26231,
											"end": 26298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26231,
											"end": 26298,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 26231,
											"end": 26298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26225,
											"end": 26229,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26218,
											"end": 26299,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 26087,
											"end": 26309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25422,
											"end": 26309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 25422,
											"end": 26309,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 25452,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25504,
											"end": 25508,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 25500,
											"end": 25509,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 25492,
											"end": 25498,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25488,
											"end": 25510,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 25538,
											"end": 25575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 25570,
											"end": 25574,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 25538,
											"end": 25575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 25538,
											"end": 25575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25538,
											"end": 25575,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 25538,
											"end": 25575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25597,
											"end": 25598,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25625,
											"end": 25632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25622,
											"end": 25623,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25619,
											"end": 25633,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25704,
											"end": 25713,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25699,
											"end": 25702,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 25695,
											"end": 25714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25689,
											"end": 25715,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 25681,
											"end": 25687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25674,
											"end": 25716,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 25755,
											"end": 25756,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 25747,
											"end": 25753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25743,
											"end": 25757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25733,
											"end": 25757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25733,
											"end": 25757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25802,
											"end": 25804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25791,
											"end": 25800,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25787,
											"end": 25805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25774,
											"end": 25805,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 25774,
											"end": 25805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 25652,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25645,
											"end": 25646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25641,
											"end": 25653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25636,
											"end": 25653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25636,
											"end": 25653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 25611,
											"end": 25819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25847,
											"end": 25853,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 25838,
											"end": 25845,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25835,
											"end": 25854,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25832,
											"end": 26011,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25832,
											"end": 26011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 25832,
											"end": 26011,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25905,
											"end": 25914,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25900,
											"end": 25903,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 25896,
											"end": 25915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25890,
											"end": 25916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 25948,
											"end": 25996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 25990,
											"end": 25994,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 25982,
											"end": 25988,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 25978,
											"end": 25995,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 25967,
											"end": 25976,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25948,
											"end": 25996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 25948,
											"end": 25996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25948,
											"end": 25996,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 25948,
											"end": 25996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25940,
											"end": 25946,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25933,
											"end": 25997,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 25855,
											"end": 26011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25832,
											"end": 26011,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 25832,
											"end": 26011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26057,
											"end": 26058,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 26053,
											"end": 26054,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 26045,
											"end": 26051,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26055,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 26037,
											"end": 26059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26031,
											"end": 26035,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 26024,
											"end": 26060,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 25459,
											"end": 26070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25459,
											"end": 26070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25459,
											"end": 26070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25422,
											"end": 26309,
											"name": "tag",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 25422,
											"end": 26309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25422,
											"end": 26309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25012,
											"end": 26315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25012,
											"end": 26315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25012,
											"end": 26315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24920,
											"end": 26315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24920,
											"end": 26315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24920,
											"end": 26315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26462,
											"end": 26466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26500,
											"end": 26502,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 26489,
											"end": 26498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26485,
											"end": 26503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26477,
											"end": 26503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26477,
											"end": 26503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26549,
											"end": 26558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26543,
											"end": 26547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26539,
											"end": 26559,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26535,
											"end": 26536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26524,
											"end": 26533,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26520,
											"end": 26537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26513,
											"end": 26560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26577,
											"end": 26655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 26650,
											"end": 26654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26641,
											"end": 26647,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26577,
											"end": 26655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 26577,
											"end": 26655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26577,
											"end": 26655,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 26577,
											"end": 26655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26569,
											"end": 26655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26569,
											"end": 26655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26665,
											"end": 26737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 26733,
											"end": 26735,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26722,
											"end": 26731,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26718,
											"end": 26736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26709,
											"end": 26715,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26665,
											"end": 26737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 26665,
											"end": 26737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26665,
											"end": 26737,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 26665,
											"end": 26737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26321,
											"end": 26744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26807,
											"end": 26812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26838,
											"end": 26844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26832,
											"end": 26845,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26823,
											"end": 26845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26823,
											"end": 26845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 26881,
											"end": 26886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 26854,
											"end": 26887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26887,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 26854,
											"end": 26887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26750,
											"end": 26893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26969,
											"end": 26975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27018,
											"end": 27020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27006,
											"end": 27015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26997,
											"end": 27004,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26993,
											"end": 27016,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26989,
											"end": 27021,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 26986,
											"end": 27105,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26986,
											"end": 27105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 26986,
											"end": 27105,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27024,
											"end": 27103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 27024,
											"end": 27103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 27024,
											"end": 27103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27024,
											"end": 27103,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 27024,
											"end": 27103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26986,
											"end": 27105,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 26986,
											"end": 27105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27144,
											"end": 27145,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27169,
											"end": 27233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 27225,
											"end": 27232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27216,
											"end": 27222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27205,
											"end": 27214,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27201,
											"end": 27223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27169,
											"end": 27233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 27169,
											"end": 27233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27169,
											"end": 27233,
											"name": "tag",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 27169,
											"end": 27233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27159,
											"end": 27233,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27159,
											"end": 27233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27115,
											"end": 27243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26899,
											"end": 27250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27256,
											"end": 27427,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 27256,
											"end": 27427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27396,
											"end": 27419,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 27392,
											"end": 27393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27384,
											"end": 27390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27380,
											"end": 27394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27373,
											"end": 27420,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27256,
											"end": 27427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27256,
											"end": 27427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27433,
											"end": 27799,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 27433,
											"end": 27799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27575,
											"end": 27578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27596,
											"end": 27663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 27660,
											"end": 27662,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 27655,
											"end": 27658,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27596,
											"end": 27663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 27596,
											"end": 27663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27596,
											"end": 27663,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 27596,
											"end": 27663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27589,
											"end": 27663,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27589,
											"end": 27663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27672,
											"end": 27765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 27761,
											"end": 27764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27672,
											"end": 27765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 27672,
											"end": 27765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27672,
											"end": 27765,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 27672,
											"end": 27765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27790,
											"end": 27792,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27785,
											"end": 27788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27781,
											"end": 27793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27774,
											"end": 27793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27774,
											"end": 27793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27433,
											"end": 27799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27433,
											"end": 27799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27433,
											"end": 27799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27433,
											"end": 27799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27805,
											"end": 28224,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 27805,
											"end": 28224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27971,
											"end": 27975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28009,
											"end": 28011,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27998,
											"end": 28007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27994,
											"end": 28012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27986,
											"end": 28012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27986,
											"end": 28012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28058,
											"end": 28067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28052,
											"end": 28056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28048,
											"end": 28068,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28044,
											"end": 28045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28033,
											"end": 28042,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28029,
											"end": 28046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28022,
											"end": 28069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28086,
											"end": 28217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 28212,
											"end": 28216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28086,
											"end": 28217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 28086,
											"end": 28217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28086,
											"end": 28217,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 28086,
											"end": 28217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28078,
											"end": 28217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28078,
											"end": 28217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27805,
											"end": 28224,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27805,
											"end": 28224,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27805,
											"end": 28224,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27805,
											"end": 28224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28230,
											"end": 28405,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 28230,
											"end": 28405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28370,
											"end": 28397,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F2072656D61696E696E672041504920726571756573747300000000000000"
										},
										{
											"begin": 28366,
											"end": 28367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28354,
											"end": 28368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28347,
											"end": 28398,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28230,
											"end": 28405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28230,
											"end": 28405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28411,
											"end": 28777,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 28411,
											"end": 28777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28553,
											"end": 28556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28574,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 28638,
											"end": 28640,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 28633,
											"end": 28636,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28574,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 28574,
											"end": 28641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28574,
											"end": 28641,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 28574,
											"end": 28641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28567,
											"end": 28641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28567,
											"end": 28641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28650,
											"end": 28743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 28739,
											"end": 28742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28650,
											"end": 28743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 28650,
											"end": 28743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28650,
											"end": 28743,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 28650,
											"end": 28743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 28770,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28763,
											"end": 28766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28759,
											"end": 28771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28752,
											"end": 28771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28752,
											"end": 28771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28411,
											"end": 28777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28411,
											"end": 28777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28411,
											"end": 28777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28411,
											"end": 28777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28783,
											"end": 29202,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 28783,
											"end": 29202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28949,
											"end": 28953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28987,
											"end": 28989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28976,
											"end": 28985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28972,
											"end": 28990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28964,
											"end": 28990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28964,
											"end": 28990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29036,
											"end": 29045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29030,
											"end": 29034,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29026,
											"end": 29046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29022,
											"end": 29023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29011,
											"end": 29020,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29007,
											"end": 29024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29000,
											"end": 29047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29064,
											"end": 29195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 29190,
											"end": 29194,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29064,
											"end": 29195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 29064,
											"end": 29195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29064,
											"end": 29195,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 29064,
											"end": 29195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29056,
											"end": 29195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29056,
											"end": 29195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28783,
											"end": 29202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28783,
											"end": 29202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28783,
											"end": 29202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28783,
											"end": 29202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29248,
											"end": 29252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29268,
											"end": 29288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 29286,
											"end": 29287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29268,
											"end": 29288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 29268,
											"end": 29288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29268,
											"end": 29288,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 29268,
											"end": 29288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29263,
											"end": 29288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29263,
											"end": 29288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29302,
											"end": 29322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 29320,
											"end": 29321,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29302,
											"end": 29322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 29302,
											"end": 29322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29302,
											"end": 29322,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 29302,
											"end": 29322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29297,
											"end": 29322,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29297,
											"end": 29322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29346,
											"end": 29347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29343,
											"end": 29344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29339,
											"end": 29348,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29331,
											"end": 29348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29331,
											"end": 29348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29370,
											"end": 29371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29364,
											"end": 29368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29361,
											"end": 29372,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 29358,
											"end": 29395,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 29358,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 29358,
											"end": 29395,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29375,
											"end": 29393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 29375,
											"end": 29393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 29375,
											"end": 29393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29375,
											"end": 29393,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 29375,
											"end": 29393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29358,
											"end": 29395,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 29358,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29408,
											"end": 29577,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 29408,
											"end": 29577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29548,
											"end": 29569,
											"name": "PUSH",
											"source": 12,
											"value": "415049206973207374696C6C2061637469766500000000000000000000000000"
										},
										{
											"begin": 29544,
											"end": 29545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29536,
											"end": 29542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29532,
											"end": 29546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29525,
											"end": 29570,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29408,
											"end": 29577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29408,
											"end": 29577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29583,
											"end": 29949,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 29583,
											"end": 29949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29725,
											"end": 29728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29746,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 29810,
											"end": 29812,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 29805,
											"end": 29808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29746,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 29746,
											"end": 29813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29746,
											"end": 29813,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 29746,
											"end": 29813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29739,
											"end": 29813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29739,
											"end": 29813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29822,
											"end": 29915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 29911,
											"end": 29914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29822,
											"end": 29915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 29822,
											"end": 29915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29822,
											"end": 29915,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 29822,
											"end": 29915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29940,
											"end": 29942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29935,
											"end": 29938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29931,
											"end": 29943,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29924,
											"end": 29943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29924,
											"end": 29943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29583,
											"end": 29949,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29583,
											"end": 29949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29583,
											"end": 29949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29583,
											"end": 29949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29955,
											"end": 30374,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 29955,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30121,
											"end": 30125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30159,
											"end": 30161,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30148,
											"end": 30157,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30144,
											"end": 30162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30136,
											"end": 30162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30136,
											"end": 30162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30208,
											"end": 30217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30202,
											"end": 30206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30198,
											"end": 30218,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 30194,
											"end": 30195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30183,
											"end": 30192,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30179,
											"end": 30196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30172,
											"end": 30219,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30236,
											"end": 30367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 30362,
											"end": 30366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30236,
											"end": 30367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 30236,
											"end": 30367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30236,
											"end": 30367,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 30236,
											"end": 30367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30228,
											"end": 30367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30228,
											"end": 30367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29955,
											"end": 30374,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29955,
											"end": 30374,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29955,
											"end": 30374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29955,
											"end": 30374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30380,
											"end": 30551,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 30380,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30520,
											"end": 30543,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F20726571756573747320746F20726566756E640000000000000000000000"
										},
										{
											"begin": 30516,
											"end": 30517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30508,
											"end": 30514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30504,
											"end": 30518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30497,
											"end": 30544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30380,
											"end": 30551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30380,
											"end": 30551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30557,
											"end": 30923,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 30557,
											"end": 30923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30699,
											"end": 30702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30720,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "703"
										},
										{
											"begin": 30784,
											"end": 30786,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 30779,
											"end": 30782,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30720,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 30720,
											"end": 30787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30720,
											"end": 30787,
											"name": "tag",
											"source": 12,
											"value": "703"
										},
										{
											"begin": 30720,
											"end": 30787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30713,
											"end": 30787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30713,
											"end": 30787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30796,
											"end": 30889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 30885,
											"end": 30888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30796,
											"end": 30889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 30796,
											"end": 30889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30796,
											"end": 30889,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 30796,
											"end": 30889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30914,
											"end": 30916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30909,
											"end": 30912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30905,
											"end": 30917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30898,
											"end": 30917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30898,
											"end": 30917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30557,
											"end": 30923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30557,
											"end": 30923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30557,
											"end": 30923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30557,
											"end": 30923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30929,
											"end": 31348,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 30929,
											"end": 31348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31095,
											"end": 31099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31133,
											"end": 31135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 31122,
											"end": 31131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31118,
											"end": 31136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31110,
											"end": 31136,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31110,
											"end": 31136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31182,
											"end": 31191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31176,
											"end": 31180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31172,
											"end": 31192,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 31168,
											"end": 31169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31157,
											"end": 31166,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31153,
											"end": 31170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31146,
											"end": 31193,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31210,
											"end": 31341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 31336,
											"end": 31340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31210,
											"end": 31341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 31210,
											"end": 31341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31210,
											"end": 31341,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 31210,
											"end": 31341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31202,
											"end": 31341,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31202,
											"end": 31341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30929,
											"end": 31348,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30929,
											"end": 31348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30929,
											"end": 31348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30929,
											"end": 31348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31503,
											"end": 31507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31541,
											"end": 31543,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 31530,
											"end": 31539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31526,
											"end": 31544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31518,
											"end": 31544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31518,
											"end": 31544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31554,
											"end": 31625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 31622,
											"end": 31623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31611,
											"end": 31620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31607,
											"end": 31624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31598,
											"end": 31604,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 31554,
											"end": 31625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 31554,
											"end": 31625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31554,
											"end": 31625,
											"name": "tag",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 31554,
											"end": 31625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31635,
											"end": 31707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 31703,
											"end": 31705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 31692,
											"end": 31701,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31688,
											"end": 31706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31679,
											"end": 31685,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 31635,
											"end": 31707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 31635,
											"end": 31707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31635,
											"end": 31707,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 31635,
											"end": 31707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31717,
											"end": 31789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 31785,
											"end": 31787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 31774,
											"end": 31783,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31770,
											"end": 31788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31761,
											"end": 31767,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 31717,
											"end": 31789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 31717,
											"end": 31789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31717,
											"end": 31789,
											"name": "tag",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 31717,
											"end": 31789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31354,
											"end": 31796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31802,
											"end": 31983,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 31802,
											"end": 31983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31942,
											"end": 31975,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 31938,
											"end": 31939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31930,
											"end": 31936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31926,
											"end": 31940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31919,
											"end": 31976,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31802,
											"end": 31983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31802,
											"end": 31983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31989,
											"end": 32355,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 31989,
											"end": 32355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32131,
											"end": 32134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32152,
											"end": 32219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 32216,
											"end": 32218,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 32211,
											"end": 32214,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32152,
											"end": 32219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 32152,
											"end": 32219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32152,
											"end": 32219,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 32152,
											"end": 32219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32145,
											"end": 32219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 32145,
											"end": 32219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32228,
											"end": 32321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 32317,
											"end": 32320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32228,
											"end": 32321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 32228,
											"end": 32321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32228,
											"end": 32321,
											"name": "tag",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 32228,
											"end": 32321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32346,
											"end": 32348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 32341,
											"end": 32344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32337,
											"end": 32349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32330,
											"end": 32349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32330,
											"end": 32349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31989,
											"end": 32355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31989,
											"end": 32355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31989,
											"end": 32355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31989,
											"end": 32355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32361,
											"end": 32780,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 32361,
											"end": 32780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32527,
											"end": 32531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32565,
											"end": 32567,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 32554,
											"end": 32563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32550,
											"end": 32568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32542,
											"end": 32568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32542,
											"end": 32568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32614,
											"end": 32623,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 32608,
											"end": 32612,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 32604,
											"end": 32624,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 32600,
											"end": 32601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32589,
											"end": 32598,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32585,
											"end": 32602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32578,
											"end": 32625,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32642,
											"end": 32773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 32768,
											"end": 32772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 32642,
											"end": 32773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 32642,
											"end": 32773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32642,
											"end": 32773,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 32642,
											"end": 32773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32634,
											"end": 32773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32634,
											"end": 32773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32361,
											"end": 32780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 32361,
											"end": 32780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32361,
											"end": 32780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32361,
											"end": 32780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32907,
											"end": 32911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32945,
											"end": 32947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 32934,
											"end": 32943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32930,
											"end": 32948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32922,
											"end": 32948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32922,
											"end": 32948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32958,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 33026,
											"end": 33027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33015,
											"end": 33024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33011,
											"end": 33028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33002,
											"end": 33008,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 32958,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 32958,
											"end": 33029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32958,
											"end": 33029,
											"name": "tag",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 32958,
											"end": 33029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33039,
											"end": 33111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 33107,
											"end": 33109,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33096,
											"end": 33105,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33092,
											"end": 33110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33083,
											"end": 33089,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 33039,
											"end": 33111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 33039,
											"end": 33111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33039,
											"end": 33111,
											"name": "tag",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 33039,
											"end": 33111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32786,
											"end": 33118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33245,
											"end": 33249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33283,
											"end": 33285,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 33272,
											"end": 33281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33268,
											"end": 33286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33260,
											"end": 33286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33260,
											"end": 33286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33296,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 33364,
											"end": 33365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33353,
											"end": 33362,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33349,
											"end": 33366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33340,
											"end": 33346,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 33296,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 33296,
											"end": 33367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33296,
											"end": 33367,
											"name": "tag",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 33296,
											"end": 33367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33377,
											"end": 33449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 33445,
											"end": 33447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33434,
											"end": 33443,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33430,
											"end": 33448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33421,
											"end": 33427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 33377,
											"end": 33449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 33377,
											"end": 33449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33377,
											"end": 33449,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 33377,
											"end": 33449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33124,
											"end": 33456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"final project/General API Marketplace Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addAdmin(address)": "70480275",
							"apiIdCounter()": "099952c8",
							"apis(uint256)": "af6e5689",
							"getRemainingRequests(address,uint256)": "400bb18d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getSubscriptionStatus(address,uint256)": "0cd2c460",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"owner()": "8da5cb5b",
							"purchaseAPIAccess(uint256,uint256)": "6d177a00",
							"purchaseSubscription(uint256,uint256)": "8d1d44a9",
							"refundUnusedRequests(uint256)": "bc39c0ef",
							"registerAPI(string,uint256)": "838c0557",
							"removeAdmin(address)": "1785f53c",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setAPIStatus(uint256,bool)": "24cce39f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"useAPIAccess(uint256)": "8e04d8d8",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requests\",\"type\":\"uint256\"}],\"name\":\"APIAccessPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"}],\"name\":\"APICallMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerRequest\",\"type\":\"uint256\"}],\"name\":\"APIRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"APIStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SubscriptionPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apiIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apis\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchases\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"getRemainingRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"getSubscriptionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requests\",\"type\":\"uint256\"}],\"name\":\"purchaseAPIAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"purchaseSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"refundUnusedRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerRequest\",\"type\":\"uint256\"}],\"name\":\"registerAPI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setAPIStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"useAPIAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Marketplace where users can buy API access with tokens\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"General API Marketplace Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"final project/General API Marketplace Token.sol\":\"GeneralApiMarketplaceToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"final project/General API Marketplace Token.sol\":{\"keccak256\":\"0x7bf8c054451dce8a7b7cf9cdc17ffeafa4ed60eef9dc62b08ef358d501952275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a40a8aa60daeb4ad0f05e15f7c62312aac13079592c0a8aad95395e4522d81b\",\"dweb:/ipfs/QmY1MbuYJPiSwtxCmCyNZFu7aLALWv3CQM5jcMS8NhEqfF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 479,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1106,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1131,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "apiIdCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1136,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "apis",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(APIAccess)1120_storage)"
							},
							{
								"astId": 1141,
								"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
								"label": "userUsages",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(UserUsage)1129_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserUsage)1129_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)",
								"numberOfBytes": "32",
								"value": "t_struct(UserUsage)1129_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(APIAccess)1120_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess)",
								"numberOfBytes": "32",
								"value": "t_struct(APIAccess)1120_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(APIAccess)1120_storage": {
								"encoding": "inplace",
								"label": "struct GeneralApiMarketplaceToken.APIAccess",
								"members": [
									{
										"astId": 1113,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1115,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "pricePerRequest",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1117,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "totalPurchases",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1119,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "isActive",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserUsage)1129_storage": {
								"encoding": "inplace",
								"label": "struct GeneralApiMarketplaceToken.UserUsage",
								"members": [
									{
										"astId": 1124,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "remainingRequests",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 1128,
										"contract": "final project/General API Marketplace Token.sol:GeneralApiMarketplaceToken",
										"label": "subscriptionExpiry",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"ERC165": [
							1074
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1051,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1075,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1074,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1074,
								1086,
								378,
								1050
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1073
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC165": [
							1086
						],
						"IERC20": [
							611
						]
					},
					"id": 461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 469,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 465,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 611,
										"src": "590:6:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "598:7:2"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460,
								1086,
								611
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 460,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 460,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 460,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 460,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 460,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 460,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 461,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 465,
							"sourceUnit": 1087,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 463,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 612,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 474,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 477,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 475,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 479,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 533,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 493,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 498,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 503,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 533,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 533,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 528,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 526,
												"id": 530,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 533,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 534,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 545,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 554,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 611,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 611,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 611,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 611,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 611,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 611,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"SafeERC20": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 612,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 614,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 461,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 616,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 460,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 623,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 632,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 649,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 645,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1020,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 610,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 675,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 676,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 678,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 671,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1020,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2548:139:7",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2558:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2612:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 696,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2581:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 588,
														"src": "2581:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2643:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 707,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2659:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2674:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2630:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:7"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "2493:6:7"
													},
													"referencedDeclaration": 611,
													"src": "2493:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2507:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:7"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:7"
									},
									"scope": 1020,
									"src": "2462:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3453:370:7",
										"statements": [
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:7",
												"statements": [
													{
														"assignments": [
															726
														],
														"declarations": [
															{
																"constant": false,
																"id": 726,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 755,
																"src": "3487:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 735,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 731,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 729,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3545:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 727,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3514:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 588,
																"src": "3514:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 736,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3571:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 737,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "3590:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 746,
														"nodeType": "IfStatement",
														"src": "3567:160:7",
														"trueBody": {
															"id": 745,
															"nodeType": "Block",
															"src": "3609:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 740,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "3667:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 741,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "3676:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 742,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 722,
																				"src": "3694:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 739,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "3634:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 744,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 748,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3753:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 749,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3760:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 750,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3769:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 751,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "3788:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 747,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "3740:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3386:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "3386:6:7"
													},
													"referencedDeclaration": 611,
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3417:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:7"
									},
									"scope": 1020,
									"src": "3355:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4477:303:7",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "4487:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 768,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4530:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 598,
															"src": "4530:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 774,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "4546:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "4555:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 776,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 770,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:7"
											},
											{
												"condition": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 780,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4602:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 781,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4609:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 779,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "4578:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "4573:201:7",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "4624:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4658:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 788,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "4680:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$611",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 598,
																				"src": "4680:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 790,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 763,
																						"src": "4696:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 792,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 786,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 784,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4638:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 795,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 797,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4743:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 798,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "4750:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 796,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4723:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4422:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "4422:6:7"
													},
													"referencedDeclaration": 611,
													"src": "4422:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4436:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4453:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:7"
									},
									"scope": 1020,
									"src": "4400:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "5227:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 817,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "5241:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5350:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "5354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 833,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "5361:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "5328:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "5328:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 844,
													"nodeType": "IfStatement",
													"src": "5323:117:7",
													"trueBody": {
														"id": 843,
														"nodeType": "Block",
														"src": "5368:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 839,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 808,
																					"src": "5422:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 837,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 836,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5389:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 842,
																"nodeType": "RevertStatement",
																"src": "5382:47:7"
															}
														]
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5237:203:7",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "5262:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 823,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5289:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 824,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "5296:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "5300:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 822,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5276:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5156:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5156:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5172:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5184:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5199:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:7"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:7"
									},
									"scope": 1020,
									"src": "5124:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "5965:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 862,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "5979:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6102:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 878,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "6108:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 879,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6112:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "6119:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6076:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 437,
																"src": "6076:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 891,
													"nodeType": "IfStatement",
													"src": "6071:127:7",
													"trueBody": {
														"id": 890,
														"nodeType": "Block",
														"src": "6126:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 886,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "6180:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 884,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 883,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "6147:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 889,
																"nodeType": "RevertStatement",
																"src": "6140:47:7"
															}
														]
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "5975:223:7",
												"trueBody": {
													"id": 874,
													"nodeType": "Block",
													"src": "6000:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 868,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "6031:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 869,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "6038:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 870,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "6044:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 871,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "6048:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6014:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 873,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5843:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5843:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5843:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5867:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5889:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5932:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:7"
									},
									"scope": 1020,
									"src": "5798:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "6971:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 907,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6985:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 921,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "7093:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "7097:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 923,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "7104:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 919,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "7072:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "7072:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 934,
													"nodeType": "IfStatement",
													"src": "7067:116:7",
													"trueBody": {
														"id": 933,
														"nodeType": "Block",
														"src": "7111:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 929,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "7165:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 927,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 926,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "7132:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 932,
																"nodeType": "RevertStatement",
																"src": "7125:47:7"
															}
														]
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "6981:202:7",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "7006:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "7033:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 914,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "7040:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "7044:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 912,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "7020:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6900:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "6900:8:7"
													},
													"referencedDeclaration": 460,
													"src": "6900:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6916:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6928:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6943:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:7"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:7"
									},
									"scope": 1020,
									"src": "6869:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "7756:650:7",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7766:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:7"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7794:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:7",
													"nodeType": "YulBlock",
													"src": "7848:396:7",
													"statements": [
														{
															"nativeSrc": "7862:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:7"
																		},
																		"nativeSrc": "7882:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:7"
																		},
																		"nativeSrc": "7899:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:7"
																		},
																		"nativeSrc": "7916:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:7"
																},
																"nativeSrc": "7877:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:7",
																"nodeType": "YulBlock",
																"src": "7998:157:7",
																"statements": [
																	{
																		"nativeSrc": "8016:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:7"
																			},
																			"nativeSrc": "8027:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:7"
																					},
																					"nativeSrc": "8078:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:7"
																			},
																			"nativeSrc": "8055:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:7"
																		},
																		"nativeSrc": "8055:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:7"
																					},
																					"nativeSrc": "8124:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:7"
																			},
																			"nativeSrc": "8112:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:7"
																		},
																		"nativeSrc": "8112:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:7"
																},
																"nativeSrc": "7982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:7"
															},
															"nativeSrc": "7979:176:7",
															"nodeType": "YulIf",
															"src": "7979:176:7"
														},
														{
															"nativeSrc": "8168:30:7",
															"nodeType": "YulAssignment",
															"src": "8168:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:7"
																},
																"nativeSrc": "8182:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:7"
																}
															]
														},
														{
															"nativeSrc": "8211:23:7",
															"nodeType": "YulAssignment",
															"src": "8211:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:7"
																},
																"nativeSrc": "8226:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:7",
														"valueSize": 1
													},
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:7",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:7",
														"valueSize": 1
													},
													{
														"declaration": 950,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:7",
														"valueSize": 1
													},
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 952,
												"nodeType": "InlineAssembly",
												"src": "7823:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 953,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "8258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 964,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "8310:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8284:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "8254:146:7",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "8328:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 971,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "8382:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8349:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "8342:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7715:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "7715:6:7"
													},
													"referencedDeclaration": 611,
													"src": "7715:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7729:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:7"
									},
									"scope": 1020,
									"src": "7686:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8997:391:7",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9007:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:7"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9029:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:7"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9057:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:7",
													"nodeType": "YulBlock",
													"src": "9111:174:7",
													"statements": [
														{
															"nativeSrc": "9125:71:7",
															"nodeType": "YulAssignment",
															"src": "9125:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:7"
																		},
																		"nativeSrc": "9141:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:7"
																		},
																		"nativeSrc": "9158:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:7"
																		},
																		"nativeSrc": "9175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:7"
																},
																"nativeSrc": "9136:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:7"
																}
															]
														},
														{
															"nativeSrc": "9209:30:7",
															"nodeType": "YulAssignment",
															"src": "9209:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:7"
																},
																"nativeSrc": "9223:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:7"
																}
															]
														},
														{
															"nativeSrc": "9252:23:7",
															"nodeType": "YulAssignment",
															"src": "9252:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:7"
																},
																"nativeSrc": "9267:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:7",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:7",
														"valueSize": 1
													},
													{
														"declaration": 993,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:7",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:7",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 998,
												"nodeType": "InlineAssembly",
												"src": "9086:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "9301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "9313:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1011,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "9364:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1005,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "9339:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1003,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 988,
												"id": 1017,
												"nodeType": "Return",
												"src": "9294:87:7"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8941:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "8941:6:7"
													},
													"referencedDeclaration": 611,
													"src": "8941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8955:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8991:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:7"
									},
									"scope": 1020,
									"src": "8908:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1021,
							"src": "698:8692:7",
							"usedErrors": [
								623,
								632
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1050,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1037,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1039,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1050,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1045,
												"id": 1047,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1050,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1051,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1074
						],
						"IERC165": [
							1086
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1075,
							"sourceUnit": 1087,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "688:7:9"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074,
								1086
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1067,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1066,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1086",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1071,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1074,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1075,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1086,
							"linearizedBaseContracts": [
								1086
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1086,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"final project/General API Marketplace Token.sol": {
				"ast": {
					"absolutePath": "final project/General API Marketplace Token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"ERC165": [
							1074
						],
						"GeneralApiMarketplaceToken": [
							1738
						],
						"IAccessControl": [
							378
						],
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"ReentrancyGuard": [
							533
						],
						"SafeERC20": [
							1020
						]
					},
					"id": 1739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 612,
							"src": "68:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 1021,
							"src": "126:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 534,
							"src": "193:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 296,
							"src": "257:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"476:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "476:15:11"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "476:15:11"
								},
								{
									"baseName": {
										"id": 1096,
										"name": "AccessControl",
										"nameLocations": [
											"493:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "493:13:11"
									},
									"id": 1097,
									"nodeType": "InheritanceSpecifier",
									"src": "493:13:11"
								}
							],
							"canonicalName": "GeneralApiMarketplaceToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1093,
								"nodeType": "StructuredDocumentation",
								"src": "319:113:11",
								"text": " @title General API Marketplace Token\n @dev Marketplace where users can buy API access with tokens"
							},
							"fullyImplemented": true,
							"id": 1738,
							"linearizedBaseContracts": [
								1738,
								295,
								1074,
								1086,
								378,
								1050,
								533
							],
							"name": "GeneralApiMarketplaceToken",
							"nameLocation": "446:26:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1101,
									"libraryName": {
										"id": 1098,
										"name": "SafeERC20",
										"nameLocations": [
											"520:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "520:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "514:27:11",
									"typeName": {
										"id": 1100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1099,
											"name": "IERC20",
											"nameLocations": [
												"534:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "534:6:11"
										},
										"referencedDeclaration": 611,
										"src": "534:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1104,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "573:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "549:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$611",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1103,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1102,
											"name": "IERC20",
											"nameLocations": [
												"549:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "549:6:11"
										},
										"referencedDeclaration": 611,
										"src": "549:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1106,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "600:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "585:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "585:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1111,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "636:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "612:60:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1107,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1109,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "659:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1108,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "649:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "649:23:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GeneralApiMarketplaceToken.APIAccess",
									"id": 1120,
									"members": [
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "716:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "709:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1112,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "709:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "pricePerRequest",
											"nameLocation": "739:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "731:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "731:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "totalPurchases",
											"nameLocation": "773:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "765:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "765:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "803:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "798:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1118,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "798:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "APIAccess",
									"nameLocation": "688:9:11",
									"nodeType": "StructDefinition",
									"scope": 1738,
									"src": "681:138:11",
									"visibility": "public"
								},
								{
									"canonicalName": "GeneralApiMarketplaceToken.UserUsage",
									"id": 1129,
									"members": [
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "remainingRequests",
											"nameLocation": "883:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 1129,
											"src": "855:45:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1123,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "855:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1128,
											"mutability": "mutable",
											"name": "subscriptionExpiry",
											"nameLocation": "939:18:11",
											"nodeType": "VariableDeclaration",
											"scope": 1129,
											"src": "911:46:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1127,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "911:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserUsage",
									"nameLocation": "834:9:11",
									"nodeType": "StructDefinition",
									"scope": 1738,
									"src": "827:138:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "099952c8",
									"id": 1131,
									"mutability": "mutable",
									"name": "apiIdCounter",
									"nameLocation": "988:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "973:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af6e5689",
									"id": 1136,
									"mutability": "mutable",
									"name": "apis",
									"nameLocation": "1044:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "1007:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
										"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess)"
									},
									"typeName": {
										"id": 1135,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1132,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1015:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1007:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
											"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1134,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1133,
												"name": "APIAccess",
												"nameLocations": [
													"1026:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "1026:9:11"
											},
											"referencedDeclaration": 1120,
											"src": "1026:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
												"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1141,
									"mutability": "mutable",
									"name": "userUsages",
									"nameLocation": "1093:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1738,
									"src": "1055:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
										"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)"
									},
									"typeName": {
										"id": 1140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1137,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1063:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1055:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
											"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1139,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1138,
												"name": "UserUsage",
												"nameLocations": [
													"1074:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1129,
												"src": "1074:9:11"
											},
											"referencedDeclaration": 1129,
											"src": "1074:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserUsage_$1129_storage_ptr",
												"typeString": "struct GeneralApiMarketplaceToken.UserUsage"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "708b6915aad37cd1d491e64bf7a3b53c298499411a09f4b2315e30da638b5de2",
									"id": 1149,
									"name": "APIRegistered",
									"nameLocation": "1118:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1148:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1132:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1162:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1155:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1155:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"mutability": "mutable",
												"name": "pricePerRequest",
												"nameLocation": "1176:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1168:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:61:11"
									},
									"src": "1112:81:11"
								},
								{
									"anonymous": false,
									"eventSelector": "651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b",
									"id": 1157,
									"name": "APIAccessPurchased",
									"nameLocation": "1205:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1240:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1224:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1262:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1246:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "requests",
												"nameLocation": "1277:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1269:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:63:11"
									},
									"src": "1199:88:11"
								},
								{
									"anonymous": false,
									"eventSelector": "7598affe5bb8b864e84f0b819f6b046054c8f0d6771e8ae086411b5dd2a8bc12",
									"id": 1163,
									"name": "APICallMade",
									"nameLocation": "1299:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1327:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1311:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1349:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1333:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:45:11"
									},
									"src": "1293:63:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b",
									"id": 1169,
									"name": "TokensWithdrawn",
									"nameLocation": "1368:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1400:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1384:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1415:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1407:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:39:11"
									},
									"src": "1362:61:11"
								},
								{
									"anonymous": false,
									"eventSelector": "33446694866e808b8c5250f584345f59832e7a6f29e30bf7a8ead78441940d9e",
									"id": 1175,
									"name": "APIStatusUpdated",
									"nameLocation": "1435:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1468:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1452:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "1480:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1475:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1475:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:38:11"
									},
									"src": "1429:61:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03",
									"id": 1183,
									"name": "SubscriptionPurchased",
									"nameLocation": "1502:21:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1540:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1524:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1562:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1546:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1577:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1569:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1523:63:11"
									},
									"src": "1496:91:11"
								},
								{
									"anonymous": false,
									"eventSelector": "93c496f36ecab5f5583f216646cac3acb12a63aeacddb1a9251ceb81f0ee36e7",
									"id": 1191,
									"name": "RefundIssued",
									"nameLocation": "1599:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1628:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1612:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1650:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1634:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1665:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1657:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:61:11"
									},
									"src": "1593:80:11"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "1708:221:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1200,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "1731:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1723:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1723:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1723:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1742:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1742:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1723:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1754:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1715:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1715:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "1715:63:11"
											},
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1785:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1211,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "1793:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"src": "1785:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "1785:14:11"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1214,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1806:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1814:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1818:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1814:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1806:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "1806:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1220,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1844:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1864:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1868:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1864:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1219,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1833:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1833:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1833:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1894:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1906:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1910:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1906:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1225,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1883:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "1883:34:11"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1700:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1693:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1192,
														"name": "IERC20",
														"nameLocations": [
															"1693:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1693:6:11"
													},
													"referencedDeclaration": 611,
													"src": "1693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:15:11"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:11"
									},
									"scope": 1738,
									"src": "1681:248:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "1960:106:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1236,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1987:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1237,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2007:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2011:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2007:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1235,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1979:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1979:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 1234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1971:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "1971:75:11"
											},
											{
												"id": 1243,
												"nodeType": "PlaceholderStatement",
												"src": "2057:1:11"
											}
										]
									},
									"id": 1245,
									"name": "onlyOwner",
									"nameLocation": "1948:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:2:11"
									},
									"src": "1939:127:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "2095:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1249,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "2122:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1250,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2134:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2138:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2134:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1248,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2114:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2114:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2147:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2106:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "2106:66:11"
											},
											{
												"id": 1256,
												"nodeType": "PlaceholderStatement",
												"src": "2183:1:11"
											}
										]
									},
									"id": 1258,
									"name": "onlyAdmin",
									"nameLocation": "2083:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:2:11"
									},
									"src": "2074:118:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "2253:48:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2274:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1267,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "2286:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2264:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2264:29:11"
											}
										]
									},
									"functionSelector": "70480275",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "onlyOwner",
												"nameLocations": [
													"2243:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1245,
												"src": "2243:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2243:9:11"
										}
									],
									"name": "addAdmin",
									"nameLocation": "2209:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "2226:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "2218:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:16:11"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2253:0:11"
									},
									"scope": 1738,
									"src": "2200:101:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "2365:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2387:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1280,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2399:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1278,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2376:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2376:30:11"
											}
										]
									},
									"functionSelector": "1785f53c",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1275,
												"name": "onlyOwner",
												"nameLocations": [
													"2355:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1245,
												"src": "2355:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2355:9:11"
										}
									],
									"name": "removeAdmin",
									"nameLocation": "2318:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "2338:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2330:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:16:11"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2365:0:11"
									},
									"scope": 1738,
									"src": "2309:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2509:454:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1296,
																			"name": "_name",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "2534:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2528:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1294,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2528:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2528:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2541:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2528:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2550:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2528:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206e616d652063616e6e6f7420626520656d707479",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2553:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																"typeString": "literal_string \"API name cannot be empty\""
															},
															"value": "API name cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																"typeString": "literal_string \"API name cannot be empty\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2520:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2520:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "2520:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "_pricePerRequest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "2599:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2618:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2599:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365207065722072657175657374206d7573742062652067726561746572207468616e207a65726f",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2621:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e",
																"typeString": "literal_string \"Price per request must be greater than zero\""
															},
															"value": "Price per request must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9331f25ce0ebf850a6a6fba9a6d14444d171963b705da9ddc67838ee7980033e",
																"typeString": "literal_string \"Price per request must be greater than zero\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2591:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2591:76:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2591:76:11"
											},
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "apiId",
														"nameLocation": "2688:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "2680:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"initialValue": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2696:14:11",
													"subExpression": {
														"id": 1313,
														"name": "apiIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2696:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:30:11"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1316,
															"name": "apis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "2721:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
																"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
															}
														},
														"id": 1318,
														"indexExpression": {
															"id": 1317,
															"name": "apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2726:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2721:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
															"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1320,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "2766:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1321,
																"name": "_pricePerRequest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "2803:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2850:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1319,
															"name": "APIAccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "2735:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_APIAccess_$1120_storage_ptr_$",
																"typeString": "type(struct GeneralApiMarketplaceToken.APIAccess storage pointer)"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2760:4:11",
															"2786:15:11",
															"2834:14:11",
															"2866:8:11"
														],
														"names": [
															"name",
															"pricePerRequest",
															"totalPurchases",
															"isActive"
														],
														"nodeType": "FunctionCall",
														"src": "2735:157:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_APIAccess_$1120_memory_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.APIAccess memory"
														}
													},
													"src": "2721:171:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
														"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "2721:171:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1328,
															"name": "apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2924:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1329,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "2931:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1330,
															"name": "_pricePerRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "2938:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1327,
														"name": "APIRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2910:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2910:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "EmitStatement",
												"src": "2905:50:11"
											}
										]
									},
									"functionSelector": "838c0557",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1290,
												"name": "onlyAdmin",
												"nameLocations": [
													"2499:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1258,
												"src": "2499:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2499:9:11"
										}
									],
									"name": "registerAPI",
									"nameLocation": "2431:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2457:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2443:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2443:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_pricePerRequest",
												"nameLocation": "2472:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2464:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:47:11"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2509:0:11"
									},
									"scope": 1738,
									"src": "2422:541:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "3044:168:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1344,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "3063:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1345,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "3072:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3063:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3086:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3055:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "3055:52:11"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1350,
																"name": "apis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "3118:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
																	"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
																}
															},
															"id": 1352,
															"indexExpression": {
																"id": 1351,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "3123:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3118:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3131:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "3118:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1354,
														"name": "_isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3142:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3118:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "3118:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1358,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "3186:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1359,
															"name": "_isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3194:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1357,
														"name": "APIStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3169:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3169:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "EmitStatement",
												"src": "3164:40:11"
											}
										]
									},
									"functionSelector": "24cce39f",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyAdmin",
												"nameLocations": [
													"3034:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1258,
												"src": "3034:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3034:9:11"
										}
									],
									"name": "setAPIStatus",
									"nameLocation": "2980:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "3001:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2993:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_isActive",
												"nameLocation": "3014:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3009:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3009:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2992:32:11"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3044:0:11"
									},
									"scope": 1738,
									"src": "2971:241:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "3291:657:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "3310:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1372,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "3319:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3310:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3333:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3302:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "3302:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1378,
																"name": "_requests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "3373:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3385:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3373:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f66207265717565737473206d7573742062652067726561746572207468616e207a65726f",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3388:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731",
																"typeString": "literal_string \"Number of requests must be greater than zero\""
															},
															"value": "Number of requests must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ca70da12c91d3197d3a41554b2ea7141108820113dcd33f86c39eec9bfe6731",
																"typeString": "literal_string \"Number of requests must be greater than zero\""
															}
														],
														"id": 1377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3365:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "3365:70:11"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "3466:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1449,
														"src": "3448:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
														},
														"typeName": {
															"id": 1385,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1384,
																"name": "APIAccess",
																"nameLocations": [
																	"3448:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "3448:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "3448:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"baseExpression": {
														"id": 1387,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3472:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
														}
													},
													"id": 1389,
													"indexExpression": {
														"id": 1388,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3477:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3472:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
														"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3448:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1392,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "3503:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3507:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "3503:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3517:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3495:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "3495:42:11"
											},
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "totalCost",
														"nameLocation": "3558:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1449,
														"src": "3550:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1397,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3550:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1399,
															"name": "api",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3570:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3574:15:11",
														"memberName": "pricePerRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1115,
														"src": "3570:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1401,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3592:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3570:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3550:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "totalCost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "3620:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1406,
																	"name": "_requests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "3632:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3620:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1408,
																	"name": "api",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "3645:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																		"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3649:15:11",
																"memberName": "pricePerRequest",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1115,
																"src": "3645:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3620:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f766572666c6f77206465746563746564",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3666:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
																"typeString": "literal_string \"Overflow detected\""
															},
															"value": "Overflow detected"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
																"typeString": "literal_string \"Overflow detected\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3612:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3612:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "3612:74:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1417,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3722:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3726:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3722:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1421,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3742:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3734:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3734:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3734:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "totalCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3749:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1414,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "3699:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3705:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "3699:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3699:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "3699:60:11"
											},
											{
												"expression": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1426,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "3770:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1429,
																"indexExpression": {
																	"expression": {
																		"id": 1427,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3781:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3785:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3781:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3770:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3793:17:11",
															"memberName": "remainingRequests",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "3770:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1432,
														"indexExpression": {
															"id": 1431,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "3811:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3770:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1433,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3822:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3770:61:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "3770:61:11"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1436,
															"name": "api",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "3842:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3846:14:11",
														"memberName": "totalPurchases",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "3842:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1439,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3864:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3842:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "3842:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1443,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3910:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3914:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3910:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "3922:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1446,
															"name": "_requests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "3930:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1442,
														"name": "APIAccessPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "3891:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "EmitStatement",
												"src": "3886:54:11"
											}
										]
									},
									"functionSelector": "6d177a00",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseAPIAccess",
									"nameLocation": "3229:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "3255:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3247:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_requests",
												"nameLocation": "3271:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3263:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:35:11"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3291:0:11"
									},
									"scope": 1738,
									"src": "3220:728:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "4030:470:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "4049:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1459,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "4058:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4049:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4041:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4041:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "4041:52:11"
											},
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "4124:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "4106:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
														},
														"typeName": {
															"id": 1465,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1464,
																"name": "APIAccess",
																"nameLocations": [
																	"4106:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "4106:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "4106:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1470,
												"initialValue": {
													"baseExpression": {
														"id": 1467,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4130:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
														}
													},
													"id": 1469,
													"indexExpression": {
														"id": 1468,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "4135:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4130:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
														"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4106:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1472,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "4161:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4165:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "4161:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4175:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "4153:42:11"
											},
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "totalCost",
														"nameLocation": "4216:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "4208:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1479,
															"name": "api",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4228:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4232:15:11",
														"memberName": "pricePerRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1115,
														"src": "4228:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1481,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "4250:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4228:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1487,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4293:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4297:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4293:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4313:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4305:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4305:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4305:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "totalCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4320:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1484,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "4270:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4276:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "4270:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "4270:60:11"
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1496,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "4343:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1499,
																"indexExpression": {
																	"expression": {
																		"id": 1497,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4354:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4358:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4354:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4343:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4366:18:11",
															"memberName": "subscriptionExpiry",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1128,
															"src": "4343:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1502,
														"indexExpression": {
															"id": 1501,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4385:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4343:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1503,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4395:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4401:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4395:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1505,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4413:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4395:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4343:79:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "4343:79:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4462:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4466:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4462:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4474:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1513,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4482:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1509,
														"name": "SubscriptionPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4440:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4440:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "EmitStatement",
												"src": "4435:57:11"
											}
										]
									},
									"functionSelector": "8d1d44a9",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseSubscription",
									"nameLocation": "3965:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "3994:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "3986:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "4010:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4002:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:35:11"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4030:0:11"
									},
									"scope": 1738,
									"src": "3956:544:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "4555:429:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1523,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "4574:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1524,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "4583:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4574:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4597:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4566:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "4566:52:11"
											},
											{
												"assignments": [
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "4649:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "4631:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
														},
														"typeName": {
															"id": 1530,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1529,
																"name": "APIAccess",
																"nameLocations": [
																	"4631:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "4631:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "4631:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"baseExpression": {
														"id": 1532,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4655:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
														}
													},
													"id": 1534,
													"indexExpression": {
														"id": 1533,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4660:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4655:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
														"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4631:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1537,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "4686:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_APIAccess_$1120_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage pointer"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4690:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "4686:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4700:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4678:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4678:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "4678:42:11"
											},
											{
												"assignments": [
													1543
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "4741:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "4733:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4733:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1544,
																"name": "userUsages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "4753:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																	"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																}
															},
															"id": 1547,
															"indexExpression": {
																"expression": {
																	"id": 1545,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4764:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4768:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4764:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4753:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4776:17:11",
														"memberName": "remainingRequests",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "4753:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1550,
													"indexExpression": {
														"id": 1549,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4794:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4753:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4733:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1553,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "4820:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4832:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4820:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072656d61696e696e6720415049207265717565737473",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4835:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198",
																"typeString": "literal_string \"No remaining API requests\""
															},
															"value": "No remaining API requests"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7252b1bbf0906eb13980d9169cb42849ceafbd002cb0a95eb6a530f30a27198",
																"typeString": "literal_string \"No remaining API requests\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4812:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4812:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "4812:51:11"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1559,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "4876:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1562,
																"indexExpression": {
																	"expression": {
																		"id": 1560,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4887:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4891:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4887:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4876:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4899:17:11",
															"memberName": "remainingRequests",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "4876:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1565,
														"indexExpression": {
															"id": 1564,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "4917:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4876:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4928:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4876:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "4876:53:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1570,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4957:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4961:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4957:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1572,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "4969:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "APICallMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "4945:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4945:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "EmitStatement",
												"src": "4940:36:11"
											}
										]
									},
									"functionSelector": "8e04d8d8",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "useAPIAccess",
									"nameLocation": "4517:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "4538:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "4530:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:16:11"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4555:0:11"
									},
									"scope": 1738,
									"src": "4508:476:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "5050:217:11",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5069:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "5061:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5061:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1592,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1589,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5103:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1738",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																],
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5095:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5095:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1585,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5079:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5085:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "5079:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5079:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5061:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1594,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "5128:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5138:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5128:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5120:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "5120:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1603,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "5197:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "5204:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1600,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5178:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5184:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "5178:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "5178:34:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1608,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "5244:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1609,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "5251:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1607,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "5228:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "EmitStatement",
												"src": "5223:36:11"
											}
										]
									},
									"functionSelector": "8d8f2adb",
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "onlyOwner",
												"nameLocations": [
													"5027:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1245,
												"src": "5027:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5027:9:11"
										},
										{
											"id": 1581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1580,
												"name": "nonReentrant",
												"nameLocations": [
													"5037:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "5037:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5037:12:11"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "5001:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5015:2:11"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5050:0:11"
									},
									"scope": 1738,
									"src": "4992:275:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "5330:557:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1619,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "5349:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1620,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "5358:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5349:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5372:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5341:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "5341:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5412:22:11",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1626,
																		"name": "apis",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "5413:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
																			"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
																		}
																	},
																	"id": 1628,
																	"indexExpression": {
																		"id": 1627,
																		"name": "_apiId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "5418:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5413:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
																		"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5426:8:11",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1119,
																"src": "5413:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973207374696c6c20616374697665",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb",
																"typeString": "literal_string \"API is still active\""
															},
															"value": "API is still active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_077235130fd0b769f52b658efbb0fcd4ea369f52ce9b6f01cf631ba1ec3233fb",
																"typeString": "literal_string \"API is still active\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5404:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "5404:54:11"
											},
											{
												"assignments": [
													1635
												],
												"declarations": [
													{
														"constant": false,
														"id": 1635,
														"mutability": "mutable",
														"name": "remainingRequests",
														"nameLocation": "5479:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1685,
														"src": "5471:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5471:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1643,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1636,
																"name": "userUsages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "5499:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																	"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																}
															},
															"id": 1639,
															"indexExpression": {
																"expression": {
																	"id": 1637,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5510:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5514:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5510:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5499:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5522:17:11",
														"memberName": "remainingRequests",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "5499:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1642,
													"indexExpression": {
														"id": 1641,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "5540:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5499:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5471:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1645,
																"name": "remainingRequests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "5566:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5586:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5566:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20726571756573747320746f20726566756e64",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5589:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a",
																"typeString": "literal_string \"No requests to refund\""
															},
															"value": "No requests to refund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73514e5d0ea0c019e91a4d2746857709403cbf24b03cd8ab93f13e2da47d898a",
																"typeString": "literal_string \"No requests to refund\""
															}
														],
														"id": 1644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5558:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5558:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "5558:55:11"
											},
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "5634:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1685,
														"src": "5626:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5626:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "remainingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "5649:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1654,
																"name": "apis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "5669:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_APIAccess_$1120_storage_$",
																	"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.APIAccess storage ref)"
																}
															},
															"id": 1656,
															"indexExpression": {
																"id": 1655,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "5674:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5669:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_APIAccess_$1120_storage",
																"typeString": "struct GeneralApiMarketplaceToken.APIAccess storage ref"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5682:15:11",
														"memberName": "pricePerRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1115,
														"src": "5669:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5649:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5626:71:11"
											},
											{
												"expression": {
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1660,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "5708:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1663,
																"indexExpression": {
																	"expression": {
																		"id": 1661,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5719:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5723:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5719:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5708:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5731:17:11",
															"memberName": "remainingRequests",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "5708:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1666,
														"indexExpression": {
															"id": 1665,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "5749:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5708:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5759:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5708:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "5708:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1673,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5792:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5796:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5792:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "5804:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5773:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5779:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "5773:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "5773:44:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5846:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5850:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5846:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1681,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "5858:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1682,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "5866:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "RefundIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "5833:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5833:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "EmitStatement",
												"src": "5828:51:11"
											}
										]
									},
									"functionSelector": "bc39c0ef",
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refundUnusedRequests",
									"nameLocation": "5284:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "5313:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "5305:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:16:11"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5330:0:11"
									},
									"scope": 1738,
									"src": "5275:612:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "5988:132:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "6007:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1697,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "6016:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6007:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6030:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "5999:52:11"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1702,
																"name": "userUsages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "6069:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																	"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																}
															},
															"id": 1704,
															"indexExpression": {
																"id": 1703,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "6080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6069:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6087:17:11",
														"memberName": "remainingRequests",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "6069:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1707,
													"indexExpression": {
														"id": 1706,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "6105:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6069:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1708,
												"nodeType": "Return",
												"src": "6062:50:11"
											}
										]
									},
									"functionSelector": "400bb18d",
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingRequests",
									"nameLocation": "5904:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5933:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "5925:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "5948:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "5940:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5924:31:11"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "5979:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:9:11"
									},
									"scope": 1738,
									"src": "5895:225:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "6219:152:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "6238:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1721,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "6247:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6238:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6261:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6230:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6230:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "6230:52:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1726,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6300:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6306:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6300:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1728,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "6319:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1129_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1730,
																"indexExpression": {
																	"id": 1729,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "6330:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6319:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1129_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6337:18:11",
															"memberName": "subscriptionExpiry",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1128,
															"src": "6319:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1732,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "6356:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6319:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6300:63:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1718,
												"id": 1735,
												"nodeType": "Return",
												"src": "6293:70:11"
											}
										]
									},
									"functionSelector": "0cd2c460",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscriptionStatus",
									"nameLocation": "6137:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6167:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "6159:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6159:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "6182:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "6174:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6158:31:11"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "6213:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6213:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6212:6:11"
									},
									"scope": 1738,
									"src": "6128:243:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1739,
							"src": "437:5937:11",
							"usedErrors": [
								305,
								308,
								623
							],
							"usedEvents": [
								317,
								326,
								335,
								1149,
								1157,
								1163,
								1169,
								1175,
								1183,
								1191
							]
						}
					],
					"src": "33:6343:11"
				},
				"id": 11
			}
		}
	}
}