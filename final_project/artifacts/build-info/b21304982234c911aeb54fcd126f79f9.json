{
	"id": "b21304982234c911aeb54fcd126f79f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"final project/GeneralApiMarketplaceToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**Created by Matt Lindborg\n * UAT MS636 Week 7\n * @title General API Marketplace Token\n * @dev General API Marketplace Contract\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\n\ncontract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {\n    using SafeERC20 for IERC20;\n\n    // token used for payments.\n    IERC20 public immutable token;\n\n    // contract owner (marketplace administrator).\n    address public owner;\n\n    // admin role hash for permission control.\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // counter for API IDs\n    uint256 public apiIdCounter;\n\n    // API provider revenue balances\n    mapping(address => uint256) public providerBalances;\n\n    // struct to store API details\n    struct API {\n        address provider;\n        string name;\n        uint256 pricePerRequest;\n        uint256 subscriptionPrice;\n        uint256 subscriptionDuration;\n        uint256 totalPurchases;\n        bool isActive;\n    }\n\n    // mapping of API ID to API details.\n    mapping(uint256 => API) public apis;\n\n    // struct to store user API access details.\n    struct UserUsage {\n        mapping(uint256 => uint256) remainingRequests;\n        mapping(uint256 => uint256) subscriptionExpiry;\n    }\n\n    // mapping of user addresses to their API access details.\n    mapping(address => UserUsage) private userUsages;\n\n    // events\n    event APIRegistered(\n        uint256 indexed apiId,\n        address indexed provider,\n        string name,\n        uint256 pricePerRequest,\n        uint256 subscriptionPrice\n    );\n    event APIAccessPurchased(\n        address indexed user,\n        uint256 indexed apiId,\n        uint256 requests\n    );\n    event APICallMade(\n        address indexed user,\n        uint256 indexed apiId,\n        uint256 timestamp\n    );\n    event TokensWithdrawn(address indexed provider, uint256 amount);\n    event APIStatusUpdated(uint256 indexed apiId, bool isActive);\n    event SubscriptionPurchased(\n        address indexed user,\n        uint256 indexed apiId,\n        uint256 duration\n    );\n    event SubscriptionCancelled(address indexed user, uint256 indexed apiId);\n    event RefundIssued(\n        address indexed user,\n        uint256 indexed apiId,\n        uint256 amount\n    );\n\n    constructor(IERC20 _token) {\n        require(address(_token) != address(0), \"Invalid token address\");\n        token = _token;\n        owner = msg.sender;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n\n    modifier onlyProvider(uint256 _apiId) {\n        require(apis[_apiId].provider == msg.sender, \"Not the API provider\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Caller is not an admin\");\n        _;\n    }\n\n    function registerAPI(\n        string memory _name,\n        uint256 _pricePerRequest,\n        uint256 _subscriptionPrice,\n        uint256 _subscriptionDuration\n    ) external {\n        require(bytes(_name).length > 0, \"API name cannot be empty\");\n        require(\n            _pricePerRequest > 0 || _subscriptionPrice > 0,\n            \"At least one pricing option required\"\n        );\n\n        uint256 apiId = apiIdCounter++;\n        apis[apiId] = API({\n            provider: msg.sender,\n            name: _name,\n            pricePerRequest: _pricePerRequest,\n            subscriptionPrice: _subscriptionPrice,\n            subscriptionDuration: _subscriptionDuration,\n            totalPurchases: 0,\n            isActive: true\n        });\n\n        emit APIRegistered(\n            apiId,\n            msg.sender,\n            _name,\n            _pricePerRequest,\n            _subscriptionPrice\n        );\n    }\n\n    function approveAndPurchaseAPIAccess(uint256 _apiId, uint256 _requests) external {\n    require(_apiId < apiIdCounter, \"API does not exist\");\n    require(_requests > 0, \"Must purchase at least one request\");\n\n    API storage api = apis[_apiId];\n    require(api.isActive, \"API is not active\");\n\n    uint256 totalCost = api.pricePerRequest * _requests;\n\n    // approve tokens internally\n    token.safeTransferFrom(msg.sender, address(this), totalCost);\n\n    userUsages[msg.sender].remainingRequests[_apiId] += _requests;\n    providerBalances[api.provider] += totalCost;\n\n    api.totalPurchases += _requests;\n    emit APIAccessPurchased(msg.sender, _apiId, _requests);\n}\n\nfunction approveAndPurchaseSubscription(uint256 _apiId) external {\n    require(_apiId < apiIdCounter, \"API does not exist\");\n\n    API storage api = apis[_apiId];\n    require(api.isActive, \"API is not active\");\n\n    uint256 totalCost = api.subscriptionPrice;\n\n    // approve tokens internally\n    token.safeTransferFrom(msg.sender, address(this), totalCost);\n\n    userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp + api.subscriptionDuration;\n    providerBalances[api.provider] += totalCost;\n\n    emit SubscriptionPurchased(msg.sender, _apiId, api.subscriptionDuration);\n}\n\nfunction useAPIAccess(uint256 _apiId) external {\n    require(_apiId < apiIdCounter, \"API does not exist\");\n\n    API storage api = apis[_apiId];\n    require(api.isActive, \"API is not active\");\n\n    uint256 remaining = userUsages[msg.sender].remainingRequests[_apiId];\n    require(remaining > 0, \"No remaining requests\");\n\n    userUsages[msg.sender].remainingRequests[_apiId] -= 1;\n\n    emit APICallMade(msg.sender, _apiId, block.timestamp);\n}\n\n    function withdrawEarnings() external nonReentrant {\n        uint256 balance = providerBalances[msg.sender];\n        require(balance > 0, \"No earnings to withdraw\");\n\n        providerBalances[msg.sender] = 0;\n        token.safeTransfer(msg.sender, balance);\n\n        emit TokensWithdrawn(msg.sender, balance);\n    }\n\n    function cancelSubscription(uint256 _apiId) external {\n        require(_apiId < apiIdCounter, \"API does not exist\");\n        require(\n            userUsages[msg.sender].subscriptionExpiry[_apiId] > block.timestamp,\n            \"No active subscription\"\n        );\n\n        userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp;\n        emit SubscriptionCancelled(msg.sender, _apiId);\n    }\n\n    function getUserBalance(address _user) external view returns (uint256) {\n        return token.balanceOf(_user);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 479,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"final project/GeneralApiMarketplaceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"final project/GeneralApiMarketplaceToken.sol": {
				"GeneralApiMarketplaceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requests",
									"type": "uint256"
								}
							],
							"name": "APIAccessPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "APICallMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pricePerRequest",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "subscriptionPrice",
									"type": "uint256"
								}
							],
							"name": "APIRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "APIStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefundIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								}
							],
							"name": "SubscriptionCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "apiId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "SubscriptionPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "apiIdCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "apis",
							"outputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "pricePerRequest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "subscriptionPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "subscriptionDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalPurchases",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requests",
									"type": "uint256"
								}
							],
							"name": "approveAndPurchaseAPIAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "approveAndPurchaseSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "providerBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_pricePerRequest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_subscriptionPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_subscriptionDuration",
									"type": "uint256"
								}
							],
							"name": "registerAPI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apiId",
									"type": "uint256"
								}
							],
							"name": "useAPIAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "General API Marketplace Contract",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "General API Marketplace Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"final project/GeneralApiMarketplaceToken.sol\":503:6565  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2578:2834  constructor(IERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2650:2651  0 */\n  0x00\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2623:2652  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2631:2637  _token */\n  dup2\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2623:2652  address(_token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2615:2678  require(address(_token) != address(0), \"Invalid token address\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2696:2702  _token */\n  dup1\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2688:2702  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2720:2730  msg.sender */\n  caller\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2712:2717  owner */\n  0x02\n  0x00\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2712:2730  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2741:2783  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2752:2770  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2772:2782  msg.sender */\n  caller\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2741:2751  _grantRole */\n  shl(0x20, tag_12)\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2741:2783  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2793:2827  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"final project/GeneralApiMarketplaceToken.sol\":842:865  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2816:2826  msg.sender */\n  caller\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2793:2803  _grantRole */\n  shl(0x20, tag_12)\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2793:2827  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":2578:2834  constructor(IERC20 _token) {... */\n  pop\n    /* \"final project/GeneralApiMarketplaceToken.sol\":503:6565  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_41\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_29:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_43\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_30:\n    /* \"#utility.yul\":771:809   */\n  tag_45\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_46:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_31:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_48\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_51\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1118:1237   */\ntag_50:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_52\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1571   */\ntag_32:\n    /* \"#utility.yul\":1486:1497   */\n  0x00\n    /* \"#utility.yul\":1520:1526   */\n  dup3\n    /* \"#utility.yul\":1515:1518   */\n  dup3\n    /* \"#utility.yul\":1508:1527   */\n  mstore\n    /* \"#utility.yul\":1560:1564   */\n  0x20\n    /* \"#utility.yul\":1555:1558   */\n  dup3\n    /* \"#utility.yul\":1551:1565   */\n  add\n    /* \"#utility.yul\":1536:1565   */\n  swap1\n  pop\n    /* \"#utility.yul\":1402:1571   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1577:1748   */\ntag_33:\n    /* \"#utility.yul\":1717:1740   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1713:1714   */\n  0x00\n    /* \"#utility.yul\":1705:1711   */\n  dup3\n    /* \"#utility.yul\":1701:1715   */\n  add\n    /* \"#utility.yul\":1694:1741   */\n  mstore\n    /* \"#utility.yul\":1577:1748   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1754:2120   */\ntag_34:\n    /* \"#utility.yul\":1896:1899   */\n  0x00\n    /* \"#utility.yul\":1917:1984   */\n  tag_56\n    /* \"#utility.yul\":1981:1983   */\n  0x15\n    /* \"#utility.yul\":1976:1979   */\n  dup4\n    /* \"#utility.yul\":1917:1984   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1910:1984   */\n  swap2\n  pop\n    /* \"#utility.yul\":1993:2086   */\n  tag_57\n    /* \"#utility.yul\":2082:2085   */\n  dup3\n    /* \"#utility.yul\":1993:2086   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2111:2113   */\n  0x20\n    /* \"#utility.yul\":2106:2109   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  add\n    /* \"#utility.yul\":2095:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":1754:2120   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2126:2545   */\ntag_10:\n    /* \"#utility.yul\":2292:2296   */\n  0x00\n    /* \"#utility.yul\":2330:2332   */\n  0x20\n    /* \"#utility.yul\":2319:2328   */\n  dup3\n    /* \"#utility.yul\":2315:2333   */\n  add\n    /* \"#utility.yul\":2307:2333   */\n  swap1\n  pop\n    /* \"#utility.yul\":2379:2388   */\n  dup2\n    /* \"#utility.yul\":2373:2377   */\n  dup2\n    /* \"#utility.yul\":2369:2389   */\n  sub\n    /* \"#utility.yul\":2365:2366   */\n  0x00\n    /* \"#utility.yul\":2354:2363   */\n  dup4\n    /* \"#utility.yul\":2350:2367   */\n  add\n    /* \"#utility.yul\":2343:2390   */\n  mstore\n    /* \"#utility.yul\":2407:2538   */\n  tag_59\n    /* \"#utility.yul\":2533:2537   */\n  dup2\n    /* \"#utility.yul\":2407:2538   */\n  tag_34\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2399:2538   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2545   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"final project/GeneralApiMarketplaceToken.sol\":503:6565  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\ntag_14:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"final project/GeneralApiMarketplaceToken.sol\":503:6565  contract GeneralApiMarketplaceToken is ReentrancyGuard, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75b238fc\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xaf6e5689\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb73c6ce9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x75b238fc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8e04d8d8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9c4d9c0c\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x29206bd1\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x29206bd1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2a222851\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x47734892\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x099952c8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x21235083\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x28ac7f2c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":899:926  uint256 public apiIdCounter */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6038:6440  function cancelSubscription(uint256 _apiId) external {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":970:1021  mapping(address => uint256) public providerBalances */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3101:4007  function registerAPI(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4013:4679  function approveAndPurchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6446:6563  function getUserBalance(address _user) external view returns (uint256) {... */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":805:865  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":731:751  address public owner */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5271:5712  function useAPIAccess(uint256 _apiId) external {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4681:5269  function approveAndPurchaseSubscription(uint256 _apiId) external {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":1336:1371  mapping(uint256 => API) public apis */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5718:6032  function withdrawEarnings() external nonReentrant {... */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":644:673  IERC20 public immutable token */\n    tag_22:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_105\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":899:926  uint256 public apiIdCounter */\n    tag_33:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6038:6440  function cancelSubscription(uint256 _apiId) external {... */\n    tag_39:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6118:6130  apiIdCounter */\n      sload(0x03)\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6109:6115  _apiId */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6109:6130  _apiId < apiIdCounter */\n      lt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6101:6153  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6236:6251  block.timestamp */\n      timestamp\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6194  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6206  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6195:6205  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6206  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6225  userUsages[msg.sender].subscriptionExpiry */\n      0x01\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6233  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6226:6232  _apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6233  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6184:6251  userUsages[msg.sender].subscriptionExpiry[_apiId] > block.timestamp */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6163:6299  require(... */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6362:6377  block.timestamp */\n      timestamp\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6320  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6332  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6321:6331  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6332  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6351  userUsages[msg.sender].subscriptionExpiry */\n      0x01\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6359  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6352:6358  _apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6359  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6310:6377  userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6426:6432  _apiId */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6414:6424  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6392:6433  SubscriptionCancelled(msg.sender, _apiId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06aa12c0ad65927b4a753d119c26e490d3c4a4e11cb631b43131a709dc1e5917\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6038:6440  function cancelSubscription(uint256 _apiId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":970:1021  mapping(address => uint256) public providerBalances */\n    tag_49:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3101:4007  function registerAPI(... */\n    tag_54:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3315:3316  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3299:3304  _name */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3293:3312  bytes(_name).length */\n      mload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3293:3316  bytes(_name).length > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3285:3345  require(bytes(_name).length > 0, \"API name cannot be empty\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3395:3396  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3376:3392  _pricePerRequest */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3376:3396  _pricePerRequest > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3376:3422  _pricePerRequest > 0 || _subscriptionPrice > 0 */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3421:3422  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3400:3418  _subscriptionPrice */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3400:3422  _subscriptionPrice > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3376:3422  _pricePerRequest > 0 || _subscriptionPrice > 0 */\n    tag_120:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3355:3484  require(... */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3495:3508  uint256 apiId */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3511:3523  apiIdCounter */\n      0x03\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3511:3525  apiIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3495:3525  uint256 apiId = apiIdCounter++ */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3577:3587  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3607:3612  _name */\n      dup7\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3643:3659  _pricePerRequest */\n      dup6\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3692:3710  _subscriptionPrice */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3746:3767  _subscriptionDuration */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3797:3798  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3822:3826  true */\n      0x01\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3549:3837  API({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3535:3539  apis */\n      0x05\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3535:3546  apis[apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3540:3545  apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3535:3546  apis[apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3535:3837  apis[apiId] = API({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3899:3909  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3853:4000  APIRegistered(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3880:3885  apiId */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3853:4000  APIRegistered(... */\n      0xaeb4fdd5a376011a12e318bf03de0006c5c806196fb1d14f787be471267cb8dc\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3923:3928  _name */\n      dup8\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3942:3958  _pricePerRequest */\n      dup8\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3972:3990  _subscriptionPrice */\n      dup8\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3853:4000  APIRegistered(... */\n      mload(0x40)\n      tag_128\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3275:4007  {... */\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":3101:4007  function registerAPI(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4013:4679  function approveAndPurchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n    tag_58:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4117:4129  apiIdCounter */\n      sload(0x03)\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4108:4114  _apiId */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4108:4129  _apiId < apiIdCounter */\n      lt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4100:4152  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_111\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4178:4179  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4166:4175  _requests */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4166:4179  _requests > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4158:4218  require(_requests > 0, \"Must purchase at least one request\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4225:4240  API storage api */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4243:4247  apis */\n      0x05\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4243:4255  apis[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4248:4254  _apiId */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4243:4255  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4225:4255  API storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4269:4272  api */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4269:4281  api.isActive */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4261:4303  require(api.isActive, \"API is not active\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4310:4327  uint256 totalCost */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4352:4361  _requests */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4330:4333  api */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4330:4349  api.pricePerRequest */\n      0x02\n      add\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4330:4361  api.pricePerRequest * _requests */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4310:4361  uint256 totalCost = api.pricePerRequest * _requests */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4401:4461  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      tag_141\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4424:4434  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4444:4448  this */\n      address\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4451:4460  totalCost */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4401:4406  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4401:4423  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4401:4461  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4520:4529  _requests */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4478  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4490  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4479:4489  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4490  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4508  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4516  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4509:4515  _apiId */\n      dup7\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4516  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4468:4529  userUsages[msg.sender].remainingRequests[_apiId] += _requests */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4569:4578  totalCost */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4535:4551  providerBalances */\n      0x04\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4535:4565  providerBalances[api.provider] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4552:4555  api */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4552:4564  api.provider */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4535:4565  providerBalances[api.provider] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4535:4578  providerBalances[api.provider] += totalCost */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4607:4616  _requests */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4585:4588  api */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4585:4603  api.totalPurchases */\n      0x05\n      add\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4585:4616  api.totalPurchases += _requests */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4658:4664  _apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4646:4656  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4627:4676  APIAccessPurchased(msg.sender, _apiId, _requests) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4666:4675  _requests */\n      dup6\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4627:4676  APIAccessPurchased(msg.sender, _apiId, _requests) */\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4094:4679  {... */\n      pop\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4013:4679  function approveAndPurchaseAPIAccess(uint256 _apiId, uint256 _requests) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_43\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_159:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6446:6563  function getUserBalance(address _user) external view returns (uint256) {... */\n    tag_68:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6508:6515  uint256 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6534:6539  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6534:6549  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6550:6555  _user */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6534:6556  token.balanceOf(_user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6527:6556  return token.balanceOf(_user) */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6446:6563  function getUserBalance(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":805:865  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_71:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":842:865  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"final project/GeneralApiMarketplaceToken.sol\":805:865  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":731:751  address public owner */\n    tag_74:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5271:5712  function useAPIAccess(uint256 _apiId) external {... */\n    tag_79:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5341:5353  apiIdCounter */\n      sload(0x03)\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5332:5338  _apiId */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5332:5353  _apiId < apiIdCounter */\n      lt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5324:5376  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_111\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5383:5398  API storage api */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5401:5405  apis */\n      0x05\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5401:5413  apis[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5406:5412  _apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5401:5413  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5383:5413  API storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5427:5430  api */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5427:5439  api.isActive */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5419:5461  require(api.isActive, \"API is not active\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_138\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5468:5485  uint256 remaining */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5498  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5510  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5499:5509  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5510  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5528  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5536  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5529:5535  _apiId */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5488:5536  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5468:5536  uint256 remaining = userUsages[msg.sender].remainingRequests[_apiId] */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5562:5563  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5550:5559  remaining */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5550:5563  remaining > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5542:5589  require(remaining > 0, \"No remaining requests\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5648:5649  1 */\n      0x01\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5606  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5618  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5607:5617  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5618  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5636  userUsages[msg.sender].remainingRequests */\n      0x00\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5644  userUsages[msg.sender].remainingRequests[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5637:5643  _apiId */\n      dup6\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5644  userUsages[msg.sender].remainingRequests[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5596:5649  userUsages[msg.sender].remainingRequests[_apiId] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5685:5691  _apiId */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5673:5683  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5661:5709  APICallMade(msg.sender, _apiId, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcca1381d7195cd2569f7fc5ea523be6bbec35a1421ab82b215b1651f7b22157e\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5693:5708  block.timestamp */\n      timestamp\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5661:5709  APICallMade(msg.sender, _apiId, block.timestamp) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5318:5712  {... */\n      pop\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5271:5712  function useAPIAccess(uint256 _apiId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4681:5269  function approveAndPurchaseSubscription(uint256 _apiId) external {... */\n    tag_86:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4769:4781  apiIdCounter */\n      sload(0x03)\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4760:4766  _apiId */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4760:4781  _apiId < apiIdCounter */\n      lt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4752:4804  require(_apiId < apiIdCounter, \"API does not exist\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_111\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4811:4826  API storage api */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4829:4833  apis */\n      0x05\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4829:4841  apis[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4834:4840  _apiId */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4829:4841  apis[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4811:4841  API storage api = apis[_apiId] */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4855:4858  api */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4855:4867  api.isActive */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4847:4889  require(api.isActive, \"API is not active\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_138\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4896:4913  uint256 totalCost */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4916:4919  api */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4916:4937  api.subscriptionPrice */\n      0x03\n      add\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4896:4937  uint256 totalCost = api.subscriptionPrice */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4977:5037  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      tag_184\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5000:5010  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5020:5024  this */\n      address\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5027:5036  totalCost */\n      dup4\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4977:4982  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4977:4999  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4977:5037  token.safeTransferFrom(msg.sender, address(this), totalCost) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5114:5117  api */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5114:5138  api.subscriptionDuration */\n      0x04\n      add\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5096:5111  block.timestamp */\n      timestamp\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5096:5138  block.timestamp + api.subscriptionDuration */\n      tag_185\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_185:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5054  userUsages */\n      0x06\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5066  userUsages[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5055:5065  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5066  userUsages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5085  userUsages[msg.sender].subscriptionExpiry */\n      0x01\n      add\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5093  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5086:5092  _apiId */\n      dup6\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5093  userUsages[msg.sender].subscriptionExpiry[_apiId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5044:5138  userUsages[msg.sender].subscriptionExpiry[_apiId] = block.timestamp + api.subscriptionDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5178:5187  totalCost */\n      dup1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5144:5160  providerBalances */\n      0x04\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5144:5174  providerBalances[api.provider] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5161:5164  api */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5161:5173  api.provider */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5144:5174  providerBalances[api.provider] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5144:5187  providerBalances[api.provider] += totalCost */\n      dup3\n      dup3\n      sload\n      tag_186\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5233:5239  _apiId */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5221:5231  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5199:5266  SubscriptionPurchased(msg.sender, _apiId, api.subscriptionDuration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5241:5244  api */\n      dup5\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5241:5265  api.subscriptionDuration */\n      0x04\n      add\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5199:5266  SubscriptionPurchased(msg.sender, _apiId, api.subscriptionDuration) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4746:5269  {... */\n      pop\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":4681:5269  function approveAndPurchaseSubscription(uint256 _apiId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":1336:1371  mapping(uint256 => API) public apis */\n    tag_92:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_189\n      jump\t// in\n    tag_190:\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5718:6032  function withdrawEarnings() external nonReentrant {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_195\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_196\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_195:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5778:5793  uint256 balance */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5796:5812  providerBalances */\n      0x04\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5796:5824  providerBalances[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5813:5823  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5796:5824  providerBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5778:5824  uint256 balance = providerBalances[msg.sender] */\n      swap1\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5852:5853  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5842:5849  balance */\n      dup2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5842:5853  balance > 0 */\n      gt\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5834:5881  require(balance > 0, \"No earnings to withdraw\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5923:5924  0 */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5892:5908  providerBalances */\n      0x04\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5892:5920  providerBalances[msg.sender] */\n      0x00\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5909:5919  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5892:5920  providerBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5892:5924  providerBalances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5934:5973  token.safeTransfer(msg.sender, balance) */\n      tag_201\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5953:5963  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5965:5972  balance */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5934:5939  token */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5934:5952  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5934:5973  token.safeTransfer(msg.sender, balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6005:6015  msg.sender */\n      caller\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5989:6025  TokensWithdrawn(msg.sender, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b\n        /* \"final project/GeneralApiMarketplaceToken.sol\":6017:6024  balance */\n      dup3\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5989:6025  TokensWithdrawn(msg.sender, balance) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5768:6032  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_204\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_205\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_204:\n        /* \"final project/GeneralApiMarketplaceToken.sol\":5718:6032  function withdrawEarnings() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_43\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_210:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"final project/GeneralApiMarketplaceToken.sol\":644:673  IERC20 public immutable token */\n    tag_101:\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_214\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_220\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_227)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_244)\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_252:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_253:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_254:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_255:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_256:\n        /* \"#utility.yul\":561:584   */\n      tag_333\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_334:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_257:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_336\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_339\n      tag_253\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":833:952   */\n    tag_338:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_340\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_257\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_258:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_259:\n        /* \"#utility.yul\":1268:1289   */\n      tag_343\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_258\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_345\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_260:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_261:\n        /* \"#utility.yul\":1688:1712   */\n      tag_348\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_260\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_35:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_350\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_261\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2075   */\n    tag_262:\n        /* \"#utility.yul\":2026:2050   */\n      tag_352\n        /* \"#utility.yul\":2044:2049   */\n      dup2\n        /* \"#utility.yul\":2026:2050   */\n      tag_260\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2051   */\n      eq\n        /* \"#utility.yul\":2006:2069   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2006:2069   */\n    tag_353:\n        /* \"#utility.yul\":1953:2075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2220   */\n    tag_263:\n        /* \"#utility.yul\":2127:2132   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup2\n        /* \"#utility.yul\":2152:2172   */\n      calldataload\n        /* \"#utility.yul\":2143:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2214   */\n      tag_355\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2181:2214   */\n      tag_262\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2081:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_38:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_358\n      tag_253\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2302:2421   */\n    tag_357:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_359\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_263\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_264:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2766   */\n    tag_265:\n        /* \"#utility.yul\":2717:2741   */\n      tag_362\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2717:2741   */\n      tag_264\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2710:2715   */\n      dup2\n        /* \"#utility.yul\":2707:2742   */\n      eq\n        /* \"#utility.yul\":2697:2760   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      dup1\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2697:2760   */\n    tag_363:\n        /* \"#utility.yul\":2644:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2911   */\n    tag_266:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2905   */\n      tag_365\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2872:2905   */\n      tag_265\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2772:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3246   */\n    tag_42:\n        /* \"#utility.yul\":2976:2982   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3112   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":3031:3110   */\n      tag_368\n      tag_253\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2993:3112   */\n    tag_367:\n        /* \"#utility.yul\":3151:3152   */\n      0x00\n        /* \"#utility.yul\":3176:3229   */\n      tag_369\n        /* \"#utility.yul\":3221:3228   */\n      dup5\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_266\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3166:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3239   */\n      pop\n        /* \"#utility.yul\":2917:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3370   */\n    tag_267:\n        /* \"#utility.yul\":3339:3363   */\n      tag_371\n        /* \"#utility.yul\":3357:3362   */\n      dup2\n        /* \"#utility.yul\":3339:3363   */\n      tag_264\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3334:3337   */\n      dup3\n        /* \"#utility.yul\":3327:3364   */\n      mstore\n        /* \"#utility.yul\":3252:3370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3376:3598   */\n    tag_45:\n        /* \"#utility.yul\":3469:3473   */\n      0x00\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3496:3505   */\n      dup3\n        /* \"#utility.yul\":3492:3510   */\n      add\n        /* \"#utility.yul\":3484:3510   */\n      swap1\n      pop\n        /* \"#utility.yul\":3520:3591   */\n      tag_373\n        /* \"#utility.yul\":3588:3589   */\n      0x00\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3573:3590   */\n      add\n        /* \"#utility.yul\":3564:3570   */\n      dup5\n        /* \"#utility.yul\":3520:3591   */\n      tag_267\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3376:3598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3604:3730   */\n    tag_268:\n        /* \"#utility.yul\":3641:3648   */\n      0x00\n        /* \"#utility.yul\":3681:3723   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3674:3679   */\n      dup3\n        /* \"#utility.yul\":3670:3724   */\n      and\n        /* \"#utility.yul\":3659:3724   */\n      swap1\n      pop\n        /* \"#utility.yul\":3604:3730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3736:3832   */\n    tag_269:\n        /* \"#utility.yul\":3773:3780   */\n      0x00\n        /* \"#utility.yul\":3802:3826   */\n      tag_376\n        /* \"#utility.yul\":3820:3825   */\n      dup3\n        /* \"#utility.yul\":3802:3826   */\n      tag_268\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3791:3826   */\n      swap1\n      pop\n        /* \"#utility.yul\":3736:3832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:3960   */\n    tag_270:\n        /* \"#utility.yul\":3911:3935   */\n      tag_378\n        /* \"#utility.yul\":3929:3934   */\n      dup2\n        /* \"#utility.yul\":3911:3935   */\n      tag_269\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3901:3936   */\n      eq\n        /* \"#utility.yul\":3891:3954   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3947:3948   */\n      dup1\n        /* \"#utility.yul\":3940:3952   */\n      revert\n        /* \"#utility.yul\":3891:3954   */\n    tag_379:\n        /* \"#utility.yul\":3838:3960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4105   */\n    tag_271:\n        /* \"#utility.yul\":4012:4017   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup2\n        /* \"#utility.yul\":4037:4057   */\n      calldataload\n        /* \"#utility.yul\":4028:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4066:4099   */\n      tag_381\n        /* \"#utility.yul\":4093:4098   */\n      dup2\n        /* \"#utility.yul\":4066:4099   */\n      tag_270\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3966:4105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4440   */\n    tag_48:\n        /* \"#utility.yul\":4170:4176   */\n      0x00\n        /* \"#utility.yul\":4219:4221   */\n      0x20\n        /* \"#utility.yul\":4207:4216   */\n      dup3\n        /* \"#utility.yul\":4198:4205   */\n      dup5\n        /* \"#utility.yul\":4194:4217   */\n      sub\n        /* \"#utility.yul\":4190:4222   */\n      slt\n        /* \"#utility.yul\":4187:4306   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":4225:4304   */\n      tag_384\n      tag_253\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4187:4306   */\n    tag_383:\n        /* \"#utility.yul\":4345:4346   */\n      0x00\n        /* \"#utility.yul\":4370:4423   */\n      tag_385\n        /* \"#utility.yul\":4415:4422   */\n      dup5\n        /* \"#utility.yul\":4406:4412   */\n      dup3\n        /* \"#utility.yul\":4395:4404   */\n      dup6\n        /* \"#utility.yul\":4391:4413   */\n      add\n        /* \"#utility.yul\":4370:4423   */\n      tag_271\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4360:4423   */\n      swap2\n      pop\n        /* \"#utility.yul\":4316:4433   */\n      pop\n        /* \"#utility.yul\":4111:4440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4446:4563   */\n    tag_272:\n        /* \"#utility.yul\":4555:4556   */\n      0x00\n        /* \"#utility.yul\":4552:4553   */\n      dup1\n        /* \"#utility.yul\":4545:4557   */\n      revert\n        /* \"#utility.yul\":4569:4686   */\n    tag_273:\n        /* \"#utility.yul\":4678:4679   */\n      0x00\n        /* \"#utility.yul\":4675:4676   */\n      dup1\n        /* \"#utility.yul\":4668:4680   */\n      revert\n        /* \"#utility.yul\":4692:4794   */\n    tag_274:\n        /* \"#utility.yul\":4733:4739   */\n      0x00\n        /* \"#utility.yul\":4784:4786   */\n      0x1f\n        /* \"#utility.yul\":4780:4787   */\n      not\n        /* \"#utility.yul\":4775:4777   */\n      0x1f\n        /* \"#utility.yul\":4768:4773   */\n      dup4\n        /* \"#utility.yul\":4764:4778   */\n      add\n        /* \"#utility.yul\":4760:4788   */\n      and\n        /* \"#utility.yul\":4750:4788   */\n      swap1\n      pop\n        /* \"#utility.yul\":4692:4794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4800:4980   */\n    tag_275:\n        /* \"#utility.yul\":4848:4925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4845:4846   */\n      0x00\n        /* \"#utility.yul\":4838:4926   */\n      mstore\n        /* \"#utility.yul\":4945:4949   */\n      0x41\n        /* \"#utility.yul\":4942:4943   */\n      0x04\n        /* \"#utility.yul\":4935:4950   */\n      mstore\n        /* \"#utility.yul\":4969:4973   */\n      0x24\n        /* \"#utility.yul\":4966:4967   */\n      0x00\n        /* \"#utility.yul\":4959:4974   */\n      revert\n        /* \"#utility.yul\":4986:5267   */\n    tag_276:\n        /* \"#utility.yul\":5069:5096   */\n      tag_391\n        /* \"#utility.yul\":5091:5095   */\n      dup3\n        /* \"#utility.yul\":5069:5096   */\n      tag_274\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5061:5067   */\n      dup2\n        /* \"#utility.yul\":5057:5097   */\n      add\n        /* \"#utility.yul\":5199:5205   */\n      dup2\n        /* \"#utility.yul\":5187:5197   */\n      dup2\n        /* \"#utility.yul\":5184:5206   */\n      lt\n        /* \"#utility.yul\":5163:5181   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5151:5161   */\n      dup3\n        /* \"#utility.yul\":5148:5182   */\n      gt\n        /* \"#utility.yul\":5145:5207   */\n      or\n        /* \"#utility.yul\":5142:5230   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5210:5228   */\n      tag_393\n      tag_275\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5142:5230   */\n    tag_392:\n        /* \"#utility.yul\":5250:5260   */\n      dup1\n        /* \"#utility.yul\":5246:5248   */\n      0x40\n        /* \"#utility.yul\":5239:5261   */\n      mstore\n        /* \"#utility.yul\":5029:5267   */\n      pop\n        /* \"#utility.yul\":4986:5267   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5273:5402   */\n    tag_277:\n        /* \"#utility.yul\":5307:5313   */\n      0x00\n        /* \"#utility.yul\":5334:5354   */\n      tag_395\n      tag_252\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5324:5354   */\n      swap1\n      pop\n        /* \"#utility.yul\":5363:5396   */\n      tag_396\n        /* \"#utility.yul\":5391:5395   */\n      dup3\n        /* \"#utility.yul\":5383:5389   */\n      dup3\n        /* \"#utility.yul\":5363:5396   */\n      tag_276\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5273:5402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5408:5716   */\n    tag_278:\n        /* \"#utility.yul\":5470:5474   */\n      0x00\n        /* \"#utility.yul\":5560:5578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5552:5558   */\n      dup3\n        /* \"#utility.yul\":5549:5579   */\n      gt\n        /* \"#utility.yul\":5546:5602   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5582:5600   */\n      tag_399\n      tag_275\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5546:5602   */\n    tag_398:\n        /* \"#utility.yul\":5620:5649   */\n      tag_400\n        /* \"#utility.yul\":5642:5648   */\n      dup3\n        /* \"#utility.yul\":5620:5649   */\n      tag_274\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5612:5649   */\n      swap1\n      pop\n        /* \"#utility.yul\":5704:5708   */\n      0x20\n        /* \"#utility.yul\":5698:5702   */\n      dup2\n        /* \"#utility.yul\":5694:5709   */\n      add\n        /* \"#utility.yul\":5686:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5722:5870   */\n    tag_279:\n        /* \"#utility.yul\":5820:5826   */\n      dup3\n        /* \"#utility.yul\":5815:5818   */\n      dup2\n        /* \"#utility.yul\":5810:5813   */\n      dup4\n        /* \"#utility.yul\":5797:5827   */\n      calldatacopy\n        /* \"#utility.yul\":5861:5862   */\n      0x00\n        /* \"#utility.yul\":5852:5858   */\n      dup4\n        /* \"#utility.yul\":5847:5850   */\n      dup4\n        /* \"#utility.yul\":5843:5859   */\n      add\n        /* \"#utility.yul\":5836:5863   */\n      mstore\n        /* \"#utility.yul\":5722:5870   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5876:6301   */\n    tag_280:\n        /* \"#utility.yul\":5954:5959   */\n      0x00\n        /* \"#utility.yul\":5979:6045   */\n      tag_403\n        /* \"#utility.yul\":5995:6044   */\n      tag_404\n        /* \"#utility.yul\":6037:6043   */\n      dup5\n        /* \"#utility.yul\":5995:6044   */\n      tag_278\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5979:6045   */\n      tag_277\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5970:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":6068:6074   */\n      dup3\n        /* \"#utility.yul\":6061:6066   */\n      dup2\n        /* \"#utility.yul\":6054:6075   */\n      mstore\n        /* \"#utility.yul\":6106:6110   */\n      0x20\n        /* \"#utility.yul\":6099:6104   */\n      dup2\n        /* \"#utility.yul\":6095:6111   */\n      add\n        /* \"#utility.yul\":6144:6147   */\n      dup5\n        /* \"#utility.yul\":6135:6141   */\n      dup5\n        /* \"#utility.yul\":6130:6133   */\n      dup5\n        /* \"#utility.yul\":6126:6142   */\n      add\n        /* \"#utility.yul\":6123:6148   */\n      gt\n        /* \"#utility.yul\":6120:6232   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":6151:6230   */\n      tag_406\n      tag_273\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6120:6232   */\n    tag_405:\n        /* \"#utility.yul\":6241:6295   */\n      tag_407\n        /* \"#utility.yul\":6288:6294   */\n      dup5\n        /* \"#utility.yul\":6283:6286   */\n      dup3\n        /* \"#utility.yul\":6278:6281   */\n      dup6\n        /* \"#utility.yul\":6241:6295   */\n      tag_279\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5960:6301   */\n      pop\n        /* \"#utility.yul\":5876:6301   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6321:6661   */\n    tag_281:\n        /* \"#utility.yul\":6377:6382   */\n      0x00\n        /* \"#utility.yul\":6426:6429   */\n      dup3\n        /* \"#utility.yul\":6419:6423   */\n      0x1f\n        /* \"#utility.yul\":6411:6417   */\n      dup4\n        /* \"#utility.yul\":6407:6424   */\n      add\n        /* \"#utility.yul\":6403:6430   */\n      slt\n        /* \"#utility.yul\":6393:6515   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":6434:6513   */\n      tag_410\n      tag_272\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6393:6515   */\n    tag_409:\n        /* \"#utility.yul\":6551:6557   */\n      dup2\n        /* \"#utility.yul\":6538:6558   */\n      calldataload\n        /* \"#utility.yul\":6576:6655   */\n      tag_411\n        /* \"#utility.yul\":6651:6654   */\n      dup5\n        /* \"#utility.yul\":6643:6649   */\n      dup3\n        /* \"#utility.yul\":6636:6640   */\n      0x20\n        /* \"#utility.yul\":6628:6634   */\n      dup7\n        /* \"#utility.yul\":6624:6641   */\n      add\n        /* \"#utility.yul\":6576:6655   */\n      tag_280\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6567:6655   */\n      swap2\n      pop\n        /* \"#utility.yul\":6383:6661   */\n      pop\n        /* \"#utility.yul\":6321:6661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:7612   */\n    tag_53:\n        /* \"#utility.yul\":6763:6769   */\n      0x00\n        /* \"#utility.yul\":6771:6777   */\n      dup1\n        /* \"#utility.yul\":6779:6785   */\n      0x00\n        /* \"#utility.yul\":6787:6793   */\n      dup1\n        /* \"#utility.yul\":6836:6839   */\n      0x80\n        /* \"#utility.yul\":6824:6833   */\n      dup6\n        /* \"#utility.yul\":6815:6822   */\n      dup8\n        /* \"#utility.yul\":6811:6834   */\n      sub\n        /* \"#utility.yul\":6807:6840   */\n      slt\n        /* \"#utility.yul\":6804:6924   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":6843:6922   */\n      tag_414\n      tag_253\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6804:6924   */\n    tag_413:\n        /* \"#utility.yul\":6991:6992   */\n      0x00\n        /* \"#utility.yul\":6980:6989   */\n      dup6\n        /* \"#utility.yul\":6976:6993   */\n      add\n        /* \"#utility.yul\":6963:6994   */\n      calldataload\n        /* \"#utility.yul\":7021:7039   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7013:7019   */\n      dup2\n        /* \"#utility.yul\":7010:7040   */\n      gt\n        /* \"#utility.yul\":7007:7124   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":7043:7122   */\n      tag_416\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7007:7124   */\n    tag_415:\n        /* \"#utility.yul\":7148:7211   */\n      tag_417\n        /* \"#utility.yul\":7203:7210   */\n      dup8\n        /* \"#utility.yul\":7194:7200   */\n      dup3\n        /* \"#utility.yul\":7183:7192   */\n      dup9\n        /* \"#utility.yul\":7179:7201   */\n      add\n        /* \"#utility.yul\":7148:7211   */\n      tag_281\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7138:7211   */\n      swap5\n      pop\n        /* \"#utility.yul\":6934:7221   */\n      pop\n        /* \"#utility.yul\":7260:7262   */\n      0x20\n        /* \"#utility.yul\":7286:7339   */\n      tag_418\n        /* \"#utility.yul\":7331:7338   */\n      dup8\n        /* \"#utility.yul\":7322:7328   */\n      dup3\n        /* \"#utility.yul\":7311:7320   */\n      dup9\n        /* \"#utility.yul\":7307:7329   */\n      add\n        /* \"#utility.yul\":7286:7339   */\n      tag_263\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7276:7339   */\n      swap4\n      pop\n        /* \"#utility.yul\":7231:7349   */\n      pop\n        /* \"#utility.yul\":7388:7390   */\n      0x40\n        /* \"#utility.yul\":7414:7467   */\n      tag_419\n        /* \"#utility.yul\":7459:7466   */\n      dup8\n        /* \"#utility.yul\":7450:7456   */\n      dup3\n        /* \"#utility.yul\":7439:7448   */\n      dup9\n        /* \"#utility.yul\":7435:7457   */\n      add\n        /* \"#utility.yul\":7414:7467   */\n      tag_263\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7404:7467   */\n      swap3\n      pop\n        /* \"#utility.yul\":7359:7477   */\n      pop\n        /* \"#utility.yul\":7516:7518   */\n      0x60\n        /* \"#utility.yul\":7542:7595   */\n      tag_420\n        /* \"#utility.yul\":7587:7594   */\n      dup8\n        /* \"#utility.yul\":7578:7584   */\n      dup3\n        /* \"#utility.yul\":7567:7576   */\n      dup9\n        /* \"#utility.yul\":7563:7585   */\n      add\n        /* \"#utility.yul\":7542:7595   */\n      tag_263\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7532:7595   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7605   */\n      pop\n        /* \"#utility.yul\":6667:7612   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7618:8092   */\n    tag_57:\n        /* \"#utility.yul\":7686:7692   */\n      0x00\n        /* \"#utility.yul\":7694:7700   */\n      dup1\n        /* \"#utility.yul\":7743:7745   */\n      0x40\n        /* \"#utility.yul\":7731:7740   */\n      dup4\n        /* \"#utility.yul\":7722:7729   */\n      dup6\n        /* \"#utility.yul\":7718:7741   */\n      sub\n        /* \"#utility.yul\":7714:7746   */\n      slt\n        /* \"#utility.yul\":7711:7830   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7749:7828   */\n      tag_423\n      tag_253\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7711:7830   */\n    tag_422:\n        /* \"#utility.yul\":7869:7870   */\n      0x00\n        /* \"#utility.yul\":7894:7947   */\n      tag_424\n        /* \"#utility.yul\":7939:7946   */\n      dup6\n        /* \"#utility.yul\":7930:7936   */\n      dup3\n        /* \"#utility.yul\":7919:7928   */\n      dup7\n        /* \"#utility.yul\":7915:7937   */\n      add\n        /* \"#utility.yul\":7894:7947   */\n      tag_263\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7884:7947   */\n      swap3\n      pop\n        /* \"#utility.yul\":7840:7957   */\n      pop\n        /* \"#utility.yul\":7996:7998   */\n      0x20\n        /* \"#utility.yul\":8022:8075   */\n      tag_425\n        /* \"#utility.yul\":8067:8074   */\n      dup6\n        /* \"#utility.yul\":8058:8064   */\n      dup3\n        /* \"#utility.yul\":8047:8056   */\n      dup7\n        /* \"#utility.yul\":8043:8065   */\n      add\n        /* \"#utility.yul\":8022:8075   */\n      tag_263\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8012:8075   */\n      swap2\n      pop\n        /* \"#utility.yul\":7967:8085   */\n      pop\n        /* \"#utility.yul\":7618:8092   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8098:8572   */\n    tag_61:\n        /* \"#utility.yul\":8166:8172   */\n      0x00\n        /* \"#utility.yul\":8174:8180   */\n      dup1\n        /* \"#utility.yul\":8223:8225   */\n      0x40\n        /* \"#utility.yul\":8211:8220   */\n      dup4\n        /* \"#utility.yul\":8202:8209   */\n      dup6\n        /* \"#utility.yul\":8198:8221   */\n      sub\n        /* \"#utility.yul\":8194:8226   */\n      slt\n        /* \"#utility.yul\":8191:8310   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8229:8308   */\n      tag_428\n      tag_253\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8191:8310   */\n    tag_427:\n        /* \"#utility.yul\":8349:8350   */\n      0x00\n        /* \"#utility.yul\":8374:8427   */\n      tag_429\n        /* \"#utility.yul\":8419:8426   */\n      dup6\n        /* \"#utility.yul\":8410:8416   */\n      dup3\n        /* \"#utility.yul\":8399:8408   */\n      dup7\n        /* \"#utility.yul\":8395:8417   */\n      add\n        /* \"#utility.yul\":8374:8427   */\n      tag_266\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8364:8427   */\n      swap3\n      pop\n        /* \"#utility.yul\":8320:8437   */\n      pop\n        /* \"#utility.yul\":8476:8478   */\n      0x20\n        /* \"#utility.yul\":8502:8555   */\n      tag_430\n        /* \"#utility.yul\":8547:8554   */\n      dup6\n        /* \"#utility.yul\":8538:8544   */\n      dup3\n        /* \"#utility.yul\":8527:8536   */\n      dup7\n        /* \"#utility.yul\":8523:8545   */\n      add\n        /* \"#utility.yul\":8502:8555   */\n      tag_271\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8492:8555   */\n      swap2\n      pop\n        /* \"#utility.yul\":8447:8565   */\n      pop\n        /* \"#utility.yul\":8098:8572   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8578:8696   */\n    tag_282:\n        /* \"#utility.yul\":8665:8689   */\n      tag_432\n        /* \"#utility.yul\":8683:8688   */\n      dup2\n        /* \"#utility.yul\":8665:8689   */\n      tag_269\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8660:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8690   */\n      mstore\n        /* \"#utility.yul\":8578:8696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8702:8924   */\n    tag_76:\n        /* \"#utility.yul\":8795:8799   */\n      0x00\n        /* \"#utility.yul\":8833:8835   */\n      0x20\n        /* \"#utility.yul\":8822:8831   */\n      dup3\n        /* \"#utility.yul\":8818:8836   */\n      add\n        /* \"#utility.yul\":8810:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:8917   */\n      tag_434\n        /* \"#utility.yul\":8914:8915   */\n      0x00\n        /* \"#utility.yul\":8903:8912   */\n      dup4\n        /* \"#utility.yul\":8899:8916   */\n      add\n        /* \"#utility.yul\":8890:8896   */\n      dup5\n        /* \"#utility.yul\":8846:8917   */\n      tag_282\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8702:8924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9029   */\n    tag_283:\n        /* \"#utility.yul\":8982:8988   */\n      0x00\n        /* \"#utility.yul\":9016:9021   */\n      dup2\n        /* \"#utility.yul\":9010:9022   */\n      mload\n        /* \"#utility.yul\":9000:9022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8930:9029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9035:9204   */\n    tag_284:\n        /* \"#utility.yul\":9119:9130   */\n      0x00\n        /* \"#utility.yul\":9153:9159   */\n      dup3\n        /* \"#utility.yul\":9148:9151   */\n      dup3\n        /* \"#utility.yul\":9141:9160   */\n      mstore\n        /* \"#utility.yul\":9193:9197   */\n      0x20\n        /* \"#utility.yul\":9188:9191   */\n      dup3\n        /* \"#utility.yul\":9184:9198   */\n      add\n        /* \"#utility.yul\":9169:9198   */\n      swap1\n      pop\n        /* \"#utility.yul\":9035:9204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9210:9349   */\n    tag_285:\n        /* \"#utility.yul\":9299:9305   */\n      dup3\n        /* \"#utility.yul\":9294:9297   */\n      dup2\n        /* \"#utility.yul\":9289:9292   */\n      dup4\n        /* \"#utility.yul\":9283:9306   */\n      mcopy\n        /* \"#utility.yul\":9340:9341   */\n      0x00\n        /* \"#utility.yul\":9331:9337   */\n      dup4\n        /* \"#utility.yul\":9326:9329   */\n      dup4\n        /* \"#utility.yul\":9322:9338   */\n      add\n        /* \"#utility.yul\":9315:9342   */\n      mstore\n        /* \"#utility.yul\":9210:9349   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9355:9732   */\n    tag_286:\n        /* \"#utility.yul\":9443:9446   */\n      0x00\n        /* \"#utility.yul\":9471:9510   */\n      tag_439\n        /* \"#utility.yul\":9504:9509   */\n      dup3\n        /* \"#utility.yul\":9471:9510   */\n      tag_283\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9526:9597   */\n      tag_440\n        /* \"#utility.yul\":9590:9596   */\n      dup2\n        /* \"#utility.yul\":9585:9588   */\n      dup6\n        /* \"#utility.yul\":9526:9597   */\n      tag_284\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9519:9597   */\n      swap4\n      pop\n        /* \"#utility.yul\":9606:9671   */\n      tag_441\n        /* \"#utility.yul\":9664:9670   */\n      dup2\n        /* \"#utility.yul\":9659:9662   */\n      dup6\n        /* \"#utility.yul\":9652:9656   */\n      0x20\n        /* \"#utility.yul\":9645:9650   */\n      dup7\n        /* \"#utility.yul\":9641:9657   */\n      add\n        /* \"#utility.yul\":9606:9671   */\n      tag_285\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9696:9725   */\n      tag_442\n        /* \"#utility.yul\":9718:9724   */\n      dup2\n        /* \"#utility.yul\":9696:9725   */\n      tag_274\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9691:9694   */\n      dup5\n        /* \"#utility.yul\":9687:9726   */\n      add\n        /* \"#utility.yul\":9680:9726   */\n      swap2\n      pop\n        /* \"#utility.yul\":9447:9732   */\n      pop\n        /* \"#utility.yul\":9355:9732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9738:10703   */\n    tag_94:\n        /* \"#utility.yul\":10013:10017   */\n      0x00\n        /* \"#utility.yul\":10051:10054   */\n      0xe0\n        /* \"#utility.yul\":10040:10049   */\n      dup3\n        /* \"#utility.yul\":10036:10055   */\n      add\n        /* \"#utility.yul\":10028:10055   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10136   */\n      tag_444\n        /* \"#utility.yul\":10133:10134   */\n      0x00\n        /* \"#utility.yul\":10122:10131   */\n      dup4\n        /* \"#utility.yul\":10118:10135   */\n      add\n        /* \"#utility.yul\":10109:10115   */\n      dup11\n        /* \"#utility.yul\":10065:10136   */\n      tag_282\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10183:10192   */\n      dup2\n        /* \"#utility.yul\":10177:10181   */\n      dup2\n        /* \"#utility.yul\":10173:10193   */\n      sub\n        /* \"#utility.yul\":10168:10170   */\n      0x20\n        /* \"#utility.yul\":10157:10166   */\n      dup4\n        /* \"#utility.yul\":10153:10171   */\n      add\n        /* \"#utility.yul\":10146:10194   */\n      mstore\n        /* \"#utility.yul\":10211:10289   */\n      tag_445\n        /* \"#utility.yul\":10284:10288   */\n      dup2\n        /* \"#utility.yul\":10275:10281   */\n      dup10\n        /* \"#utility.yul\":10211:10289   */\n      tag_286\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10203:10289   */\n      swap1\n      pop\n        /* \"#utility.yul\":10299:10371   */\n      tag_446\n        /* \"#utility.yul\":10367:10369   */\n      0x40\n        /* \"#utility.yul\":10356:10365   */\n      dup4\n        /* \"#utility.yul\":10352:10370   */\n      add\n        /* \"#utility.yul\":10343:10349   */\n      dup9\n        /* \"#utility.yul\":10299:10371   */\n      tag_261\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10381:10453   */\n      tag_447\n        /* \"#utility.yul\":10449:10451   */\n      0x60\n        /* \"#utility.yul\":10438:10447   */\n      dup4\n        /* \"#utility.yul\":10434:10452   */\n      add\n        /* \"#utility.yul\":10425:10431   */\n      dup8\n        /* \"#utility.yul\":10381:10453   */\n      tag_261\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10463:10536   */\n      tag_448\n        /* \"#utility.yul\":10531:10534   */\n      0x80\n        /* \"#utility.yul\":10520:10529   */\n      dup4\n        /* \"#utility.yul\":10516:10535   */\n      add\n        /* \"#utility.yul\":10507:10513   */\n      dup7\n        /* \"#utility.yul\":10463:10536   */\n      tag_261\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10546:10619   */\n      tag_449\n        /* \"#utility.yul\":10614:10617   */\n      0xa0\n        /* \"#utility.yul\":10603:10612   */\n      dup4\n        /* \"#utility.yul\":10599:10618   */\n      add\n        /* \"#utility.yul\":10590:10596   */\n      dup6\n        /* \"#utility.yul\":10546:10619   */\n      tag_261\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10629:10696   */\n      tag_450\n        /* \"#utility.yul\":10691:10694   */\n      0xc0\n        /* \"#utility.yul\":10680:10689   */\n      dup4\n        /* \"#utility.yul\":10676:10695   */\n      add\n        /* \"#utility.yul\":10667:10673   */\n      dup5\n        /* \"#utility.yul\":10629:10696   */\n      tag_259\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9738:10703   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10709:10769   */\n    tag_287:\n        /* \"#utility.yul\":10737:10740   */\n      0x00\n        /* \"#utility.yul\":10758:10763   */\n      dup2\n        /* \"#utility.yul\":10751:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10709:10769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10775:10917   */\n    tag_288:\n        /* \"#utility.yul\":10825:10834   */\n      0x00\n        /* \"#utility.yul\":10858:10911   */\n      tag_453\n        /* \"#utility.yul\":10876:10910   */\n      tag_454\n        /* \"#utility.yul\":10885:10909   */\n      tag_455\n        /* \"#utility.yul\":10903:10908   */\n      dup5\n        /* \"#utility.yul\":10885:10909   */\n      tag_268\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10876:10910   */\n      tag_287\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10858:10911   */\n      tag_268\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10845:10911   */\n      swap1\n      pop\n        /* \"#utility.yul\":10775:10917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10923:11049   */\n    tag_289:\n        /* \"#utility.yul\":10973:10982   */\n      0x00\n        /* \"#utility.yul\":11006:11043   */\n      tag_457\n        /* \"#utility.yul\":11037:11042   */\n      dup3\n        /* \"#utility.yul\":11006:11043   */\n      tag_288\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10993:11043   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:11049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11055:11195   */\n    tag_290:\n        /* \"#utility.yul\":11119:11128   */\n      0x00\n        /* \"#utility.yul\":11152:11189   */\n      tag_459\n        /* \"#utility.yul\":11183:11188   */\n      dup3\n        /* \"#utility.yul\":11152:11189   */\n      tag_289\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11139:11189   */\n      swap1\n      pop\n        /* \"#utility.yul\":11055:11195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11201:11360   */\n    tag_291:\n        /* \"#utility.yul\":11302:11353   */\n      tag_461\n        /* \"#utility.yul\":11347:11352   */\n      dup2\n        /* \"#utility.yul\":11302:11353   */\n      tag_290\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11297:11300   */\n      dup3\n        /* \"#utility.yul\":11290:11354   */\n      mstore\n        /* \"#utility.yul\":11201:11360   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11366:11616   */\n    tag_103:\n        /* \"#utility.yul\":11473:11477   */\n      0x00\n        /* \"#utility.yul\":11511:11513   */\n      0x20\n        /* \"#utility.yul\":11500:11509   */\n      dup3\n        /* \"#utility.yul\":11496:11514   */\n      add\n        /* \"#utility.yul\":11488:11514   */\n      swap1\n      pop\n        /* \"#utility.yul\":11524:11609   */\n      tag_463\n        /* \"#utility.yul\":11606:11607   */\n      0x00\n        /* \"#utility.yul\":11595:11604   */\n      dup4\n        /* \"#utility.yul\":11591:11608   */\n      add\n        /* \"#utility.yul\":11582:11588   */\n      dup5\n        /* \"#utility.yul\":11524:11609   */\n      tag_291\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11366:11616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11622:11790   */\n    tag_292:\n        /* \"#utility.yul\":11762:11782   */\n      0x41504920646f6573206e6f742065786973740000000000000000000000000000\n        /* \"#utility.yul\":11758:11759   */\n      0x00\n        /* \"#utility.yul\":11750:11756   */\n      dup3\n        /* \"#utility.yul\":11746:11760   */\n      add\n        /* \"#utility.yul\":11739:11783   */\n      mstore\n        /* \"#utility.yul\":11622:11790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11796:12162   */\n    tag_293:\n        /* \"#utility.yul\":11938:11941   */\n      0x00\n        /* \"#utility.yul\":11959:12026   */\n      tag_466\n        /* \"#utility.yul\":12023:12025   */\n      0x12\n        /* \"#utility.yul\":12018:12021   */\n      dup4\n        /* \"#utility.yul\":11959:12026   */\n      tag_284\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11952:12026   */\n      swap2\n      pop\n        /* \"#utility.yul\":12035:12128   */\n      tag_467\n        /* \"#utility.yul\":12124:12127   */\n      dup3\n        /* \"#utility.yul\":12035:12128   */\n      tag_292\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12153:12155   */\n      0x20\n        /* \"#utility.yul\":12148:12151   */\n      dup3\n        /* \"#utility.yul\":12144:12156   */\n      add\n        /* \"#utility.yul\":12137:12156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11796:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12587   */\n    tag_111:\n        /* \"#utility.yul\":12334:12338   */\n      0x00\n        /* \"#utility.yul\":12372:12374   */\n      0x20\n        /* \"#utility.yul\":12361:12370   */\n      dup3\n        /* \"#utility.yul\":12357:12375   */\n      add\n        /* \"#utility.yul\":12349:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12430   */\n      dup2\n        /* \"#utility.yul\":12415:12419   */\n      dup2\n        /* \"#utility.yul\":12411:12431   */\n      sub\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12385:12432   */\n      mstore\n        /* \"#utility.yul\":12449:12580   */\n      tag_469\n        /* \"#utility.yul\":12575:12579   */\n      dup2\n        /* \"#utility.yul\":12449:12580   */\n      tag_293\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12441:12580   */\n      swap1\n      pop\n        /* \"#utility.yul\":12168:12587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12593:12765   */\n    tag_294:\n        /* \"#utility.yul\":12733:12757   */\n      0x4e6f2061637469766520737562736372697074696f6e00000000000000000000\n        /* \"#utility.yul\":12729:12730   */\n      0x00\n        /* \"#utility.yul\":12721:12727   */\n      dup3\n        /* \"#utility.yul\":12717:12731   */\n      add\n        /* \"#utility.yul\":12710:12758   */\n      mstore\n        /* \"#utility.yul\":12593:12765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12771:13137   */\n    tag_295:\n        /* \"#utility.yul\":12913:12916   */\n      0x00\n        /* \"#utility.yul\":12934:13001   */\n      tag_472\n        /* \"#utility.yul\":12998:13000   */\n      0x16\n        /* \"#utility.yul\":12993:12996   */\n      dup4\n        /* \"#utility.yul\":12934:13001   */\n      tag_284\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12927:13001   */\n      swap2\n      pop\n        /* \"#utility.yul\":13010:13103   */\n      tag_473\n        /* \"#utility.yul\":13099:13102   */\n      dup3\n        /* \"#utility.yul\":13010:13103   */\n      tag_294\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13128:13130   */\n      0x20\n        /* \"#utility.yul\":13123:13126   */\n      dup3\n        /* \"#utility.yul\":13119:13131   */\n      add\n        /* \"#utility.yul\":13112:13131   */\n      swap1\n      pop\n        /* \"#utility.yul\":12771:13137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13143:13562   */\n    tag_114:\n        /* \"#utility.yul\":13309:13313   */\n      0x00\n        /* \"#utility.yul\":13347:13349   */\n      0x20\n        /* \"#utility.yul\":13336:13345   */\n      dup3\n        /* \"#utility.yul\":13332:13350   */\n      add\n        /* \"#utility.yul\":13324:13350   */\n      swap1\n      pop\n        /* \"#utility.yul\":13396:13405   */\n      dup2\n        /* \"#utility.yul\":13390:13394   */\n      dup2\n        /* \"#utility.yul\":13386:13406   */\n      sub\n        /* \"#utility.yul\":13382:13383   */\n      0x00\n        /* \"#utility.yul\":13371:13380   */\n      dup4\n        /* \"#utility.yul\":13367:13384   */\n      add\n        /* \"#utility.yul\":13360:13407   */\n      mstore\n        /* \"#utility.yul\":13424:13555   */\n      tag_475\n        /* \"#utility.yul\":13550:13554   */\n      dup2\n        /* \"#utility.yul\":13424:13555   */\n      tag_295\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13416:13555   */\n      swap1\n      pop\n        /* \"#utility.yul\":13143:13562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13568:13742   */\n    tag_296:\n        /* \"#utility.yul\":13708:13734   */\n      0x415049206e616d652063616e6e6f7420626520656d7074790000000000000000\n        /* \"#utility.yul\":13704:13705   */\n      0x00\n        /* \"#utility.yul\":13696:13702   */\n      dup3\n        /* \"#utility.yul\":13692:13706   */\n      add\n        /* \"#utility.yul\":13685:13735   */\n      mstore\n        /* \"#utility.yul\":13568:13742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13748:14114   */\n    tag_297:\n        /* \"#utility.yul\":13890:13893   */\n      0x00\n        /* \"#utility.yul\":13911:13978   */\n      tag_478\n        /* \"#utility.yul\":13975:13977   */\n      0x18\n        /* \"#utility.yul\":13970:13973   */\n      dup4\n        /* \"#utility.yul\":13911:13978   */\n      tag_284\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13904:13978   */\n      swap2\n      pop\n        /* \"#utility.yul\":13987:14080   */\n      tag_479\n        /* \"#utility.yul\":14076:14079   */\n      dup3\n        /* \"#utility.yul\":13987:14080   */\n      tag_296\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14105:14107   */\n      0x20\n        /* \"#utility.yul\":14100:14103   */\n      dup3\n        /* \"#utility.yul\":14096:14108   */\n      add\n        /* \"#utility.yul\":14089:14108   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:14114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14120:14539   */\n    tag_119:\n        /* \"#utility.yul\":14286:14290   */\n      0x00\n        /* \"#utility.yul\":14324:14326   */\n      0x20\n        /* \"#utility.yul\":14313:14322   */\n      dup3\n        /* \"#utility.yul\":14309:14327   */\n      add\n        /* \"#utility.yul\":14301:14327   */\n      swap1\n      pop\n        /* \"#utility.yul\":14373:14382   */\n      dup2\n        /* \"#utility.yul\":14367:14371   */\n      dup2\n        /* \"#utility.yul\":14363:14383   */\n      sub\n        /* \"#utility.yul\":14359:14360   */\n      0x00\n        /* \"#utility.yul\":14348:14357   */\n      dup4\n        /* \"#utility.yul\":14344:14361   */\n      add\n        /* \"#utility.yul\":14337:14384   */\n      mstore\n        /* \"#utility.yul\":14401:14532   */\n      tag_481\n        /* \"#utility.yul\":14527:14531   */\n      dup2\n        /* \"#utility.yul\":14401:14532   */\n      tag_297\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14393:14532   */\n      swap1\n      pop\n        /* \"#utility.yul\":14120:14539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14545:14768   */\n    tag_298:\n        /* \"#utility.yul\":14685:14719   */\n      0x4174206c65617374206f6e652070726963696e67206f7074696f6e2072657175\n        /* \"#utility.yul\":14681:14682   */\n      0x00\n        /* \"#utility.yul\":14673:14679   */\n      dup3\n        /* \"#utility.yul\":14669:14683   */\n      add\n        /* \"#utility.yul\":14662:14720   */\n      mstore\n        /* \"#utility.yul\":14754:14760   */\n      0x6972656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14749:14751   */\n      0x20\n        /* \"#utility.yul\":14741:14747   */\n      dup3\n        /* \"#utility.yul\":14737:14752   */\n      add\n        /* \"#utility.yul\":14730:14761   */\n      mstore\n        /* \"#utility.yul\":14545:14768   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14774:15140   */\n    tag_299:\n        /* \"#utility.yul\":14916:14919   */\n      0x00\n        /* \"#utility.yul\":14937:15004   */\n      tag_484\n        /* \"#utility.yul\":15001:15003   */\n      0x24\n        /* \"#utility.yul\":14996:14999   */\n      dup4\n        /* \"#utility.yul\":14937:15004   */\n      tag_284\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14930:15004   */\n      swap2\n      pop\n        /* \"#utility.yul\":15013:15106   */\n      tag_485\n        /* \"#utility.yul\":15102:15105   */\n      dup3\n        /* \"#utility.yul\":15013:15106   */\n      tag_298\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15131:15133   */\n      0x40\n        /* \"#utility.yul\":15126:15129   */\n      dup3\n        /* \"#utility.yul\":15122:15134   */\n      add\n        /* \"#utility.yul\":15115:15134   */\n      swap1\n      pop\n        /* \"#utility.yul\":14774:15140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15146:15565   */\n    tag_123:\n        /* \"#utility.yul\":15312:15316   */\n      0x00\n        /* \"#utility.yul\":15350:15352   */\n      0x20\n        /* \"#utility.yul\":15339:15348   */\n      dup3\n        /* \"#utility.yul\":15335:15353   */\n      add\n        /* \"#utility.yul\":15327:15353   */\n      swap1\n      pop\n        /* \"#utility.yul\":15399:15408   */\n      dup2\n        /* \"#utility.yul\":15393:15397   */\n      dup2\n        /* \"#utility.yul\":15389:15409   */\n      sub\n        /* \"#utility.yul\":15385:15386   */\n      0x00\n        /* \"#utility.yul\":15374:15383   */\n      dup4\n        /* \"#utility.yul\":15370:15387   */\n      add\n        /* \"#utility.yul\":15363:15410   */\n      mstore\n        /* \"#utility.yul\":15427:15558   */\n      tag_487\n        /* \"#utility.yul\":15553:15557   */\n      dup2\n        /* \"#utility.yul\":15427:15558   */\n      tag_299\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15419:15558   */\n      swap1\n      pop\n        /* \"#utility.yul\":15146:15565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15571:15751   */\n    tag_300:\n        /* \"#utility.yul\":15619:15696   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15616:15617   */\n      0x00\n        /* \"#utility.yul\":15609:15697   */\n      mstore\n        /* \"#utility.yul\":15716:15720   */\n      0x11\n        /* \"#utility.yul\":15713:15714   */\n      0x04\n        /* \"#utility.yul\":15706:15721   */\n      mstore\n        /* \"#utility.yul\":15740:15744   */\n      0x24\n        /* \"#utility.yul\":15737:15738   */\n      0x00\n        /* \"#utility.yul\":15730:15745   */\n      revert\n        /* \"#utility.yul\":15757:15990   */\n    tag_125:\n        /* \"#utility.yul\":15796:15799   */\n      0x00\n        /* \"#utility.yul\":15819:15843   */\n      tag_490\n        /* \"#utility.yul\":15837:15842   */\n      dup3\n        /* \"#utility.yul\":15819:15843   */\n      tag_260\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15810:15843   */\n      swap2\n      pop\n        /* \"#utility.yul\":15865:15931   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15858:15863   */\n      dup3\n        /* \"#utility.yul\":15855:15932   */\n      sub\n        /* \"#utility.yul\":15852:15955   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":15935:15953   */\n      tag_492\n      tag_300\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15852:15955   */\n    tag_491:\n        /* \"#utility.yul\":15982:15983   */\n      0x01\n        /* \"#utility.yul\":15975:15980   */\n      dup3\n        /* \"#utility.yul\":15971:15984   */\n      add\n        /* \"#utility.yul\":15964:15984   */\n      swap1\n      pop\n        /* \"#utility.yul\":15757:15990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15996:16176   */\n    tag_301:\n        /* \"#utility.yul\":16044:16121   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16041:16042   */\n      0x00\n        /* \"#utility.yul\":16034:16122   */\n      mstore\n        /* \"#utility.yul\":16141:16145   */\n      0x22\n        /* \"#utility.yul\":16138:16139   */\n      0x04\n        /* \"#utility.yul\":16131:16146   */\n      mstore\n        /* \"#utility.yul\":16165:16169   */\n      0x24\n        /* \"#utility.yul\":16162:16163   */\n      0x00\n        /* \"#utility.yul\":16155:16170   */\n      revert\n        /* \"#utility.yul\":16182:16502   */\n    tag_189:\n        /* \"#utility.yul\":16226:16232   */\n      0x00\n        /* \"#utility.yul\":16263:16264   */\n      0x02\n        /* \"#utility.yul\":16257:16261   */\n      dup3\n        /* \"#utility.yul\":16253:16265   */\n      div\n        /* \"#utility.yul\":16243:16265   */\n      swap1\n      pop\n        /* \"#utility.yul\":16310:16311   */\n      0x01\n        /* \"#utility.yul\":16304:16308   */\n      dup3\n        /* \"#utility.yul\":16300:16312   */\n      and\n        /* \"#utility.yul\":16331:16349   */\n      dup1\n        /* \"#utility.yul\":16321:16402   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":16387:16391   */\n      0x7f\n        /* \"#utility.yul\":16379:16385   */\n      dup3\n        /* \"#utility.yul\":16375:16392   */\n      and\n        /* \"#utility.yul\":16365:16392   */\n      swap2\n      pop\n        /* \"#utility.yul\":16321:16402   */\n    tag_495:\n        /* \"#utility.yul\":16449:16451   */\n      0x20\n        /* \"#utility.yul\":16441:16447   */\n      dup3\n        /* \"#utility.yul\":16438:16452   */\n      lt\n        /* \"#utility.yul\":16418:16436   */\n      dup2\n        /* \"#utility.yul\":16415:16453   */\n      sub\n        /* \"#utility.yul\":16412:16496   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":16468:16486   */\n      tag_497\n      tag_301\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":16412:16496   */\n    tag_496:\n        /* \"#utility.yul\":16233:16502   */\n      pop\n        /* \"#utility.yul\":16182:16502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16508:16649   */\n    tag_302:\n        /* \"#utility.yul\":16557:16561   */\n      0x00\n        /* \"#utility.yul\":16580:16583   */\n      dup2\n        /* \"#utility.yul\":16572:16583   */\n      swap1\n      pop\n        /* \"#utility.yul\":16603:16606   */\n      dup2\n        /* \"#utility.yul\":16600:16601   */\n      0x00\n        /* \"#utility.yul\":16593:16607   */\n      mstore\n        /* \"#utility.yul\":16637:16641   */\n      0x20\n        /* \"#utility.yul\":16634:16635   */\n      0x00\n        /* \"#utility.yul\":16624:16642   */\n      keccak256\n        /* \"#utility.yul\":16616:16642   */\n      swap1\n      pop\n        /* \"#utility.yul\":16508:16649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16655:16748   */\n    tag_303:\n        /* \"#utility.yul\":16692:16698   */\n      0x00\n        /* \"#utility.yul\":16739:16741   */\n      0x20\n        /* \"#utility.yul\":16734:16736   */\n      0x1f\n        /* \"#utility.yul\":16727:16732   */\n      dup4\n        /* \"#utility.yul\":16723:16737   */\n      add\n        /* \"#utility.yul\":16719:16742   */\n      div\n        /* \"#utility.yul\":16709:16742   */\n      swap1\n      pop\n        /* \"#utility.yul\":16655:16748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16754:16861   */\n    tag_304:\n        /* \"#utility.yul\":16798:16806   */\n      0x00\n        /* \"#utility.yul\":16848:16853   */\n      dup3\n        /* \"#utility.yul\":16842:16846   */\n      dup3\n        /* \"#utility.yul\":16838:16854   */\n      shl\n        /* \"#utility.yul\":16817:16854   */\n      swap1\n      pop\n        /* \"#utility.yul\":16754:16861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16867:17260   */\n    tag_305:\n        /* \"#utility.yul\":16936:16942   */\n      0x00\n        /* \"#utility.yul\":16986:16987   */\n      0x08\n        /* \"#utility.yul\":16974:16984   */\n      dup4\n        /* \"#utility.yul\":16970:16988   */\n      mul\n        /* \"#utility.yul\":17009:17106   */\n      tag_502\n        /* \"#utility.yul\":17039:17105   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17028:17037   */\n      dup3\n        /* \"#utility.yul\":17009:17106   */\n      tag_304\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17127:17166   */\n      tag_503\n        /* \"#utility.yul\":17157:17165   */\n      dup7\n        /* \"#utility.yul\":17146:17155   */\n      dup4\n        /* \"#utility.yul\":17127:17166   */\n      tag_304\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17115:17166   */\n      swap6\n      pop\n        /* \"#utility.yul\":17199:17203   */\n      dup1\n        /* \"#utility.yul\":17195:17204   */\n      not\n        /* \"#utility.yul\":17188:17193   */\n      dup5\n        /* \"#utility.yul\":17184:17205   */\n      and\n        /* \"#utility.yul\":17175:17205   */\n      swap4\n      pop\n        /* \"#utility.yul\":17248:17252   */\n      dup1\n        /* \"#utility.yul\":17238:17246   */\n      dup7\n        /* \"#utility.yul\":17234:17253   */\n      and\n        /* \"#utility.yul\":17227:17232   */\n      dup5\n        /* \"#utility.yul\":17224:17254   */\n      or\n        /* \"#utility.yul\":17214:17254   */\n      swap3\n      pop\n        /* \"#utility.yul\":16943:17260   */\n      pop\n      pop\n        /* \"#utility.yul\":16867:17260   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17266:17408   */\n    tag_306:\n        /* \"#utility.yul\":17316:17325   */\n      0x00\n        /* \"#utility.yul\":17349:17402   */\n      tag_505\n        /* \"#utility.yul\":17367:17401   */\n      tag_506\n        /* \"#utility.yul\":17376:17400   */\n      tag_507\n        /* \"#utility.yul\":17394:17399   */\n      dup5\n        /* \"#utility.yul\":17376:17400   */\n      tag_260\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17367:17401   */\n      tag_287\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17349:17402   */\n      tag_260\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17336:17402   */\n      swap1\n      pop\n        /* \"#utility.yul\":17266:17408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17414:17489   */\n    tag_307:\n        /* \"#utility.yul\":17457:17460   */\n      0x00\n        /* \"#utility.yul\":17478:17483   */\n      dup2\n        /* \"#utility.yul\":17471:17483   */\n      swap1\n      pop\n        /* \"#utility.yul\":17414:17489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17495:17764   */\n    tag_308:\n        /* \"#utility.yul\":17605:17644   */\n      tag_510\n        /* \"#utility.yul\":17636:17643   */\n      dup4\n        /* \"#utility.yul\":17605:17644   */\n      tag_306\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17666:17757   */\n      tag_511\n        /* \"#utility.yul\":17715:17756   */\n      tag_512\n        /* \"#utility.yul\":17739:17755   */\n      dup3\n        /* \"#utility.yul\":17715:17756   */\n      tag_307\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17707:17713   */\n      dup5\n        /* \"#utility.yul\":17700:17704   */\n      dup5\n        /* \"#utility.yul\":17694:17705   */\n      sload\n        /* \"#utility.yul\":17666:17757   */\n      tag_305\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17660:17664   */\n      dup3\n        /* \"#utility.yul\":17653:17758   */\n      sstore\n        /* \"#utility.yul\":17571:17764   */\n      pop\n        /* \"#utility.yul\":17495:17764   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17770:17843   */\n    tag_309:\n        /* \"#utility.yul\":17815:17818   */\n      0x00\n        /* \"#utility.yul\":17770:17843   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17849:18038   */\n    tag_310:\n        /* \"#utility.yul\":17926:17958   */\n      tag_515\n      tag_309\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17967:18032   */\n      tag_516\n        /* \"#utility.yul\":18025:18031   */\n      dup2\n        /* \"#utility.yul\":18017:18023   */\n      dup5\n        /* \"#utility.yul\":18011:18015   */\n      dup5\n        /* \"#utility.yul\":17967:18032   */\n      tag_308\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17902:18038   */\n      pop\n        /* \"#utility.yul\":17849:18038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18044:18230   */\n    tag_311:\n        /* \"#utility.yul\":18104:18224   */\n    tag_518:\n        /* \"#utility.yul\":18121:18124   */\n      dup2\n        /* \"#utility.yul\":18114:18119   */\n      dup2\n        /* \"#utility.yul\":18111:18125   */\n      lt\n        /* \"#utility.yul\":18104:18224   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":18175:18214   */\n      tag_521\n        /* \"#utility.yul\":18212:18213   */\n      0x00\n        /* \"#utility.yul\":18205:18210   */\n      dup3\n        /* \"#utility.yul\":18175:18214   */\n      tag_310\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18148:18149   */\n      0x01\n        /* \"#utility.yul\":18141:18146   */\n      dup2\n        /* \"#utility.yul\":18137:18150   */\n      add\n        /* \"#utility.yul\":18128:18150   */\n      swap1\n      pop\n        /* \"#utility.yul\":18104:18224   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":18044:18230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18236:18779   */\n    tag_312:\n        /* \"#utility.yul\":18337:18339   */\n      0x1f\n        /* \"#utility.yul\":18332:18335   */\n      dup3\n        /* \"#utility.yul\":18329:18340   */\n      gt\n        /* \"#utility.yul\":18326:18772   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":18371:18409   */\n      tag_524\n        /* \"#utility.yul\":18403:18408   */\n      dup2\n        /* \"#utility.yul\":18371:18409   */\n      tag_302\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18455:18484   */\n      tag_525\n        /* \"#utility.yul\":18473:18483   */\n      dup5\n        /* \"#utility.yul\":18455:18484   */\n      tag_303\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":18445:18453   */\n      dup2\n        /* \"#utility.yul\":18441:18485   */\n      add\n        /* \"#utility.yul\":18638:18640   */\n      0x20\n        /* \"#utility.yul\":18626:18636   */\n      dup6\n        /* \"#utility.yul\":18623:18641   */\n      lt\n        /* \"#utility.yul\":18620:18669   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":18659:18667   */\n      dup2\n        /* \"#utility.yul\":18644:18667   */\n      swap1\n      pop\n        /* \"#utility.yul\":18620:18669   */\n    tag_526:\n        /* \"#utility.yul\":18682:18762   */\n      tag_527\n        /* \"#utility.yul\":18738:18760   */\n      tag_528\n        /* \"#utility.yul\":18756:18759   */\n      dup6\n        /* \"#utility.yul\":18738:18760   */\n      tag_303\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18728:18736   */\n      dup4\n        /* \"#utility.yul\":18724:18761   */\n      add\n        /* \"#utility.yul\":18711:18722   */\n      dup3\n        /* \"#utility.yul\":18682:18762   */\n      tag_311\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18341:18772   */\n      pop\n      pop\n        /* \"#utility.yul\":18326:18772   */\n    tag_523:\n        /* \"#utility.yul\":18236:18779   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18785:18902   */\n    tag_313:\n        /* \"#utility.yul\":18839:18847   */\n      0x00\n        /* \"#utility.yul\":18889:18894   */\n      dup3\n        /* \"#utility.yul\":18883:18887   */\n      dup3\n        /* \"#utility.yul\":18879:18895   */\n      shr\n        /* \"#utility.yul\":18858:18895   */\n      swap1\n      pop\n        /* \"#utility.yul\":18785:18902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18908:19077   */\n    tag_314:\n        /* \"#utility.yul\":18952:18958   */\n      0x00\n        /* \"#utility.yul\":18985:19036   */\n      tag_531\n        /* \"#utility.yul\":19033:19034   */\n      0x00\n        /* \"#utility.yul\":19029:19035   */\n      not\n        /* \"#utility.yul\":19021:19026   */\n      dup5\n        /* \"#utility.yul\":19018:19019   */\n      0x08\n        /* \"#utility.yul\":19014:19027   */\n      mul\n        /* \"#utility.yul\":18985:19036   */\n      tag_313\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18981:19037   */\n      not\n        /* \"#utility.yul\":19066:19070   */\n      dup1\n        /* \"#utility.yul\":19060:19064   */\n      dup4\n        /* \"#utility.yul\":19056:19071   */\n      and\n        /* \"#utility.yul\":19046:19071   */\n      swap2\n      pop\n        /* \"#utility.yul\":18959:19077   */\n      pop\n        /* \"#utility.yul\":18908:19077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19082:19377   */\n    tag_315:\n        /* \"#utility.yul\":19158:19162   */\n      0x00\n        /* \"#utility.yul\":19304:19333   */\n      tag_533\n        /* \"#utility.yul\":19329:19332   */\n      dup4\n        /* \"#utility.yul\":19323:19327   */\n      dup4\n        /* \"#utility.yul\":19304:19333   */\n      tag_314\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19296:19333   */\n      swap2\n      pop\n        /* \"#utility.yul\":19366:19369   */\n      dup3\n        /* \"#utility.yul\":19363:19364   */\n      0x02\n        /* \"#utility.yul\":19359:19370   */\n      mul\n        /* \"#utility.yul\":19353:19357   */\n      dup3\n        /* \"#utility.yul\":19350:19371   */\n      or\n        /* \"#utility.yul\":19342:19371   */\n      swap1\n      pop\n        /* \"#utility.yul\":19082:19377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19382:20777   */\n    tag_127:\n        /* \"#utility.yul\":19499:19536   */\n      tag_535\n        /* \"#utility.yul\":19532:19535   */\n      dup3\n        /* \"#utility.yul\":19499:19536   */\n      tag_283\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":19601:19619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19593:19599   */\n      dup2\n        /* \"#utility.yul\":19590:19620   */\n      gt\n        /* \"#utility.yul\":19587:19643   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":19623:19641   */\n      tag_537\n      tag_275\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19587:19643   */\n    tag_536:\n        /* \"#utility.yul\":19667:19705   */\n      tag_538\n        /* \"#utility.yul\":19699:19703   */\n      dup3\n        /* \"#utility.yul\":19693:19704   */\n      sload\n        /* \"#utility.yul\":19667:19705   */\n      tag_189\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19752:19819   */\n      tag_539\n        /* \"#utility.yul\":19812:19818   */\n      dup3\n        /* \"#utility.yul\":19804:19810   */\n      dup3\n        /* \"#utility.yul\":19798:19802   */\n      dup6\n        /* \"#utility.yul\":19752:19819   */\n      tag_312\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19846:19847   */\n      0x00\n        /* \"#utility.yul\":19870:19874   */\n      0x20\n        /* \"#utility.yul\":19857:19874   */\n      swap1\n      pop\n        /* \"#utility.yul\":19902:19904   */\n      0x1f\n        /* \"#utility.yul\":19894:19900   */\n      dup4\n        /* \"#utility.yul\":19891:19905   */\n      gt\n        /* \"#utility.yul\":19919:19920   */\n      0x01\n        /* \"#utility.yul\":19914:20532   */\n      dup2\n      eq\n      tag_541\n      jumpi\n        /* \"#utility.yul\":20576:20577   */\n      0x00\n        /* \"#utility.yul\":20593:20599   */\n      dup5\n        /* \"#utility.yul\":20590:20667   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":20642:20651   */\n      dup3\n        /* \"#utility.yul\":20637:20640   */\n      dup8\n        /* \"#utility.yul\":20633:20652   */\n      add\n        /* \"#utility.yul\":20627:20653   */\n      mload\n        /* \"#utility.yul\":20618:20653   */\n      swap1\n      pop\n        /* \"#utility.yul\":20590:20667   */\n    tag_542:\n        /* \"#utility.yul\":20693:20760   */\n      tag_543\n        /* \"#utility.yul\":20753:20759   */\n      dup6\n        /* \"#utility.yul\":20746:20751   */\n      dup3\n        /* \"#utility.yul\":20693:20760   */\n      tag_315\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20687:20691   */\n      dup7\n        /* \"#utility.yul\":20680:20761   */\n      sstore\n        /* \"#utility.yul\":20549:20771   */\n      pop\n        /* \"#utility.yul\":19884:20771   */\n      jump(tag_540)\n        /* \"#utility.yul\":19914:20532   */\n    tag_541:\n        /* \"#utility.yul\":19966:19970   */\n      0x1f\n        /* \"#utility.yul\":19962:19971   */\n      not\n        /* \"#utility.yul\":19954:19960   */\n      dup5\n        /* \"#utility.yul\":19950:19972   */\n      and\n        /* \"#utility.yul\":20000:20037   */\n      tag_544\n        /* \"#utility.yul\":20032:20036   */\n      dup7\n        /* \"#utility.yul\":20000:20037   */\n      tag_302\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":20059:20060   */\n      0x00\n        /* \"#utility.yul\":20073:20281   */\n    tag_545:\n        /* \"#utility.yul\":20087:20094   */\n      dup3\n        /* \"#utility.yul\":20084:20085   */\n      dup2\n        /* \"#utility.yul\":20081:20095   */\n      lt\n        /* \"#utility.yul\":20073:20281   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":20166:20175   */\n      dup5\n        /* \"#utility.yul\":20161:20164   */\n      dup10\n        /* \"#utility.yul\":20157:20176   */\n      add\n        /* \"#utility.yul\":20151:20177   */\n      mload\n        /* \"#utility.yul\":20143:20149   */\n      dup3\n        /* \"#utility.yul\":20136:20178   */\n      sstore\n        /* \"#utility.yul\":20217:20218   */\n      0x01\n        /* \"#utility.yul\":20209:20215   */\n      dup3\n        /* \"#utility.yul\":20205:20219   */\n      add\n        /* \"#utility.yul\":20195:20219   */\n      swap2\n      pop\n        /* \"#utility.yul\":20264:20266   */\n      0x20\n        /* \"#utility.yul\":20253:20262   */\n      dup6\n        /* \"#utility.yul\":20249:20267   */\n      add\n        /* \"#utility.yul\":20236:20267   */\n      swap5\n      pop\n        /* \"#utility.yul\":20110:20114   */\n      0x20\n        /* \"#utility.yul\":20107:20108   */\n      dup2\n        /* \"#utility.yul\":20103:20115   */\n      add\n        /* \"#utility.yul\":20098:20115   */\n      swap1\n      pop\n        /* \"#utility.yul\":20073:20281   */\n      jump(tag_545)\n    tag_547:\n        /* \"#utility.yul\":20309:20315   */\n      dup7\n        /* \"#utility.yul\":20300:20307   */\n      dup4\n        /* \"#utility.yul\":20297:20316   */\n      lt\n        /* \"#utility.yul\":20294:20473   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":20367:20376   */\n      dup5\n        /* \"#utility.yul\":20362:20365   */\n      dup10\n        /* \"#utility.yul\":20358:20377   */\n      add\n        /* \"#utility.yul\":20352:20378   */\n      mload\n        /* \"#utility.yul\":20410:20458   */\n      tag_549\n        /* \"#utility.yul\":20452:20456   */\n      0x1f\n        /* \"#utility.yul\":20444:20450   */\n      dup10\n        /* \"#utility.yul\":20440:20457   */\n      and\n        /* \"#utility.yul\":20429:20438   */\n      dup3\n        /* \"#utility.yul\":20410:20458   */\n      tag_314\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":20402:20408   */\n      dup4\n        /* \"#utility.yul\":20395:20459   */\n      sstore\n        /* \"#utility.yul\":20317:20473   */\n      pop\n        /* \"#utility.yul\":20294:20473   */\n    tag_548:\n        /* \"#utility.yul\":20519:20520   */\n      0x01\n        /* \"#utility.yul\":20515:20516   */\n      0x02\n        /* \"#utility.yul\":20507:20513   */\n      dup9\n        /* \"#utility.yul\":20503:20517   */\n      mul\n        /* \"#utility.yul\":20499:20521   */\n      add\n        /* \"#utility.yul\":20493:20497   */\n      dup9\n        /* \"#utility.yul\":20486:20522   */\n      sstore\n        /* \"#utility.yul\":19921:20532   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19884:20771   */\n    tag_540:\n      pop\n        /* \"#utility.yul\":19474:20777   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19382:20777   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20783:21316   */\n    tag_129:\n        /* \"#utility.yul\":20952:20956   */\n      0x00\n        /* \"#utility.yul\":20990:20992   */\n      0x60\n        /* \"#utility.yul\":20979:20988   */\n      dup3\n        /* \"#utility.yul\":20975:20993   */\n      add\n        /* \"#utility.yul\":20967:20993   */\n      swap1\n      pop\n        /* \"#utility.yul\":21039:21048   */\n      dup2\n        /* \"#utility.yul\":21033:21037   */\n      dup2\n        /* \"#utility.yul\":21029:21049   */\n      sub\n        /* \"#utility.yul\":21025:21026   */\n      0x00\n        /* \"#utility.yul\":21014:21023   */\n      dup4\n        /* \"#utility.yul\":21010:21027   */\n      add\n        /* \"#utility.yul\":21003:21050   */\n      mstore\n        /* \"#utility.yul\":21067:21145   */\n      tag_551\n        /* \"#utility.yul\":21140:21144   */\n      dup2\n        /* \"#utility.yul\":21131:21137   */\n      dup7\n        /* \"#utility.yul\":21067:21145   */\n      tag_286\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21059:21145   */\n      swap1\n      pop\n        /* \"#utility.yul\":21155:21227   */\n      tag_552\n        /* \"#utility.yul\":21223:21225   */\n      0x20\n        /* \"#utility.yul\":21212:21221   */\n      dup4\n        /* \"#utility.yul\":21208:21226   */\n      add\n        /* \"#utility.yul\":21199:21205   */\n      dup6\n        /* \"#utility.yul\":21155:21227   */\n      tag_261\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21237:21309   */\n      tag_553\n        /* \"#utility.yul\":21305:21307   */\n      0x40\n        /* \"#utility.yul\":21294:21303   */\n      dup4\n        /* \"#utility.yul\":21290:21308   */\n      add\n        /* \"#utility.yul\":21281:21287   */\n      dup5\n        /* \"#utility.yul\":21237:21309   */\n      tag_261\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":20783:21316   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21322:21543   */\n    tag_316:\n        /* \"#utility.yul\":21462:21496   */\n      0x4d757374207075726368617365206174206c65617374206f6e65207265717565\n        /* \"#utility.yul\":21458:21459   */\n      0x00\n        /* \"#utility.yul\":21450:21456   */\n      dup3\n        /* \"#utility.yul\":21446:21460   */\n      add\n        /* \"#utility.yul\":21439:21497   */\n      mstore\n        /* \"#utility.yul\":21531:21535   */\n      0x7374000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21526:21528   */\n      0x20\n        /* \"#utility.yul\":21518:21524   */\n      dup3\n        /* \"#utility.yul\":21514:21529   */\n      add\n        /* \"#utility.yul\":21507:21536   */\n      mstore\n        /* \"#utility.yul\":21322:21543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21549:21915   */\n    tag_317:\n        /* \"#utility.yul\":21691:21694   */\n      0x00\n        /* \"#utility.yul\":21712:21779   */\n      tag_556\n        /* \"#utility.yul\":21776:21778   */\n      0x22\n        /* \"#utility.yul\":21771:21774   */\n      dup4\n        /* \"#utility.yul\":21712:21779   */\n      tag_284\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":21705:21779   */\n      swap2\n      pop\n        /* \"#utility.yul\":21788:21881   */\n      tag_557\n        /* \"#utility.yul\":21877:21880   */\n      dup3\n        /* \"#utility.yul\":21788:21881   */\n      tag_316\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":21906:21908   */\n      0x40\n        /* \"#utility.yul\":21901:21904   */\n      dup3\n        /* \"#utility.yul\":21897:21909   */\n      add\n        /* \"#utility.yul\":21890:21909   */\n      swap1\n      pop\n        /* \"#utility.yul\":21549:21915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21921:22340   */\n    tag_135:\n        /* \"#utility.yul\":22087:22091   */\n      0x00\n        /* \"#utility.yul\":22125:22127   */\n      0x20\n        /* \"#utility.yul\":22114:22123   */\n      dup3\n        /* \"#utility.yul\":22110:22128   */\n      add\n        /* \"#utility.yul\":22102:22128   */\n      swap1\n      pop\n        /* \"#utility.yul\":22174:22183   */\n      dup2\n        /* \"#utility.yul\":22168:22172   */\n      dup2\n        /* \"#utility.yul\":22164:22184   */\n      sub\n        /* \"#utility.yul\":22160:22161   */\n      0x00\n        /* \"#utility.yul\":22149:22158   */\n      dup4\n        /* \"#utility.yul\":22145:22162   */\n      add\n        /* \"#utility.yul\":22138:22185   */\n      mstore\n        /* \"#utility.yul\":22202:22333   */\n      tag_559\n        /* \"#utility.yul\":22328:22332   */\n      dup2\n        /* \"#utility.yul\":22202:22333   */\n      tag_317\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22194:22333   */\n      swap1\n      pop\n        /* \"#utility.yul\":21921:22340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22346:22513   */\n    tag_318:\n        /* \"#utility.yul\":22486:22505   */\n      0x415049206973206e6f7420616374697665000000000000000000000000000000\n        /* \"#utility.yul\":22482:22483   */\n      0x00\n        /* \"#utility.yul\":22474:22480   */\n      dup3\n        /* \"#utility.yul\":22470:22484   */\n      add\n        /* \"#utility.yul\":22463:22506   */\n      mstore\n        /* \"#utility.yul\":22346:22513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22519:22885   */\n    tag_319:\n        /* \"#utility.yul\":22661:22664   */\n      0x00\n        /* \"#utility.yul\":22682:22749   */\n      tag_562\n        /* \"#utility.yul\":22746:22748   */\n      0x11\n        /* \"#utility.yul\":22741:22744   */\n      dup4\n        /* \"#utility.yul\":22682:22749   */\n      tag_284\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":22675:22749   */\n      swap2\n      pop\n        /* \"#utility.yul\":22758:22851   */\n      tag_563\n        /* \"#utility.yul\":22847:22850   */\n      dup3\n        /* \"#utility.yul\":22758:22851   */\n      tag_318\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":22876:22878   */\n      0x20\n        /* \"#utility.yul\":22871:22874   */\n      dup3\n        /* \"#utility.yul\":22867:22879   */\n      add\n        /* \"#utility.yul\":22860:22879   */\n      swap1\n      pop\n        /* \"#utility.yul\":22519:22885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22891:23310   */\n    tag_138:\n        /* \"#utility.yul\":23057:23061   */\n      0x00\n        /* \"#utility.yul\":23095:23097   */\n      0x20\n        /* \"#utility.yul\":23084:23093   */\n      dup3\n        /* \"#utility.yul\":23080:23098   */\n      add\n        /* \"#utility.yul\":23072:23098   */\n      swap1\n      pop\n        /* \"#utility.yul\":23144:23153   */\n      dup2\n        /* \"#utility.yul\":23138:23142   */\n      dup2\n        /* \"#utility.yul\":23134:23154   */\n      sub\n        /* \"#utility.yul\":23130:23131   */\n      0x00\n        /* \"#utility.yul\":23119:23128   */\n      dup4\n        /* \"#utility.yul\":23115:23132   */\n      add\n        /* \"#utility.yul\":23108:23155   */\n      mstore\n        /* \"#utility.yul\":23172:23303   */\n      tag_565\n        /* \"#utility.yul\":23298:23302   */\n      dup2\n        /* \"#utility.yul\":23172:23303   */\n      tag_319\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":23164:23303   */\n      swap1\n      pop\n        /* \"#utility.yul\":22891:23310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23316:23726   */\n    tag_140:\n        /* \"#utility.yul\":23356:23363   */\n      0x00\n        /* \"#utility.yul\":23379:23399   */\n      tag_567\n        /* \"#utility.yul\":23397:23398   */\n      dup3\n        /* \"#utility.yul\":23379:23399   */\n      tag_260\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23374:23399   */\n      swap2\n      pop\n        /* \"#utility.yul\":23413:23433   */\n      tag_568\n        /* \"#utility.yul\":23431:23432   */\n      dup4\n        /* \"#utility.yul\":23413:23433   */\n      tag_260\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":23408:23433   */\n      swap3\n      pop\n        /* \"#utility.yul\":23468:23469   */\n      dup3\n        /* \"#utility.yul\":23465:23466   */\n      dup3\n        /* \"#utility.yul\":23461:23470   */\n      mul\n        /* \"#utility.yul\":23490:23520   */\n      tag_569\n        /* \"#utility.yul\":23508:23519   */\n      dup2\n        /* \"#utility.yul\":23490:23520   */\n      tag_260\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":23479:23520   */\n      swap2\n      pop\n        /* \"#utility.yul\":23669:23670   */\n      dup3\n        /* \"#utility.yul\":23660:23667   */\n      dup3\n        /* \"#utility.yul\":23656:23671   */\n      div\n        /* \"#utility.yul\":23653:23654   */\n      dup5\n        /* \"#utility.yul\":23650:23672   */\n      eq\n        /* \"#utility.yul\":23630:23631   */\n      dup4\n        /* \"#utility.yul\":23623:23632   */\n      iszero\n        /* \"#utility.yul\":23603:23686   */\n      or\n        /* \"#utility.yul\":23580:23719   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":23699:23717   */\n      tag_571\n      tag_300\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":23580:23719   */\n    tag_570:\n        /* \"#utility.yul\":23364:23726   */\n      pop\n        /* \"#utility.yul\":23316:23726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23732:23923   */\n    tag_144:\n        /* \"#utility.yul\":23772:23775   */\n      0x00\n        /* \"#utility.yul\":23791:23811   */\n      tag_573\n        /* \"#utility.yul\":23809:23810   */\n      dup3\n        /* \"#utility.yul\":23791:23811   */\n      tag_260\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":23786:23811   */\n      swap2\n      pop\n        /* \"#utility.yul\":23825:23845   */\n      tag_574\n        /* \"#utility.yul\":23843:23844   */\n      dup4\n        /* \"#utility.yul\":23825:23845   */\n      tag_260\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":23820:23845   */\n      swap3\n      pop\n        /* \"#utility.yul\":23868:23869   */\n      dup3\n        /* \"#utility.yul\":23865:23866   */\n      dup3\n        /* \"#utility.yul\":23861:23870   */\n      add\n        /* \"#utility.yul\":23854:23870   */\n      swap1\n      pop\n        /* \"#utility.yul\":23889:23892   */\n      dup1\n        /* \"#utility.yul\":23886:23887   */\n      dup3\n        /* \"#utility.yul\":23883:23893   */\n      gt\n        /* \"#utility.yul\":23880:23916   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":23896:23914   */\n      tag_576\n      tag_300\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":23880:23916   */\n    tag_575:\n        /* \"#utility.yul\":23732:23923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23929:24072   */\n    tag_320:\n        /* \"#utility.yul\":23986:23991   */\n      0x00\n        /* \"#utility.yul\":24017:24023   */\n      dup2\n        /* \"#utility.yul\":24011:24024   */\n      mload\n        /* \"#utility.yul\":24002:24024   */\n      swap1\n      pop\n        /* \"#utility.yul\":24033:24066   */\n      tag_578\n        /* \"#utility.yul\":24060:24065   */\n      dup2\n        /* \"#utility.yul\":24033:24066   */\n      tag_262\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23929:24072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24078:24429   */\n    tag_166:\n        /* \"#utility.yul\":24148:24154   */\n      0x00\n        /* \"#utility.yul\":24197:24199   */\n      0x20\n        /* \"#utility.yul\":24185:24194   */\n      dup3\n        /* \"#utility.yul\":24176:24183   */\n      dup5\n        /* \"#utility.yul\":24172:24195   */\n      sub\n        /* \"#utility.yul\":24168:24200   */\n      slt\n        /* \"#utility.yul\":24165:24284   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":24203:24282   */\n      tag_581\n      tag_253\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":24165:24284   */\n    tag_580:\n        /* \"#utility.yul\":24323:24324   */\n      0x00\n        /* \"#utility.yul\":24348:24412   */\n      tag_582\n        /* \"#utility.yul\":24404:24411   */\n      dup5\n        /* \"#utility.yul\":24395:24401   */\n      dup3\n        /* \"#utility.yul\":24384:24393   */\n      dup6\n        /* \"#utility.yul\":24380:24402   */\n      add\n        /* \"#utility.yul\":24348:24412   */\n      tag_320\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":24338:24412   */\n      swap2\n      pop\n        /* \"#utility.yul\":24294:24422   */\n      pop\n        /* \"#utility.yul\":24078:24429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24435:24606   */\n    tag_321:\n        /* \"#utility.yul\":24575:24598   */\n      0x4e6f2072656d61696e696e672072657175657374730000000000000000000000\n        /* \"#utility.yul\":24571:24572   */\n      0x00\n        /* \"#utility.yul\":24563:24569   */\n      dup3\n        /* \"#utility.yul\":24559:24573   */\n      add\n        /* \"#utility.yul\":24552:24599   */\n      mstore\n        /* \"#utility.yul\":24435:24606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24612:24978   */\n    tag_322:\n        /* \"#utility.yul\":24754:24757   */\n      0x00\n        /* \"#utility.yul\":24775:24842   */\n      tag_585\n        /* \"#utility.yul\":24839:24841   */\n      0x15\n        /* \"#utility.yul\":24834:24837   */\n      dup4\n        /* \"#utility.yul\":24775:24842   */\n      tag_284\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":24768:24842   */\n      swap2\n      pop\n        /* \"#utility.yul\":24851:24944   */\n      tag_586\n        /* \"#utility.yul\":24940:24943   */\n      dup3\n        /* \"#utility.yul\":24851:24944   */\n      tag_321\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24969:24971   */\n      0x20\n        /* \"#utility.yul\":24964:24967   */\n      dup3\n        /* \"#utility.yul\":24960:24972   */\n      add\n        /* \"#utility.yul\":24953:24972   */\n      swap1\n      pop\n        /* \"#utility.yul\":24612:24978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24984:25403   */\n    tag_174:\n        /* \"#utility.yul\":25150:25154   */\n      0x00\n        /* \"#utility.yul\":25188:25190   */\n      0x20\n        /* \"#utility.yul\":25177:25186   */\n      dup3\n        /* \"#utility.yul\":25173:25191   */\n      add\n        /* \"#utility.yul\":25165:25191   */\n      swap1\n      pop\n        /* \"#utility.yul\":25237:25246   */\n      dup2\n        /* \"#utility.yul\":25231:25235   */\n      dup2\n        /* \"#utility.yul\":25227:25247   */\n      sub\n        /* \"#utility.yul\":25223:25224   */\n      0x00\n        /* \"#utility.yul\":25212:25221   */\n      dup4\n        /* \"#utility.yul\":25208:25225   */\n      add\n        /* \"#utility.yul\":25201:25248   */\n      mstore\n        /* \"#utility.yul\":25265:25396   */\n      tag_588\n        /* \"#utility.yul\":25391:25395   */\n      dup2\n        /* \"#utility.yul\":25265:25396   */\n      tag_322\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":25257:25396   */\n      swap1\n      pop\n        /* \"#utility.yul\":24984:25403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25409:25603   */\n    tag_176:\n        /* \"#utility.yul\":25449:25453   */\n      0x00\n        /* \"#utility.yul\":25469:25489   */\n      tag_590\n        /* \"#utility.yul\":25487:25488   */\n      dup3\n        /* \"#utility.yul\":25469:25489   */\n      tag_260\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":25464:25489   */\n      swap2\n      pop\n        /* \"#utility.yul\":25503:25523   */\n      tag_591\n        /* \"#utility.yul\":25521:25522   */\n      dup4\n        /* \"#utility.yul\":25503:25523   */\n      tag_260\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":25498:25523   */\n      swap3\n      pop\n        /* \"#utility.yul\":25547:25548   */\n      dup3\n        /* \"#utility.yul\":25544:25545   */\n      dup3\n        /* \"#utility.yul\":25540:25549   */\n      sub\n        /* \"#utility.yul\":25532:25549   */\n      swap1\n      pop\n        /* \"#utility.yul\":25571:25572   */\n      dup2\n        /* \"#utility.yul\":25565:25569   */\n      dup2\n        /* \"#utility.yul\":25562:25573   */\n      gt\n        /* \"#utility.yul\":25559:25596   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":25576:25594   */\n      tag_593\n      tag_300\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":25559:25596   */\n    tag_592:\n        /* \"#utility.yul\":25409:25603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25609:25782   */\n    tag_323:\n        /* \"#utility.yul\":25749:25774   */\n      0x4e6f206561726e696e677320746f207769746864726177000000000000000000\n        /* \"#utility.yul\":25745:25746   */\n      0x00\n        /* \"#utility.yul\":25737:25743   */\n      dup3\n        /* \"#utility.yul\":25733:25747   */\n      add\n        /* \"#utility.yul\":25726:25775   */\n      mstore\n        /* \"#utility.yul\":25609:25782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25788:26154   */\n    tag_324:\n        /* \"#utility.yul\":25930:25933   */\n      0x00\n        /* \"#utility.yul\":25951:26018   */\n      tag_596\n        /* \"#utility.yul\":26015:26017   */\n      0x17\n        /* \"#utility.yul\":26010:26013   */\n      dup4\n        /* \"#utility.yul\":25951:26018   */\n      tag_284\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":25944:26018   */\n      swap2\n      pop\n        /* \"#utility.yul\":26027:26120   */\n      tag_597\n        /* \"#utility.yul\":26116:26119   */\n      dup3\n        /* \"#utility.yul\":26027:26120   */\n      tag_323\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":26145:26147   */\n      0x20\n        /* \"#utility.yul\":26140:26143   */\n      dup3\n        /* \"#utility.yul\":26136:26148   */\n      add\n        /* \"#utility.yul\":26129:26148   */\n      swap1\n      pop\n        /* \"#utility.yul\":25788:26154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26160:26579   */\n    tag_200:\n        /* \"#utility.yul\":26326:26330   */\n      0x00\n        /* \"#utility.yul\":26364:26366   */\n      0x20\n        /* \"#utility.yul\":26353:26362   */\n      dup3\n        /* \"#utility.yul\":26349:26367   */\n      add\n        /* \"#utility.yul\":26341:26367   */\n      swap1\n      pop\n        /* \"#utility.yul\":26413:26422   */\n      dup2\n        /* \"#utility.yul\":26407:26411   */\n      dup2\n        /* \"#utility.yul\":26403:26423   */\n      sub\n        /* \"#utility.yul\":26399:26400   */\n      0x00\n        /* \"#utility.yul\":26388:26397   */\n      dup4\n        /* \"#utility.yul\":26384:26401   */\n      add\n        /* \"#utility.yul\":26377:26424   */\n      mstore\n        /* \"#utility.yul\":26441:26572   */\n      tag_599\n        /* \"#utility.yul\":26567:26571   */\n      dup2\n        /* \"#utility.yul\":26441:26572   */\n      tag_324\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":26433:26572   */\n      swap1\n      pop\n        /* \"#utility.yul\":26160:26579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26585:27027   */\n    tag_215:\n        /* \"#utility.yul\":26734:26738   */\n      0x00\n        /* \"#utility.yul\":26772:26774   */\n      0x60\n        /* \"#utility.yul\":26761:26770   */\n      dup3\n        /* \"#utility.yul\":26757:26775   */\n      add\n        /* \"#utility.yul\":26749:26775   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26856   */\n      tag_601\n        /* \"#utility.yul\":26853:26854   */\n      0x00\n        /* \"#utility.yul\":26842:26851   */\n      dup4\n        /* \"#utility.yul\":26838:26855   */\n      add\n        /* \"#utility.yul\":26829:26835   */\n      dup7\n        /* \"#utility.yul\":26785:26856   */\n      tag_282\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":26866:26938   */\n      tag_602\n        /* \"#utility.yul\":26934:26936   */\n      0x20\n        /* \"#utility.yul\":26923:26932   */\n      dup4\n        /* \"#utility.yul\":26919:26937   */\n      add\n        /* \"#utility.yul\":26910:26916   */\n      dup6\n        /* \"#utility.yul\":26866:26938   */\n      tag_282\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":26948:27020   */\n      tag_603\n        /* \"#utility.yul\":27016:27018   */\n      0x40\n        /* \"#utility.yul\":27005:27014   */\n      dup4\n        /* \"#utility.yul\":27001:27019   */\n      add\n        /* \"#utility.yul\":26992:26998   */\n      dup5\n        /* \"#utility.yul\":26948:27020   */\n      tag_261\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":26585:27027   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27033:27214   */\n    tag_325:\n        /* \"#utility.yul\":27173:27206   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":27169:27170   */\n      0x00\n        /* \"#utility.yul\":27161:27167   */\n      dup3\n        /* \"#utility.yul\":27157:27171   */\n      add\n        /* \"#utility.yul\":27150:27207   */\n      mstore\n        /* \"#utility.yul\":27033:27214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:27586   */\n    tag_326:\n        /* \"#utility.yul\":27362:27365   */\n      0x00\n        /* \"#utility.yul\":27383:27450   */\n      tag_606\n        /* \"#utility.yul\":27447:27449   */\n      0x1f\n        /* \"#utility.yul\":27442:27445   */\n      dup4\n        /* \"#utility.yul\":27383:27450   */\n      tag_284\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":27376:27450   */\n      swap2\n      pop\n        /* \"#utility.yul\":27459:27552   */\n      tag_607\n        /* \"#utility.yul\":27548:27551   */\n      dup3\n        /* \"#utility.yul\":27459:27552   */\n      tag_325\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":27577:27579   */\n      0x20\n        /* \"#utility.yul\":27572:27575   */\n      dup3\n        /* \"#utility.yul\":27568:27580   */\n      add\n        /* \"#utility.yul\":27561:27580   */\n      swap1\n      pop\n        /* \"#utility.yul\":27220:27586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27592:28011   */\n    tag_235:\n        /* \"#utility.yul\":27758:27762   */\n      0x00\n        /* \"#utility.yul\":27796:27798   */\n      0x20\n        /* \"#utility.yul\":27785:27794   */\n      dup3\n        /* \"#utility.yul\":27781:27799   */\n      add\n        /* \"#utility.yul\":27773:27799   */\n      swap1\n      pop\n        /* \"#utility.yul\":27845:27854   */\n      dup2\n        /* \"#utility.yul\":27839:27843   */\n      dup2\n        /* \"#utility.yul\":27835:27855   */\n      sub\n        /* \"#utility.yul\":27831:27832   */\n      0x00\n        /* \"#utility.yul\":27820:27829   */\n      dup4\n        /* \"#utility.yul\":27816:27833   */\n      add\n        /* \"#utility.yul\":27809:27856   */\n      mstore\n        /* \"#utility.yul\":27873:28004   */\n      tag_609\n        /* \"#utility.yul\":27999:28003   */\n      dup2\n        /* \"#utility.yul\":27873:28004   */\n      tag_326\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":27865:28004   */\n      swap1\n      pop\n        /* \"#utility.yul\":27592:28011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28017:28349   */\n    tag_239:\n        /* \"#utility.yul\":28138:28142   */\n      0x00\n        /* \"#utility.yul\":28176:28178   */\n      0x40\n        /* \"#utility.yul\":28165:28174   */\n      dup3\n        /* \"#utility.yul\":28161:28179   */\n      add\n        /* \"#utility.yul\":28153:28179   */\n      swap1\n      pop\n        /* \"#utility.yul\":28189:28260   */\n      tag_611\n        /* \"#utility.yul\":28257:28258   */\n      0x00\n        /* \"#utility.yul\":28246:28255   */\n      dup4\n        /* \"#utility.yul\":28242:28259   */\n      add\n        /* \"#utility.yul\":28233:28239   */\n      dup6\n        /* \"#utility.yul\":28189:28260   */\n      tag_282\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":28270:28342   */\n      tag_612\n        /* \"#utility.yul\":28338:28340   */\n      0x20\n        /* \"#utility.yul\":28327:28336   */\n      dup4\n        /* \"#utility.yul\":28323:28341   */\n      add\n        /* \"#utility.yul\":28314:28320   */\n      dup5\n        /* \"#utility.yul\":28270:28342   */\n      tag_261\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":28017:28349   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28355:28687   */\n    tag_251:\n        /* \"#utility.yul\":28476:28480   */\n      0x00\n        /* \"#utility.yul\":28514:28516   */\n      0x40\n        /* \"#utility.yul\":28503:28512   */\n      dup3\n        /* \"#utility.yul\":28499:28517   */\n      add\n        /* \"#utility.yul\":28491:28517   */\n      swap1\n      pop\n        /* \"#utility.yul\":28527:28598   */\n      tag_614\n        /* \"#utility.yul\":28595:28596   */\n      0x00\n        /* \"#utility.yul\":28584:28593   */\n      dup4\n        /* \"#utility.yul\":28580:28597   */\n      add\n        /* \"#utility.yul\":28571:28577   */\n      dup6\n        /* \"#utility.yul\":28527:28598   */\n      tag_282\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":28608:28680   */\n      tag_615\n        /* \"#utility.yul\":28676:28678   */\n      0x20\n        /* \"#utility.yul\":28665:28674   */\n      dup4\n        /* \"#utility.yul\":28661:28679   */\n      add\n        /* \"#utility.yul\":28652:28658   */\n      dup5\n        /* \"#utility.yul\":28608:28680   */\n      tag_267\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":28355:28687   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dbff78643e8436719283411da639dc30db1d2e1128b46f1f6d25a1772ac9ae2864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1254": {
									"entryPoint": null,
									"id": 1254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 356,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1032": {
									"entryPoint": 701,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 601,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$611_fromMemory": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$611_fromMemory": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$611": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$611": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2548:12",
										"nodeType": "YulBlock",
										"src": "0:2548:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "627:51:12",
													"nodeType": "YulBlock",
													"src": "627:51:12",
													"statements": [
														{
															"nativeSrc": "637:35:12",
															"nodeType": "YulAssignment",
															"src": "637:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:12"
																},
																"nativeSrc": "648:24:12",
																"nodeType": "YulFunctionCall",
																"src": "648:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$611",
												"nativeSrc": "568:110:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:12",
														"nodeType": "YulTypedName",
														"src": "609:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:12",
														"nodeType": "YulTypedName",
														"src": "619:7:12",
														"type": ""
													}
												],
												"src": "568:110:12"
											},
											{
												"body": {
													"nativeSrc": "741:93:12",
													"nodeType": "YulBlock",
													"src": "741:93:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:12",
																"nodeType": "YulBlock",
																"src": "812:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:12",
																					"nodeType": "YulLiteral",
																					"src": "821:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:12",
																					"nodeType": "YulLiteral",
																					"src": "824:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:12"
																			},
																			"nativeSrc": "814:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:12"
																		},
																		"nativeSrc": "814:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$611",
																					"nativeSrc": "771:31:12",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:12"
																				},
																				"nativeSrc": "771:38:12",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:12"
																		},
																		"nativeSrc": "761:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:12"
																},
																"nativeSrc": "754:57:12",
																"nodeType": "YulFunctionCall",
																"src": "754:57:12"
															},
															"nativeSrc": "751:77:12",
															"nodeType": "YulIf",
															"src": "751:77:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$611",
												"nativeSrc": "684:150:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:12",
														"nodeType": "YulTypedName",
														"src": "734:5:12",
														"type": ""
													}
												],
												"src": "684:150:12"
											},
											{
												"body": {
													"nativeSrc": "917:94:12",
													"nodeType": "YulBlock",
													"src": "917:94:12",
													"statements": [
														{
															"nativeSrc": "927:22:12",
															"nodeType": "YulAssignment",
															"src": "927:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:12"
																},
																"nativeSrc": "936:13:12",
																"nodeType": "YulFunctionCall",
																"src": "936:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$611",
																	"nativeSrc": "958:40:12",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:12"
																},
																"nativeSrc": "958:47:12",
																"nodeType": "YulFunctionCall",
																"src": "958:47:12"
															},
															"nativeSrc": "958:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$611_fromMemory",
												"nativeSrc": "840:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:12",
														"nodeType": "YulTypedName",
														"src": "895:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:12",
														"nodeType": "YulTypedName",
														"src": "903:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:12",
														"nodeType": "YulTypedName",
														"src": "911:5:12",
														"type": ""
													}
												],
												"src": "840:171:12"
											},
											{
												"body": {
													"nativeSrc": "1108:288:12",
													"nodeType": "YulBlock",
													"src": "1108:288:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:12",
																"nodeType": "YulBlock",
																"src": "1154:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:12"
																			},
																			"nativeSrc": "1156:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:12"
																		},
																		"nativeSrc": "1156:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:12"
																		},
																		"nativeSrc": "1125:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:12"
																},
																"nativeSrc": "1121:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:12"
															},
															"nativeSrc": "1118:119:12",
															"nodeType": "YulIf",
															"src": "1118:119:12"
														},
														{
															"nativeSrc": "1247:142:12",
															"nodeType": "YulBlock",
															"src": "1247:142:12",
															"statements": [
																{
																	"nativeSrc": "1262:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:12",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:12"
																				},
																				"nativeSrc": "1347:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$611_fromMemory",
																			"nativeSrc": "1301:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:12"
																		},
																		"nativeSrc": "1301:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$611_fromMemory",
												"nativeSrc": "1017:379:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:12",
														"nodeType": "YulTypedName",
														"src": "1078:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:12",
														"nodeType": "YulTypedName",
														"src": "1089:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:12",
														"nodeType": "YulTypedName",
														"src": "1101:6:12",
														"type": ""
													}
												],
												"src": "1017:379:12"
											},
											{
												"body": {
													"nativeSrc": "1498:73:12",
													"nodeType": "YulBlock",
													"src": "1498:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1515:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1515:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1520:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1508:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:12"
																},
																"nativeSrc": "1508:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1508:19:12"
															},
															"nativeSrc": "1508:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1508:19:12"
														},
														{
															"nativeSrc": "1536:29:12",
															"nodeType": "YulAssignment",
															"src": "1536:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1555:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1560:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1560:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1551:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:12"
																},
																"nativeSrc": "1551:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1551:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1536:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1536:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1402:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1470:3:12",
														"nodeType": "YulTypedName",
														"src": "1470:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1475:6:12",
														"nodeType": "YulTypedName",
														"src": "1475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1486:11:12",
														"nodeType": "YulTypedName",
														"src": "1486:11:12",
														"type": ""
													}
												],
												"src": "1402:169:12"
											},
											{
												"body": {
													"nativeSrc": "1683:65:12",
													"nodeType": "YulBlock",
													"src": "1683:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1705:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1705:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1713:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1701:3:12"
																		},
																		"nativeSrc": "1701:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1701:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1717:23:12",
																		"nodeType": "YulLiteral",
																		"src": "1717:23:12",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:12"
																},
																"nativeSrc": "1694:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1694:47:12"
															},
															"nativeSrc": "1694:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1694:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1577:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1675:6:12",
														"nodeType": "YulTypedName",
														"src": "1675:6:12",
														"type": ""
													}
												],
												"src": "1577:171:12"
											},
											{
												"body": {
													"nativeSrc": "1900:220:12",
													"nodeType": "YulBlock",
													"src": "1900:220:12",
													"statements": [
														{
															"nativeSrc": "1910:74:12",
															"nodeType": "YulAssignment",
															"src": "1910:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1976:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1981:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1917:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:58:12"
																},
																"nativeSrc": "1917:67:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1910:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2082:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "1993:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "1993:88:12"
																},
																"nativeSrc": "1993:93:12",
																"nodeType": "YulFunctionCall",
																"src": "1993:93:12"
															},
															"nativeSrc": "1993:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "1993:93:12"
														},
														{
															"nativeSrc": "2095:19:12",
															"nodeType": "YulAssignment",
															"src": "2095:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2106:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2106:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2111:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2102:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:12"
																},
																"nativeSrc": "2102:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2102:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2095:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1754:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1888:3:12",
														"nodeType": "YulTypedName",
														"src": "1888:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1896:3:12",
														"nodeType": "YulTypedName",
														"src": "1896:3:12",
														"type": ""
													}
												],
												"src": "1754:366:12"
											},
											{
												"body": {
													"nativeSrc": "2297:248:12",
													"nodeType": "YulBlock",
													"src": "2297:248:12",
													"statements": [
														{
															"nativeSrc": "2307:26:12",
															"nodeType": "YulAssignment",
															"src": "2307:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2319:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2319:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2330:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2315:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:12"
																},
																"nativeSrc": "2315:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2315:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2307:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2365:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2365:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:12"
																		},
																		"nativeSrc": "2350:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2373:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2373:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2379:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:12"
																		},
																		"nativeSrc": "2369:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2369:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2343:6:12"
																},
																"nativeSrc": "2343:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2343:47:12"
															},
															"nativeSrc": "2343:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2343:47:12"
														},
														{
															"nativeSrc": "2399:139:12",
															"nodeType": "YulAssignment",
															"src": "2399:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2533:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2533:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2407:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "2407:124:12"
																},
																"nativeSrc": "2407:131:12",
																"nodeType": "YulFunctionCall",
																"src": "2407:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2399:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2399:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2126:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2277:9:12",
														"nodeType": "YulTypedName",
														"src": "2277:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2292:4:12",
														"nodeType": "YulTypedName",
														"src": "2292:4:12",
														"type": ""
													}
												],
												"src": "2126:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$611(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$611(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$611(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$611_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$611(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$611_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$611_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051612ae6380380612ae683398181016040528101906100319190610333565b60015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009d906103b8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012c5f801b3361016460201b60201c565b5061015d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361016460201b60201c565b50506103d6565b5f610175838361025960201b60201c565b61024f576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101ec6102bd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610253565b5f90505b92915050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102f1826102c8565b9050919050565b5f610302826102e7565b9050919050565b610312816102f8565b811461031c575f80fd5b50565b5f8151905061032d81610309565b92915050565b5f60208284031215610348576103476102c4565b5b5f6103558482850161031f565b91505092915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103a260158361035e565b91506103ad8261036e565b602082019050919050565b5f6020820190508181035f8301526103cf81610396565b9050919050565b6080516126dc61040a5f395f81816108fd01528181610b2a01528181610f210152818161125f015261132001526126dc5ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c806375b238fc116100ab578063a217fddf1161006f578063a217fddf1461033c578063af6e56891461035a578063b73c6ce914610390578063d547741f1461039a578063fc0c546a146103b65761012a565b806375b238fc146102985780638da5cb5b146102b65780638e04d8d8146102d457806391d14854146102f05780639c4d9c0c146103205761012a565b806329206bd1116100f257806329206bd1146101f85780632a222851146102145780632f2ff15d1461023057806336568abe1461024c57806347734892146102685761012a565b806301ffc9a71461012e578063099952c81461015e578063212350831461017c578063248a9ca31461019857806328ac7f2c146101c8575b5f80fd5b61014860048036038101906101439190611842565b6103d4565b6040516101559190611887565b60405180910390f35b61016661044d565b60405161017391906118b8565b60405180910390f35b610196600480360381019061019191906118fb565b610453565b005b6101b260048036038101906101ad9190611959565b6105c3565b6040516101bf9190611993565b60405180910390f35b6101e260048036038101906101dd9190611a06565b6105e0565b6040516101ef91906118b8565b60405180910390f35b610212600480360381019061020d9190611b6d565b6105f5565b005b61022e60048036038101906102299190611bed565b6107f8565b005b61024a60048036038101906102459190611c2b565b610a8a565b005b61026660048036038101906102619190611c2b565b610aac565b005b610282600480360381019061027d9190611a06565b610b27565b60405161028f91906118b8565b60405180910390f35b6102a0610bc7565b6040516102ad9190611993565b60405180910390f35b6102be610beb565b6040516102cb9190611c78565b60405180910390f35b6102ee60048036038101906102e991906118fb565b610c10565b005b61030a60048036038101906103059190611c2b565b610e05565b6040516103179190611887565b60405180910390f35b61033a600480360381019061033591906118fb565b610e69565b005b610344611096565b6040516103519190611993565b60405180910390f35b610374600480360381019061036f91906118fb565b61109c565b6040516103879796959493929190611cf1565b60405180910390f35b61039861118b565b005b6103b460048036038101906103af9190611c2b565b6112fc565b005b6103be61131e565b6040516103cb9190611dc0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610446575061044582611342565b5b9050919050565b60035481565b6003548110610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90611e23565b60405180910390fd5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8381526020019081526020015f205411610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90611e8b565b60405180910390fd5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8381526020019081526020015f2081905550803373ffffffffffffffffffffffffffffffffffffffff167f06aa12c0ad65927b4a753d119c26e490d3c4a4e11cb631b43131a709dc1e591760405160405180910390a350565b5f60015f8381526020019081526020015f20600101549050919050565b6004602052805f5260405f205f915090505481565b5f845111610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90611ef3565b60405180910390fd5b5f83118061064557505f82115b610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611f81565b60405180910390fd5b5f60035f81548092919061069790611fcc565b9190505590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020015f81526020016001151581525060055f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816107539190612204565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817faeb4fdd5a376011a12e318bf03de0006c5c806196fb1d14f787be471267cb8dc8787876040516107e9939291906122d3565b60405180910390a35050505050565b600354821061083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611e23565b60405180910390fd5b5f811161087e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108759061237f565b60405180910390fd5b5f60055f8481526020019081526020015f209050806006015f9054906101000a900460ff166108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906123e7565b60405180910390fd5b5f8282600201546108f39190612405565b90506109423330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ab909392919063ffffffff16565b8260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8681526020019081526020015f205f82825461099f9190612446565b925050819055508060045f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a149190612446565b9250508190555082826005015f828254610a2e9190612446565b92505081905550833373ffffffffffffffffffffffffffffffffffffffff167f651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b85604051610a7c91906118b8565b60405180910390a350505050565b610a93826105c3565b610a9c8161142d565b610aa68383611441565b50505050565b610ab461152a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b18576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b228282611531565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610b819190611c78565b602060405180830381865afa158015610b9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc0919061248d565b9050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003548110610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611e23565b60405180910390fd5b5f60055f8381526020019081526020015f209050806006015f9054906101000a900460ff16610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf906123e7565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8481526020019081526020015f205490505f8111610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4390612502565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8581526020019081526020015f205f828254610daa9190612520565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167fcca1381d7195cd2569f7fc5ea523be6bbec35a1421ab82b215b1651f7b22157e42604051610df891906118b8565b60405180910390a3505050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6003548110610ead576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea490611e23565b60405180910390fd5b5f60055f8381526020019081526020015f209050806006015f9054906101000a900460ff16610f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f08906123e7565b60405180910390fd5b5f81600301549050610f663330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ab909392919063ffffffff16565b816004015442610f769190612446565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8581526020019081526020015f20819055508060045f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110379190612446565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03846004015460405161108991906118b8565b60405180910390a3505050565b5f801b81565b6005602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546110e090612040565b80601f016020809104026020016040519081016040528092919081815260200182805461110c90612040565b80156111575780601f1061112e57610100808354040283529160200191611157565b820191905f5260205f20905b81548152906001019060200180831161113a57829003601f168201915b505050505090806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16905087565b61119361161b565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120d9061259d565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112a333827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116689092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516112e991906118b8565b60405180910390a2506112fa6116e7565b565b611305826105c3565b61130e8161142d565b6113188383611531565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611427848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113e0939291906125bb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116f0565b50505050565b61143e8161143961152a565b61178b565b50565b5f61144c8383610e05565b611520576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506114bd61152a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611524565b5f90505b92915050565b5f33905090565b5f61153c8383610e05565b15611611575f60015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506115ae61152a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611615565b5f90505b92915050565b60025f540361165f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116569061263a565b60405180910390fd5b60025f81905550565b6116e2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161169b929190612658565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116f0565b505050565b60015f81905550565b5f8060205f8451602086015f885af18061170f576040513d5f823e3d81fd5b3d92505f519150505f8214611728576001811415611743565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561178557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161177c9190611c78565b60405180910390fd5b50505050565b6117958282610e05565b6117d85780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117cf92919061267f565b60405180910390fd5b5050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611821816117ed565b811461182b575f80fd5b50565b5f8135905061183c81611818565b92915050565b5f60208284031215611857576118566117e5565b5b5f6118648482850161182e565b91505092915050565b5f8115159050919050565b6118818161186d565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f819050919050565b6118b2816118a0565b82525050565b5f6020820190506118cb5f8301846118a9565b92915050565b6118da816118a0565b81146118e4575f80fd5b50565b5f813590506118f5816118d1565b92915050565b5f602082840312156119105761190f6117e5565b5b5f61191d848285016118e7565b91505092915050565b5f819050919050565b61193881611926565b8114611942575f80fd5b50565b5f813590506119538161192f565b92915050565b5f6020828403121561196e5761196d6117e5565b5b5f61197b84828501611945565b91505092915050565b61198d81611926565b82525050565b5f6020820190506119a65f830184611984565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119d5826119ac565b9050919050565b6119e5816119cb565b81146119ef575f80fd5b50565b5f81359050611a00816119dc565b92915050565b5f60208284031215611a1b57611a1a6117e5565b5b5f611a28848285016119f2565b91505092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a7f82611a39565b810181811067ffffffffffffffff82111715611a9e57611a9d611a49565b5b80604052505050565b5f611ab06117dc565b9050611abc8282611a76565b919050565b5f67ffffffffffffffff821115611adb57611ada611a49565b5b611ae482611a39565b9050602081019050919050565b828183375f83830152505050565b5f611b11611b0c84611ac1565b611aa7565b905082815260208101848484011115611b2d57611b2c611a35565b5b611b38848285611af1565b509392505050565b5f82601f830112611b5457611b53611a31565b5b8135611b64848260208601611aff565b91505092915050565b5f805f8060808587031215611b8557611b846117e5565b5b5f85013567ffffffffffffffff811115611ba257611ba16117e9565b5b611bae87828801611b40565b9450506020611bbf878288016118e7565b9350506040611bd0878288016118e7565b9250506060611be1878288016118e7565b91505092959194509250565b5f8060408385031215611c0357611c026117e5565b5b5f611c10858286016118e7565b9250506020611c21858286016118e7565b9150509250929050565b5f8060408385031215611c4157611c406117e5565b5b5f611c4e85828601611945565b9250506020611c5f858286016119f2565b9150509250929050565b611c72816119cb565b82525050565b5f602082019050611c8b5f830184611c69565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611cc382611c91565b611ccd8185611c9b565b9350611cdd818560208601611cab565b611ce681611a39565b840191505092915050565b5f60e082019050611d045f83018a611c69565b8181036020830152611d168189611cb9565b9050611d2560408301886118a9565b611d3260608301876118a9565b611d3f60808301866118a9565b611d4c60a08301856118a9565b611d5960c0830184611878565b98975050505050505050565b5f819050919050565b5f611d88611d83611d7e846119ac565b611d65565b6119ac565b9050919050565b5f611d9982611d6e565b9050919050565b5f611daa82611d8f565b9050919050565b611dba81611da0565b82525050565b5f602082019050611dd35f830184611db1565b92915050565b7f41504920646f6573206e6f7420657869737400000000000000000000000000005f82015250565b5f611e0d601283611c9b565b9150611e1882611dd9565b602082019050919050565b5f6020820190508181035f830152611e3a81611e01565b9050919050565b7f4e6f2061637469766520737562736372697074696f6e000000000000000000005f82015250565b5f611e75601683611c9b565b9150611e8082611e41565b602082019050919050565b5f6020820190508181035f830152611ea281611e69565b9050919050565b7f415049206e616d652063616e6e6f7420626520656d70747900000000000000005f82015250565b5f611edd601883611c9b565b9150611ee882611ea9565b602082019050919050565b5f6020820190508181035f830152611f0a81611ed1565b9050919050565b7f4174206c65617374206f6e652070726963696e67206f7074696f6e20726571755f8201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b5f611f6b602483611c9b565b9150611f7682611f11565b604082019050919050565b5f6020820190508181035f830152611f9881611f5f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fd6826118a0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200857612007611f9f565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061205757607f821691505b60208210810361206a57612069612013565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120cc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612091565b6120d68683612091565b95508019841693508086168417925050509392505050565b5f6121086121036120fe846118a0565b611d65565b6118a0565b9050919050565b5f819050919050565b612121836120ee565b61213561212d8261210f565b84845461209d565b825550505050565b5f90565b61214961213d565b612154818484612118565b505050565b5b818110156121775761216c5f82612141565b60018101905061215a565b5050565b601f8211156121bc5761218d81612070565b61219684612082565b810160208510156121a5578190505b6121b96121b185612082565b830182612159565b50505b505050565b5f82821c905092915050565b5f6121dc5f19846008026121c1565b1980831691505092915050565b5f6121f483836121cd565b9150826002028217905092915050565b61220d82611c91565b67ffffffffffffffff81111561222657612225611a49565b5b6122308254612040565b61223b82828561217b565b5f60209050601f83116001811461226c575f841561225a578287015190505b61226485826121e9565b8655506122cb565b601f19841661227a86612070565b5f5b828110156122a15784890151825560018201915060208501945060208101905061227c565b868310156122be57848901516122ba601f8916826121cd565b8355505b6001600288020188555050505b505050505050565b5f6060820190508181035f8301526122eb8186611cb9565b90506122fa60208301856118a9565b61230760408301846118a9565b949350505050565b7f4d757374207075726368617365206174206c65617374206f6e652072657175655f8201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b5f612369602283611c9b565b91506123748261230f565b604082019050919050565b5f6020820190508181035f8301526123968161235d565b9050919050565b7f415049206973206e6f74206163746976650000000000000000000000000000005f82015250565b5f6123d1601183611c9b565b91506123dc8261239d565b602082019050919050565b5f6020820190508181035f8301526123fe816123c5565b9050919050565b5f61240f826118a0565b915061241a836118a0565b9250828202612428816118a0565b9150828204841483151761243f5761243e611f9f565b5b5092915050565b5f612450826118a0565b915061245b836118a0565b925082820190508082111561247357612472611f9f565b5b92915050565b5f81519050612487816118d1565b92915050565b5f602082840312156124a2576124a16117e5565b5b5f6124af84828501612479565b91505092915050565b7f4e6f2072656d61696e696e6720726571756573747300000000000000000000005f82015250565b5f6124ec601583611c9b565b91506124f7826124b8565b602082019050919050565b5f6020820190508181035f830152612519816124e0565b9050919050565b5f61252a826118a0565b9150612535836118a0565b925082820390508181111561254d5761254c611f9f565b5b92915050565b7f4e6f206561726e696e677320746f2077697468647261770000000000000000005f82015250565b5f612587601783611c9b565b915061259282612553565b602082019050919050565b5f6020820190508181035f8301526125b48161257b565b9050919050565b5f6060820190506125ce5f830186611c69565b6125db6020830185611c69565b6125e860408301846118a9565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612624601f83611c9b565b915061262f826125f0565b602082019050919050565b5f6020820190508181035f83015261265181612618565b9050919050565b5f60408201905061266b5f830185611c69565b61267860208301846118a9565b9392505050565b5f6040820190506126925f830185611c69565b61269f6020830184611984565b939250505056fea2646970667358221220dbff78643e8436719283411da639dc30db1d2e1128b46f1f6d25a1772ac9ae2864736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2AE6 CODESIZE SUB DUP1 PUSH2 0x2AE6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D SWAP1 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C PUSH0 DUP1 SHL CALLER PUSH2 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15D PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x3D6 JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP4 DUP4 PUSH2 0x259 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x24F JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EC PUSH2 0x2BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x253 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x302 DUP3 PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312 DUP2 PUSH2 0x2F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32D DUP2 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x2C4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x355 DUP5 DUP3 DUP6 ADD PUSH2 0x31F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3A2 PUSH1 0x15 DUP4 PUSH2 0x35E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AD DUP3 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3CF DUP2 PUSH2 0x396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x26DC PUSH2 0x40A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x8FD ADD MSTORE DUP2 DUP2 PUSH2 0xB2A ADD MSTORE DUP2 DUP2 PUSH2 0xF21 ADD MSTORE DUP2 DUP2 PUSH2 0x125F ADD MSTORE PUSH2 0x1320 ADD MSTORE PUSH2 0x26DC PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAF6E5689 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3B6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8E04D8D8 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x9C4D9C0C EQ PUSH2 0x320 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x29206BD1 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x29206BD1 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x2A222851 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x47734892 EQ PUSH2 0x268 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x99952C8 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x21235083 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x28AC7F2C EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0x118B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x446 JUMPI POP PUSH2 0x445 DUP3 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AA12C0AD65927B4A753D119C26E490D3C4A4E11CB631B43131A709DC1E5917 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP5 MLOAD GT PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 PUSH2 0x645 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x697 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xAEB4FDD5A376011A12E318BF03DE0006C5C806196FB1D14F787BE471267CB8DC DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST SWAP1 POP PUSH2 0x942 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13AB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B DUP6 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH2 0xAA6 DUP4 DUP4 PUSH2 0x1441 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB22 DUP3 DUP3 PUSH2 0x1531 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xC54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4B SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCCA1381D7195CD2569F7FC5EA523BE6BBEC35A1421AB82B215B1651F7B22157E TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xDF8 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0xF66 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13AB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x10E0 SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x110C SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x112E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x1193 PUSH2 0x161B JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12A3 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1668 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12FA PUSH2 0x16E7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1305 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x130E DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x1318 DUP4 DUP4 PUSH2 0x1531 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x1439 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x144C DUP4 DUP4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x1520 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14BD PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1524 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x153C DUP4 DUP4 PUSH2 0xE05 JUMP JUMPDEST ISZERO PUSH2 0x1611 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15AE PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x16E2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x169B SWAP3 SWAP2 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1728 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1743 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1785 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177C SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1795 DUP3 DUP3 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x17D8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CF SWAP3 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183C DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x186D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18F5 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x191D DUP5 DUP3 DUP6 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP2 EQ PUSH2 0x1942 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197B DUP5 DUP3 DUP6 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP2 EQ PUSH2 0x19EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A00 DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1B JUMPI PUSH2 0x1A1A PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A28 DUP5 DUP3 DUP6 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A7F DUP3 PUSH2 0x1A39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABC DUP3 DUP3 PUSH2 0x1A76 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST PUSH2 0x1AE4 DUP3 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B11 PUSH2 0x1B0C DUP5 PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1A35 JUMP JUMPDEST JUMPDEST PUSH2 0x1B38 DUP5 DUP3 DUP6 PUSH2 0x1AF1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B64 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA1 PUSH2 0x17E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAE DUP8 DUP3 DUP9 ADD PUSH2 0x1B40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BBF DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BD0 DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BE1 DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C10 DUP6 DUP3 DUP7 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C21 DUP6 DUP3 DUP7 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4E DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5F DUP6 DUP3 DUP7 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C72 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8B PUSH0 DUP4 ADD DUP5 PUSH2 0x1C69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC3 DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x1CCD DUP2 DUP6 PUSH2 0x1C9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1CE6 DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1D04 PUSH0 DUP4 ADD DUP11 PUSH2 0x1C69 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 DUP10 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D25 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D32 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D3F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D4C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D59 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D88 PUSH2 0x1D83 PUSH2 0x1D7E DUP5 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D99 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAA DUP3 PUSH2 0x1D8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBA DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41504920646F6573206E6F742065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0D PUSH1 0x12 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E18 DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3A DUP2 PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2061637469766520737562736372697074696F6E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E75 PUSH1 0x16 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E80 DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA2 DUP2 PUSH2 0x1E69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206E616D652063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDD PUSH1 0x18 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP3 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0A DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652070726963696E67206F7074696F6E2072657175 PUSH0 DUP3 ADD MSTORE PUSH32 0x6972656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6B PUSH1 0x24 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F76 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F98 DUP2 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FD6 DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2057 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20CC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x20D6 DUP7 DUP4 PUSH2 0x2091 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2108 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2121 DUP4 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2135 PUSH2 0x212D DUP3 PUSH2 0x210F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x209D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2149 PUSH2 0x213D JUMP JUMPDEST PUSH2 0x2154 DUP2 DUP5 DUP5 PUSH2 0x2118 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2177 JUMPI PUSH2 0x216C PUSH0 DUP3 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21BC JUMPI PUSH2 0x218D DUP2 PUSH2 0x2070 JUMP JUMPDEST PUSH2 0x2196 DUP5 PUSH2 0x2082 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21A5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21B9 PUSH2 0x21B1 DUP6 PUSH2 0x2082 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2159 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21DC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21C1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 DUP4 DUP4 PUSH2 0x21CD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220D DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST PUSH2 0x2230 DUP3 SLOAD PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x223B DUP3 DUP3 DUP6 PUSH2 0x217B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x226C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x225A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2264 DUP6 DUP3 PUSH2 0x21E9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x227A DUP7 PUSH2 0x2070 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22A1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x227C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22BE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22BA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21CD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 DUP7 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x22FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x2307 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D757374207075726368617365206174206C65617374206F6E65207265717565 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH1 0x22 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x2374 DUP3 PUSH2 0x230F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0x11 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x240F DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x241A DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2428 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x243F JUMPI PUSH2 0x243E PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2450 DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x245B DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2473 JUMPI PUSH2 0x2472 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2487 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AF DUP5 DUP3 DUP6 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E672072657175657374730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EC PUSH1 0x15 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x24F7 DUP3 PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2519 DUP2 PUSH2 0x24E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x252A DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2535 DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x254D JUMPI PUSH2 0x254C PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206561726E696E677320746F207769746864726177000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 PUSH1 0x17 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x2592 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B4 DUP2 PUSH2 0x257B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25CE PUSH0 DUP4 ADD DUP7 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x25E8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2624 PUSH1 0x1F DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266B PUSH0 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x2678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2692 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x269F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SELFDESTRUCT PUSH25 0x643E8436719283411DA639DC30DB1D2E1128B46F1F6D25A177 0x2A 0xC9 0xAE 0x28 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:6062:11:-:0;;;2578:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:5;1821:7;:22;;;;2650:1:11;2623:29;;2631:6;2623:29;;;2615:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2696:6;2688:14;;;;;;;;;;2720:10;2712:5;;:18;;;;;;;;;;;;;;;;;;2741:42;2232:4:0;2752:18:11;;2772:10;2741;;;:42;;:::i;:::-;;2793:34;842:23;2816:10;2793;;;:34;;:::i;:::-;;2578:256;503:6062;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:169::-;1486:11;1520:6;1515:3;1508:19;1560:4;1555:3;1551:14;1536:29;;1402:169;;;;:::o;1577:171::-;1717:23;1713:1;1705:6;1701:14;1694:47;1577:171;:::o;1754:366::-;1896:3;1917:67;1981:2;1976:3;1917:67;:::i;:::-;1910:74;;1993:93;2082:3;1993:93;:::i;:::-;2111:2;2106:3;2102:12;2095:19;;1754:366;;;:::o;2126:419::-;2292:4;2330:2;2319:9;2315:18;2307:26;;2379:9;2373:4;2369:20;2365:1;2354:9;2350:17;2343:47;2407:131;2533:4;2407:131;:::i;:::-;2399:139;;2126:419;;;:::o;503:6062:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1111": {
									"entryPoint": 3015,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 4246,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_978": {
									"entryPoint": 5872,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6027,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5165,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5185,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1032": {
									"entryPoint": 5418,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_521": {
									"entryPoint": 5863,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_513": {
									"entryPoint": 5659,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5425,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@apiIdCounter_1113": {
									"entryPoint": 1101,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@apis_1137": {
									"entryPoint": 4252,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approveAndPurchaseAPIAccess_1431": {
									"entryPoint": 2040,
									"id": 1431,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approveAndPurchaseSubscription_1503": {
									"entryPoint": 3689,
									"id": 1503,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelSubscription_1649": {
									"entryPoint": 1107,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1475,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserBalance_1662": {
									"entryPoint": 2855,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2698,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3589,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1106": {
									"entryPoint": 3051,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@providerBalances_1117": {
									"entryPoint": 1504,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerAPI_1347": {
									"entryPoint": 1525,
									"id": 1347,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2732,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4860,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_683": {
									"entryPoint": 5035,
									"id": 683,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_656": {
									"entryPoint": 5736,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1073": {
									"entryPoint": 4930,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 980,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_1104": {
									"entryPoint": 4894,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@useAPIAccess_1564": {
									"entryPoint": 3088,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawEarnings_1605": {
									"entryPoint": 4491,
									"id": 1605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9659,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9855,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8915,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IERC20_$611_to_t_address": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6729,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d": {
									"entryPoint": 8975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633": {
									"entryPoint": 7849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8349,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28690:12",
										"nodeType": "YulBlock",
										"src": "0:28690:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1666:53:12",
													"nodeType": "YulBlock",
													"src": "1666:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1688:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:12"
																		},
																		"nativeSrc": "1688:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:12"
																},
																"nativeSrc": "1676:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:12"
															},
															"nativeSrc": "1676:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1601:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:12",
														"nodeType": "YulTypedName",
														"src": "1654:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:12",
														"nodeType": "YulTypedName",
														"src": "1661:3:12",
														"type": ""
													}
												],
												"src": "1601:118:12"
											},
											{
												"body": {
													"nativeSrc": "1823:124:12",
													"nodeType": "YulBlock",
													"src": "1823:124:12",
													"statements": [
														{
															"nativeSrc": "1833:26:12",
															"nodeType": "YulAssignment",
															"src": "1833:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:12"
																},
																"nativeSrc": "1841:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:12"
																		},
																		"nativeSrc": "1922:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1869:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:12"
																},
																"nativeSrc": "1869:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:12"
															},
															"nativeSrc": "1869:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1725:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:12",
														"nodeType": "YulTypedName",
														"src": "1795:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:12",
														"nodeType": "YulTypedName",
														"src": "1807:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:12",
														"nodeType": "YulTypedName",
														"src": "1818:4:12",
														"type": ""
													}
												],
												"src": "1725:222:12"
											},
											{
												"body": {
													"nativeSrc": "1996:79:12",
													"nodeType": "YulBlock",
													"src": "1996:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:12",
																"nodeType": "YulBlock",
																"src": "2053:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:12"
																			},
																			"nativeSrc": "2055:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:12"
																		},
																		"nativeSrc": "2055:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2044:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2026:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2026:17:12"
																				},
																				"nativeSrc": "2026:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2026:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2016:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:12"
																		},
																		"nativeSrc": "2016:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2009:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:12"
																},
																"nativeSrc": "2009:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2009:43:12"
															},
															"nativeSrc": "2006:63:12",
															"nodeType": "YulIf",
															"src": "2006:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1953:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1989:5:12",
														"nodeType": "YulTypedName",
														"src": "1989:5:12",
														"type": ""
													}
												],
												"src": "1953:122:12"
											},
											{
												"body": {
													"nativeSrc": "2133:87:12",
													"nodeType": "YulBlock",
													"src": "2133:87:12",
													"statements": [
														{
															"nativeSrc": "2143:29:12",
															"nodeType": "YulAssignment",
															"src": "2143:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2165:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2152:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2152:12:12"
																},
																"nativeSrc": "2152:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2152:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2143:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2208:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2181:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2181:26:12"
																},
																"nativeSrc": "2181:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2181:33:12"
															},
															"nativeSrc": "2181:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2181:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2081:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2111:6:12",
														"nodeType": "YulTypedName",
														"src": "2111:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2119:3:12",
														"nodeType": "YulTypedName",
														"src": "2119:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2127:5:12",
														"nodeType": "YulTypedName",
														"src": "2127:5:12",
														"type": ""
													}
												],
												"src": "2081:139:12"
											},
											{
												"body": {
													"nativeSrc": "2292:263:12",
													"nodeType": "YulBlock",
													"src": "2292:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:83:12",
																"nodeType": "YulBlock",
																"src": "2338:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2340:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:12"
																			},
																			"nativeSrc": "2340:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:12"
																		},
																		"nativeSrc": "2340:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2313:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2309:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:12"
																		},
																		"nativeSrc": "2309:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:12"
																},
																"nativeSrc": "2305:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2305:32:12"
															},
															"nativeSrc": "2302:119:12",
															"nodeType": "YulIf",
															"src": "2302:119:12"
														},
														{
															"nativeSrc": "2431:117:12",
															"nodeType": "YulBlock",
															"src": "2431:117:12",
															"statements": [
																{
																	"nativeSrc": "2446:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2460:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2450:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2475:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2475:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2510:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2521:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2506:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:12"
																				},
																				"nativeSrc": "2506:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2530:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2485:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:12"
																		},
																		"nativeSrc": "2485:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2475:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2226:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2262:9:12",
														"nodeType": "YulTypedName",
														"src": "2262:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2273:7:12",
														"nodeType": "YulTypedName",
														"src": "2273:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2285:6:12",
														"nodeType": "YulTypedName",
														"src": "2285:6:12",
														"type": ""
													}
												],
												"src": "2226:329:12"
											},
											{
												"body": {
													"nativeSrc": "2606:32:12",
													"nodeType": "YulBlock",
													"src": "2606:32:12",
													"statements": [
														{
															"nativeSrc": "2616:16:12",
															"nodeType": "YulAssignment",
															"src": "2616:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:12",
																"nodeType": "YulIdentifier",
																"src": "2627:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2561:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:12",
														"nodeType": "YulTypedName",
														"src": "2588:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:12",
														"nodeType": "YulTypedName",
														"src": "2598:7:12",
														"type": ""
													}
												],
												"src": "2561:77:12"
											},
											{
												"body": {
													"nativeSrc": "2687:79:12",
													"nodeType": "YulBlock",
													"src": "2687:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2744:16:12",
																"nodeType": "YulBlock",
																"src": "2744:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2753:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2756:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2746:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:12"
																			},
																			"nativeSrc": "2746:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:12"
																		},
																		"nativeSrc": "2746:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2710:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2735:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2717:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2717:17:12"
																				},
																				"nativeSrc": "2717:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2717:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2707:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2707:2:12"
																		},
																		"nativeSrc": "2707:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:12"
																},
																"nativeSrc": "2700:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2700:43:12"
															},
															"nativeSrc": "2697:63:12",
															"nodeType": "YulIf",
															"src": "2697:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2644:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2680:5:12",
														"nodeType": "YulTypedName",
														"src": "2680:5:12",
														"type": ""
													}
												],
												"src": "2644:122:12"
											},
											{
												"body": {
													"nativeSrc": "2824:87:12",
													"nodeType": "YulBlock",
													"src": "2824:87:12",
													"statements": [
														{
															"nativeSrc": "2834:29:12",
															"nodeType": "YulAssignment",
															"src": "2834:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2856:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2843:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:12"
																},
																"nativeSrc": "2843:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2843:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2834:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2899:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2872:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2872:26:12"
																},
																"nativeSrc": "2872:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2872:33:12"
															},
															"nativeSrc": "2872:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2872:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2772:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2802:6:12",
														"nodeType": "YulTypedName",
														"src": "2802:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2810:3:12",
														"nodeType": "YulTypedName",
														"src": "2810:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2818:5:12",
														"nodeType": "YulTypedName",
														"src": "2818:5:12",
														"type": ""
													}
												],
												"src": "2772:139:12"
											},
											{
												"body": {
													"nativeSrc": "2983:263:12",
													"nodeType": "YulBlock",
													"src": "2983:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3029:83:12",
																"nodeType": "YulBlock",
																"src": "3029:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3031:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3031:77:12"
																			},
																			"nativeSrc": "3031:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3031:79:12"
																		},
																		"nativeSrc": "3031:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3004:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3013:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:12"
																		},
																		"nativeSrc": "3000:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3025:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2996:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:12"
																},
																"nativeSrc": "2996:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2996:32:12"
															},
															"nativeSrc": "2993:119:12",
															"nodeType": "YulIf",
															"src": "2993:119:12"
														},
														{
															"nativeSrc": "3122:117:12",
															"nodeType": "YulBlock",
															"src": "3122:117:12",
															"statements": [
																{
																	"nativeSrc": "3137:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3151:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3151:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3141:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3166:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3166:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3201:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3212:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3197:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:12"
																				},
																				"nativeSrc": "3197:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3221:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3176:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:12"
																		},
																		"nativeSrc": "3176:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3166:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2917:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2953:9:12",
														"nodeType": "YulTypedName",
														"src": "2953:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2964:7:12",
														"nodeType": "YulTypedName",
														"src": "2964:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2976:6:12",
														"nodeType": "YulTypedName",
														"src": "2976:6:12",
														"type": ""
													}
												],
												"src": "2917:329:12"
											},
											{
												"body": {
													"nativeSrc": "3317:53:12",
													"nodeType": "YulBlock",
													"src": "3317:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3334:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3357:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3357:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3339:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3339:17:12"
																		},
																		"nativeSrc": "3339:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:12"
																},
																"nativeSrc": "3327:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3327:37:12"
															},
															"nativeSrc": "3327:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3327:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3252:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3305:5:12",
														"nodeType": "YulTypedName",
														"src": "3305:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3312:3:12",
														"nodeType": "YulTypedName",
														"src": "3312:3:12",
														"type": ""
													}
												],
												"src": "3252:118:12"
											},
											{
												"body": {
													"nativeSrc": "3474:124:12",
													"nodeType": "YulBlock",
													"src": "3474:124:12",
													"statements": [
														{
															"nativeSrc": "3484:26:12",
															"nodeType": "YulAssignment",
															"src": "3484:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3496:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3496:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3507:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3492:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:12"
																},
																"nativeSrc": "3492:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3492:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3484:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3484:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3564:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3577:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3588:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3588:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3573:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:12"
																		},
																		"nativeSrc": "3573:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3520:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3520:43:12"
																},
																"nativeSrc": "3520:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3520:71:12"
															},
															"nativeSrc": "3520:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3520:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3376:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3446:9:12",
														"nodeType": "YulTypedName",
														"src": "3446:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3458:6:12",
														"nodeType": "YulTypedName",
														"src": "3458:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3469:4:12",
														"nodeType": "YulTypedName",
														"src": "3469:4:12",
														"type": ""
													}
												],
												"src": "3376:222:12"
											},
											{
												"body": {
													"nativeSrc": "3649:81:12",
													"nodeType": "YulBlock",
													"src": "3649:81:12",
													"statements": [
														{
															"nativeSrc": "3659:65:12",
															"nodeType": "YulAssignment",
															"src": "3659:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3674:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3674:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3681:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3681:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3670:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3670:3:12"
																},
																"nativeSrc": "3670:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3670:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3659:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3659:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3604:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3631:5:12",
														"nodeType": "YulTypedName",
														"src": "3631:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3641:7:12",
														"nodeType": "YulTypedName",
														"src": "3641:7:12",
														"type": ""
													}
												],
												"src": "3604:126:12"
											},
											{
												"body": {
													"nativeSrc": "3781:51:12",
													"nodeType": "YulBlock",
													"src": "3781:51:12",
													"statements": [
														{
															"nativeSrc": "3791:35:12",
															"nodeType": "YulAssignment",
															"src": "3791:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3820:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3820:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3802:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3802:17:12"
																},
																"nativeSrc": "3802:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3802:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3791:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3736:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3763:5:12",
														"nodeType": "YulTypedName",
														"src": "3763:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3773:7:12",
														"nodeType": "YulTypedName",
														"src": "3773:7:12",
														"type": ""
													}
												],
												"src": "3736:96:12"
											},
											{
												"body": {
													"nativeSrc": "3881:79:12",
													"nodeType": "YulBlock",
													"src": "3881:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3938:16:12",
																"nodeType": "YulBlock",
																"src": "3938:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3947:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3947:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3940:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3940:6:12"
																			},
																			"nativeSrc": "3940:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3940:12:12"
																		},
																		"nativeSrc": "3940:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3940:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3904:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3904:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3929:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3929:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3911:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3911:17:12"
																				},
																				"nativeSrc": "3911:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3911:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3901:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3901:2:12"
																		},
																		"nativeSrc": "3901:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3894:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:12"
																},
																"nativeSrc": "3894:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3894:43:12"
															},
															"nativeSrc": "3891:63:12",
															"nodeType": "YulIf",
															"src": "3891:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3838:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3874:5:12",
														"nodeType": "YulTypedName",
														"src": "3874:5:12",
														"type": ""
													}
												],
												"src": "3838:122:12"
											},
											{
												"body": {
													"nativeSrc": "4018:87:12",
													"nodeType": "YulBlock",
													"src": "4018:87:12",
													"statements": [
														{
															"nativeSrc": "4028:29:12",
															"nodeType": "YulAssignment",
															"src": "4028:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4050:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4037:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4037:12:12"
																},
																"nativeSrc": "4037:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4037:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4028:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4028:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4093:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4093:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4066:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4066:26:12"
																},
																"nativeSrc": "4066:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4066:33:12"
															},
															"nativeSrc": "4066:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4066:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3966:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3996:6:12",
														"nodeType": "YulTypedName",
														"src": "3996:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4004:3:12",
														"nodeType": "YulTypedName",
														"src": "4004:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4012:5:12",
														"nodeType": "YulTypedName",
														"src": "4012:5:12",
														"type": ""
													}
												],
												"src": "3966:139:12"
											},
											{
												"body": {
													"nativeSrc": "4177:263:12",
													"nodeType": "YulBlock",
													"src": "4177:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4223:83:12",
																"nodeType": "YulBlock",
																"src": "4223:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4225:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4225:77:12"
																			},
																			"nativeSrc": "4225:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4225:79:12"
																		},
																		"nativeSrc": "4225:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4225:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4198:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4198:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4207:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4207:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4194:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:12"
																		},
																		"nativeSrc": "4194:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4219:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4190:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4190:3:12"
																},
																"nativeSrc": "4190:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4190:32:12"
															},
															"nativeSrc": "4187:119:12",
															"nodeType": "YulIf",
															"src": "4187:119:12"
														},
														{
															"nativeSrc": "4316:117:12",
															"nodeType": "YulBlock",
															"src": "4316:117:12",
															"statements": [
																{
																	"nativeSrc": "4331:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4331:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4345:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4345:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4335:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4335:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4360:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4360:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4395:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4395:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4406:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4406:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4391:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4391:3:12"
																				},
																				"nativeSrc": "4391:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4391:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4415:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4415:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4370:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4370:20:12"
																		},
																		"nativeSrc": "4370:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4360:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4360:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4111:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4147:9:12",
														"nodeType": "YulTypedName",
														"src": "4147:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4158:7:12",
														"nodeType": "YulTypedName",
														"src": "4158:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4170:6:12",
														"nodeType": "YulTypedName",
														"src": "4170:6:12",
														"type": ""
													}
												],
												"src": "4111:329:12"
											},
											{
												"body": {
													"nativeSrc": "4535:28:12",
													"nodeType": "YulBlock",
													"src": "4535:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4552:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4552:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:12"
																},
																"nativeSrc": "4545:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4545:12:12"
															},
															"nativeSrc": "4545:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4545:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4446:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4446:117:12"
											},
											{
												"body": {
													"nativeSrc": "4658:28:12",
													"nodeType": "YulBlock",
													"src": "4658:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4675:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4675:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4678:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4678:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4668:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4668:6:12"
																},
																"nativeSrc": "4668:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4668:12:12"
															},
															"nativeSrc": "4668:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4668:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4569:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4569:117:12"
											},
											{
												"body": {
													"nativeSrc": "4740:54:12",
													"nodeType": "YulBlock",
													"src": "4740:54:12",
													"statements": [
														{
															"nativeSrc": "4750:38:12",
															"nodeType": "YulAssignment",
															"src": "4750:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4768:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4768:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4775:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4775:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4764:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:12"
																		},
																		"nativeSrc": "4764:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4784:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4784:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4780:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4780:3:12"
																		},
																		"nativeSrc": "4780:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4780:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4760:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4760:3:12"
																},
																"nativeSrc": "4760:28:12",
																"nodeType": "YulFunctionCall",
																"src": "4760:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4750:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4692:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4723:5:12",
														"nodeType": "YulTypedName",
														"src": "4723:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4733:6:12",
														"nodeType": "YulTypedName",
														"src": "4733:6:12",
														"type": ""
													}
												],
												"src": "4692:102:12"
											},
											{
												"body": {
													"nativeSrc": "4828:152:12",
													"nodeType": "YulBlock",
													"src": "4828:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4845:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4848:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4848:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4838:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:12"
																},
																"nativeSrc": "4838:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4838:88:12"
															},
															"nativeSrc": "4838:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4838:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4942:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4945:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4945:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4935:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:12"
																},
																"nativeSrc": "4935:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4935:15:12"
															},
															"nativeSrc": "4935:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4935:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4966:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4966:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4969:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4969:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4959:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4959:6:12"
																},
																"nativeSrc": "4959:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4959:15:12"
															},
															"nativeSrc": "4959:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4959:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4800:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4800:180:12"
											},
											{
												"body": {
													"nativeSrc": "5029:238:12",
													"nodeType": "YulBlock",
													"src": "5029:238:12",
													"statements": [
														{
															"nativeSrc": "5039:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5039:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5061:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5091:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5091:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5069:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5069:21:12"
																		},
																		"nativeSrc": "5069:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5069:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:12"
																},
																"nativeSrc": "5057:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5057:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5043:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5043:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5208:22:12",
																"nodeType": "YulBlock",
																"src": "5208:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5210:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5210:16:12"
																			},
																			"nativeSrc": "5210:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5210:18:12"
																		},
																		"nativeSrc": "5210:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5210:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5151:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5151:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5163:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5163:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5148:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5148:2:12"
																		},
																		"nativeSrc": "5148:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5187:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5187:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5199:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5199:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5184:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5184:2:12"
																		},
																		"nativeSrc": "5184:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5145:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5145:2:12"
																},
																"nativeSrc": "5145:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5145:62:12"
															},
															"nativeSrc": "5142:88:12",
															"nodeType": "YulIf",
															"src": "5142:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5246:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5246:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5250:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5250:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:12"
																},
																"nativeSrc": "5239:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5239:22:12"
															},
															"nativeSrc": "5239:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5239:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4986:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5015:6:12",
														"nodeType": "YulTypedName",
														"src": "5015:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5023:4:12",
														"nodeType": "YulTypedName",
														"src": "5023:4:12",
														"type": ""
													}
												],
												"src": "4986:281:12"
											},
											{
												"body": {
													"nativeSrc": "5314:88:12",
													"nodeType": "YulBlock",
													"src": "5314:88:12",
													"statements": [
														{
															"nativeSrc": "5324:30:12",
															"nodeType": "YulAssignment",
															"src": "5324:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5334:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5334:18:12"
																},
																"nativeSrc": "5334:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5334:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5324:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5324:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5383:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5383:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5391:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5391:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5363:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5363:19:12"
																},
																"nativeSrc": "5363:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5363:33:12"
															},
															"nativeSrc": "5363:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5363:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5273:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5298:4:12",
														"nodeType": "YulTypedName",
														"src": "5298:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5307:6:12",
														"nodeType": "YulTypedName",
														"src": "5307:6:12",
														"type": ""
													}
												],
												"src": "5273:129:12"
											},
											{
												"body": {
													"nativeSrc": "5475:241:12",
													"nodeType": "YulBlock",
													"src": "5475:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5580:22:12",
																"nodeType": "YulBlock",
																"src": "5580:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5582:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5582:16:12"
																			},
																			"nativeSrc": "5582:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5582:18:12"
																		},
																		"nativeSrc": "5582:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5582:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5552:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5552:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5560:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5560:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5549:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5549:2:12"
																},
																"nativeSrc": "5549:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5549:30:12"
															},
															"nativeSrc": "5546:56:12",
															"nodeType": "YulIf",
															"src": "5546:56:12"
														},
														{
															"nativeSrc": "5612:37:12",
															"nodeType": "YulAssignment",
															"src": "5612:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5642:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5620:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "5620:21:12"
																},
																"nativeSrc": "5620:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5620:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5612:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5612:4:12"
																}
															]
														},
														{
															"nativeSrc": "5686:23:12",
															"nodeType": "YulAssignment",
															"src": "5686:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5698:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5704:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5694:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5694:3:12"
																},
																"nativeSrc": "5694:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5694:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5686:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5686:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5408:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5459:6:12",
														"nodeType": "YulTypedName",
														"src": "5459:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5470:4:12",
														"nodeType": "YulTypedName",
														"src": "5470:4:12",
														"type": ""
													}
												],
												"src": "5408:308:12"
											},
											{
												"body": {
													"nativeSrc": "5786:84:12",
													"nodeType": "YulBlock",
													"src": "5786:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5810:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5810:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5815:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5815:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5820:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5820:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5797:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5797:12:12"
																},
																"nativeSrc": "5797:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5797:30:12"
															},
															"nativeSrc": "5797:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5797:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5847:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5847:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5852:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5852:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5843:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:12"
																		},
																		"nativeSrc": "5843:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5861:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5861:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5836:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:12"
																},
																"nativeSrc": "5836:27:12",
																"nodeType": "YulFunctionCall",
																"src": "5836:27:12"
															},
															"nativeSrc": "5836:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "5836:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5722:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5768:3:12",
														"nodeType": "YulTypedName",
														"src": "5768:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5773:3:12",
														"nodeType": "YulTypedName",
														"src": "5773:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5778:6:12",
														"nodeType": "YulTypedName",
														"src": "5778:6:12",
														"type": ""
													}
												],
												"src": "5722:148:12"
											},
											{
												"body": {
													"nativeSrc": "5960:341:12",
													"nodeType": "YulBlock",
													"src": "5960:341:12",
													"statements": [
														{
															"nativeSrc": "5970:75:12",
															"nodeType": "YulAssignment",
															"src": "5970:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6037:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5995:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "5995:41:12"
																		},
																		"nativeSrc": "5995:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5995:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5979:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "5979:15:12"
																},
																"nativeSrc": "5979:66:12",
																"nodeType": "YulFunctionCall",
																"src": "5979:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5970:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5970:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6061:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6061:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6068:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6068:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6054:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6054:6:12"
																},
																"nativeSrc": "6054:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6054:21:12"
															},
															"nativeSrc": "6054:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6054:21:12"
														},
														{
															"nativeSrc": "6084:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6084:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6099:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6099:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6106:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6095:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6095:3:12"
																},
																"nativeSrc": "6095:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6095:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6088:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6088:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6149:83:12",
																"nodeType": "YulBlock",
																"src": "6149:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6151:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6151:77:12"
																			},
																			"nativeSrc": "6151:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6151:79:12"
																		},
																		"nativeSrc": "6151:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6151:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6130:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6130:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6135:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6135:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6126:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6126:3:12"
																		},
																		"nativeSrc": "6126:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6144:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6144:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:12"
																},
																"nativeSrc": "6123:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6123:25:12"
															},
															"nativeSrc": "6120:112:12",
															"nodeType": "YulIf",
															"src": "6120:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6278:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6278:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6283:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6283:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6288:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6288:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6241:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "6241:36:12"
																},
																"nativeSrc": "6241:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6241:54:12"
															},
															"nativeSrc": "6241:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6241:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5876:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5933:3:12",
														"nodeType": "YulTypedName",
														"src": "5933:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5938:6:12",
														"nodeType": "YulTypedName",
														"src": "5938:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5946:3:12",
														"nodeType": "YulTypedName",
														"src": "5946:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5954:5:12",
														"nodeType": "YulTypedName",
														"src": "5954:5:12",
														"type": ""
													}
												],
												"src": "5876:425:12"
											},
											{
												"body": {
													"nativeSrc": "6383:278:12",
													"nodeType": "YulBlock",
													"src": "6383:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6432:83:12",
																"nodeType": "YulBlock",
																"src": "6432:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6434:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6434:77:12"
																			},
																			"nativeSrc": "6434:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6434:79:12"
																		},
																		"nativeSrc": "6434:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6434:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6411:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6411:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6419:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6419:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6407:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6407:3:12"
																				},
																				"nativeSrc": "6407:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6407:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6426:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6426:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6403:3:12"
																		},
																		"nativeSrc": "6403:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6403:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:12"
																},
																"nativeSrc": "6396:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6396:35:12"
															},
															"nativeSrc": "6393:122:12",
															"nodeType": "YulIf",
															"src": "6393:122:12"
														},
														{
															"nativeSrc": "6524:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6524:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6551:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6551:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6538:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6538:12:12"
																},
																"nativeSrc": "6538:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6538:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6528:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6528:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6567:88:12",
															"nodeType": "YulAssignment",
															"src": "6567:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6628:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6628:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6636:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6636:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:12"
																		},
																		"nativeSrc": "6624:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6624:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6643:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6643:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6651:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6651:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6576:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "6576:47:12"
																},
																"nativeSrc": "6576:79:12",
																"nodeType": "YulFunctionCall",
																"src": "6576:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6567:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6567:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6321:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6361:6:12",
														"nodeType": "YulTypedName",
														"src": "6361:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6369:3:12",
														"nodeType": "YulTypedName",
														"src": "6369:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6377:5:12",
														"nodeType": "YulTypedName",
														"src": "6377:5:12",
														"type": ""
													}
												],
												"src": "6321:340:12"
											},
											{
												"body": {
													"nativeSrc": "6794:818:12",
													"nodeType": "YulBlock",
													"src": "6794:818:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6841:83:12",
																"nodeType": "YulBlock",
																"src": "6841:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6843:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6843:77:12"
																			},
																			"nativeSrc": "6843:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6843:79:12"
																		},
																		"nativeSrc": "6843:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6843:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6815:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6815:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6824:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6811:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6811:3:12"
																		},
																		"nativeSrc": "6811:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6811:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6836:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6836:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6807:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:12"
																},
																"nativeSrc": "6807:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6807:33:12"
															},
															"nativeSrc": "6804:120:12",
															"nodeType": "YulIf",
															"src": "6804:120:12"
														},
														{
															"nativeSrc": "6934:287:12",
															"nodeType": "YulBlock",
															"src": "6934:287:12",
															"statements": [
																{
																	"nativeSrc": "6949:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6949:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6980:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6980:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6991:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6991:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6976:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6976:3:12"
																				},
																				"nativeSrc": "6976:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6976:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6963:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "6963:12:12"
																		},
																		"nativeSrc": "6963:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6963:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6953:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6953:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7041:83:12",
																		"nodeType": "YulBlock",
																		"src": "7041:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7043:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7043:77:12"
																					},
																					"nativeSrc": "7043:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7043:79:12"
																				},
																				"nativeSrc": "7043:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7043:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7013:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7013:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7021:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7021:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7010:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7010:2:12"
																		},
																		"nativeSrc": "7010:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7010:30:12"
																	},
																	"nativeSrc": "7007:117:12",
																	"nodeType": "YulIf",
																	"src": "7007:117:12"
																},
																{
																	"nativeSrc": "7138:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7138:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7183:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7183:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7194:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7194:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7179:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7179:3:12"
																				},
																				"nativeSrc": "7179:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7179:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7203:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7203:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7148:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "7148:30:12"
																		},
																		"nativeSrc": "7148:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7148:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7138:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7138:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7231:118:12",
															"nodeType": "YulBlock",
															"src": "7231:118:12",
															"statements": [
																{
																	"nativeSrc": "7246:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7276:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7276:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7311:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7311:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7322:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7322:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7307:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7307:3:12"
																				},
																				"nativeSrc": "7307:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7307:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7331:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7331:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7286:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7286:20:12"
																		},
																		"nativeSrc": "7286:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7276:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7276:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7359:118:12",
															"nodeType": "YulBlock",
															"src": "7359:118:12",
															"statements": [
																{
																	"nativeSrc": "7374:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7374:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7388:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7388:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7378:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7378:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7404:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7404:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7439:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7439:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7450:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7450:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7435:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7435:3:12"
																				},
																				"nativeSrc": "7435:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7435:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7459:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7459:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7414:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7414:20:12"
																		},
																		"nativeSrc": "7414:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7414:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7404:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7404:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7487:118:12",
															"nodeType": "YulBlock",
															"src": "7487:118:12",
															"statements": [
																{
																	"nativeSrc": "7502:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7502:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7516:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7506:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7506:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7532:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7532:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7567:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7567:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7578:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7578:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7563:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7563:3:12"
																				},
																				"nativeSrc": "7563:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7563:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7587:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7587:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7542:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7542:20:12"
																		},
																		"nativeSrc": "7542:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7542:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7532:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7532:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256",
												"nativeSrc": "6667:945:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6740:9:12",
														"nodeType": "YulTypedName",
														"src": "6740:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6751:7:12",
														"nodeType": "YulTypedName",
														"src": "6751:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6763:6:12",
														"nodeType": "YulTypedName",
														"src": "6763:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6771:6:12",
														"nodeType": "YulTypedName",
														"src": "6771:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6779:6:12",
														"nodeType": "YulTypedName",
														"src": "6779:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6787:6:12",
														"nodeType": "YulTypedName",
														"src": "6787:6:12",
														"type": ""
													}
												],
												"src": "6667:945:12"
											},
											{
												"body": {
													"nativeSrc": "7701:391:12",
													"nodeType": "YulBlock",
													"src": "7701:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7747:83:12",
																"nodeType": "YulBlock",
																"src": "7747:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7749:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7749:77:12"
																			},
																			"nativeSrc": "7749:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7749:79:12"
																		},
																		"nativeSrc": "7749:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7749:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7722:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7722:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7731:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7718:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:12"
																		},
																		"nativeSrc": "7718:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7718:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7743:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7714:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7714:3:12"
																},
																"nativeSrc": "7714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7714:32:12"
															},
															"nativeSrc": "7711:119:12",
															"nodeType": "YulIf",
															"src": "7711:119:12"
														},
														{
															"nativeSrc": "7840:117:12",
															"nodeType": "YulBlock",
															"src": "7840:117:12",
															"statements": [
																{
																	"nativeSrc": "7855:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7855:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7869:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7869:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7859:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7859:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7884:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7884:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7919:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7919:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7930:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7930:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7915:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7915:3:12"
																				},
																				"nativeSrc": "7915:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7915:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7939:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7939:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7894:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7894:20:12"
																		},
																		"nativeSrc": "7894:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7894:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7884:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7884:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7967:118:12",
															"nodeType": "YulBlock",
															"src": "7967:118:12",
															"statements": [
																{
																	"nativeSrc": "7982:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7982:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7996:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7996:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7986:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7986:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8012:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8012:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8047:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8047:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8058:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8058:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8043:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8043:3:12"
																				},
																				"nativeSrc": "8043:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8043:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8067:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8067:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8022:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8022:20:12"
																		},
																		"nativeSrc": "8022:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8022:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8012:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8012:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7618:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7663:9:12",
														"nodeType": "YulTypedName",
														"src": "7663:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7674:7:12",
														"nodeType": "YulTypedName",
														"src": "7674:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7686:6:12",
														"nodeType": "YulTypedName",
														"src": "7686:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7694:6:12",
														"nodeType": "YulTypedName",
														"src": "7694:6:12",
														"type": ""
													}
												],
												"src": "7618:474:12"
											},
											{
												"body": {
													"nativeSrc": "8181:391:12",
													"nodeType": "YulBlock",
													"src": "8181:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8227:83:12",
																"nodeType": "YulBlock",
																"src": "8227:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8229:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8229:77:12"
																			},
																			"nativeSrc": "8229:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8229:79:12"
																		},
																		"nativeSrc": "8229:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8229:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8202:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8202:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8211:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8198:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8198:3:12"
																		},
																		"nativeSrc": "8198:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8198:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8223:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8194:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8194:3:12"
																},
																"nativeSrc": "8194:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8194:32:12"
															},
															"nativeSrc": "8191:119:12",
															"nodeType": "YulIf",
															"src": "8191:119:12"
														},
														{
															"nativeSrc": "8320:117:12",
															"nodeType": "YulBlock",
															"src": "8320:117:12",
															"statements": [
																{
																	"nativeSrc": "8335:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8335:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8349:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8339:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8339:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8364:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8364:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8399:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8399:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8410:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8410:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8395:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8395:3:12"
																				},
																				"nativeSrc": "8395:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8395:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8419:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8419:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8374:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8374:20:12"
																		},
																		"nativeSrc": "8374:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8364:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8364:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8447:118:12",
															"nodeType": "YulBlock",
															"src": "8447:118:12",
															"statements": [
																{
																	"nativeSrc": "8462:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8462:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8476:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8476:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8466:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8466:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8492:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8492:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8527:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8527:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8538:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8538:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8523:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8523:3:12"
																				},
																				"nativeSrc": "8523:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8523:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8547:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8547:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8502:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8502:20:12"
																		},
																		"nativeSrc": "8502:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8502:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8492:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8492:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "8098:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8143:9:12",
														"nodeType": "YulTypedName",
														"src": "8143:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8154:7:12",
														"nodeType": "YulTypedName",
														"src": "8154:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8166:6:12",
														"nodeType": "YulTypedName",
														"src": "8166:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8174:6:12",
														"nodeType": "YulTypedName",
														"src": "8174:6:12",
														"type": ""
													}
												],
												"src": "8098:474:12"
											},
											{
												"body": {
													"nativeSrc": "8643:53:12",
													"nodeType": "YulBlock",
													"src": "8643:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8660:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8660:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8683:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8683:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8665:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8665:17:12"
																		},
																		"nativeSrc": "8665:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:12"
																},
																"nativeSrc": "8653:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8653:37:12"
															},
															"nativeSrc": "8653:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8653:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8578:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8631:5:12",
														"nodeType": "YulTypedName",
														"src": "8631:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8638:3:12",
														"nodeType": "YulTypedName",
														"src": "8638:3:12",
														"type": ""
													}
												],
												"src": "8578:118:12"
											},
											{
												"body": {
													"nativeSrc": "8800:124:12",
													"nodeType": "YulBlock",
													"src": "8800:124:12",
													"statements": [
														{
															"nativeSrc": "8810:26:12",
															"nodeType": "YulAssignment",
															"src": "8810:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8822:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8822:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8833:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8833:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:12"
																},
																"nativeSrc": "8818:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8818:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8810:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8810:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8890:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8890:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8903:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8903:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8914:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8914:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8899:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8899:3:12"
																		},
																		"nativeSrc": "8899:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8899:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8846:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8846:43:12"
																},
																"nativeSrc": "8846:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8846:71:12"
															},
															"nativeSrc": "8846:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8846:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8702:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8772:9:12",
														"nodeType": "YulTypedName",
														"src": "8772:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8784:6:12",
														"nodeType": "YulTypedName",
														"src": "8784:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8795:4:12",
														"nodeType": "YulTypedName",
														"src": "8795:4:12",
														"type": ""
													}
												],
												"src": "8702:222:12"
											},
											{
												"body": {
													"nativeSrc": "8989:40:12",
													"nodeType": "YulBlock",
													"src": "8989:40:12",
													"statements": [
														{
															"nativeSrc": "9000:22:12",
															"nodeType": "YulAssignment",
															"src": "9000:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9016:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9016:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9010:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9010:5:12"
																},
																"nativeSrc": "9010:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9010:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9000:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "8930:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8972:5:12",
														"nodeType": "YulTypedName",
														"src": "8972:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8982:6:12",
														"nodeType": "YulTypedName",
														"src": "8982:6:12",
														"type": ""
													}
												],
												"src": "8930:99:12"
											},
											{
												"body": {
													"nativeSrc": "9131:73:12",
													"nodeType": "YulBlock",
													"src": "9131:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9148:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9148:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9153:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9153:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9141:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:12"
																},
																"nativeSrc": "9141:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9141:19:12"
															},
															"nativeSrc": "9141:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9141:19:12"
														},
														{
															"nativeSrc": "9169:29:12",
															"nodeType": "YulAssignment",
															"src": "9169:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9188:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9188:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9193:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9193:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:12"
																},
																"nativeSrc": "9184:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9184:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9169:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9169:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9035:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9103:3:12",
														"nodeType": "YulTypedName",
														"src": "9103:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9108:6:12",
														"nodeType": "YulTypedName",
														"src": "9108:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9119:11:12",
														"nodeType": "YulTypedName",
														"src": "9119:11:12",
														"type": ""
													}
												],
												"src": "9035:169:12"
											},
											{
												"body": {
													"nativeSrc": "9272:77:12",
													"nodeType": "YulBlock",
													"src": "9272:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9289:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9289:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9294:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9294:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9299:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9283:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9283:5:12"
																},
																"nativeSrc": "9283:23:12",
																"nodeType": "YulFunctionCall",
																"src": "9283:23:12"
															},
															"nativeSrc": "9283:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "9283:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9326:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9326:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9331:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9331:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9322:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:12"
																		},
																		"nativeSrc": "9322:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9340:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9340:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:12"
																},
																"nativeSrc": "9315:27:12",
																"nodeType": "YulFunctionCall",
																"src": "9315:27:12"
															},
															"nativeSrc": "9315:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "9315:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9210:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9254:3:12",
														"nodeType": "YulTypedName",
														"src": "9254:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9259:3:12",
														"nodeType": "YulTypedName",
														"src": "9259:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9264:6:12",
														"nodeType": "YulTypedName",
														"src": "9264:6:12",
														"type": ""
													}
												],
												"src": "9210:139:12"
											},
											{
												"body": {
													"nativeSrc": "9447:285:12",
													"nodeType": "YulBlock",
													"src": "9447:285:12",
													"statements": [
														{
															"nativeSrc": "9457:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9457:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9504:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9504:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9471:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "9471:32:12"
																},
																"nativeSrc": "9471:39:12",
																"nodeType": "YulFunctionCall",
																"src": "9471:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9461:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9461:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9519:78:12",
															"nodeType": "YulAssignment",
															"src": "9519:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9585:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9585:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9590:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9590:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9526:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9526:58:12"
																},
																"nativeSrc": "9526:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9526:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9519:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9519:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9645:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9645:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9652:4:12",
																				"nodeType": "YulLiteral",
																				"src": "9652:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9641:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9641:3:12"
																		},
																		"nativeSrc": "9641:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9641:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9659:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9664:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9664:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9606:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "9606:34:12"
																},
																"nativeSrc": "9606:65:12",
																"nodeType": "YulFunctionCall",
																"src": "9606:65:12"
															},
															"nativeSrc": "9606:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "9606:65:12"
														},
														{
															"nativeSrc": "9680:46:12",
															"nodeType": "YulAssignment",
															"src": "9680:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9691:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9691:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9718:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9718:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9696:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "9696:21:12"
																		},
																		"nativeSrc": "9696:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9687:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:12"
																},
																"nativeSrc": "9687:39:12",
																"nodeType": "YulFunctionCall",
																"src": "9687:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9355:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9428:5:12",
														"nodeType": "YulTypedName",
														"src": "9428:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9435:3:12",
														"nodeType": "YulTypedName",
														"src": "9435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9443:3:12",
														"nodeType": "YulTypedName",
														"src": "9443:3:12",
														"type": ""
													}
												],
												"src": "9355:377:12"
											},
											{
												"body": {
													"nativeSrc": "10018:685:12",
													"nodeType": "YulBlock",
													"src": "10018:685:12",
													"statements": [
														{
															"nativeSrc": "10028:27:12",
															"nodeType": "YulAssignment",
															"src": "10028:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10040:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10051:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10051:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10036:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10036:3:12"
																},
																"nativeSrc": "10036:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10036:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10028:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10028:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10109:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10109:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10133:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10133:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:12"
																		},
																		"nativeSrc": "10118:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10065:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10065:43:12"
																},
																"nativeSrc": "10065:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10065:71:12"
															},
															"nativeSrc": "10065:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10065:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10157:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10157:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10168:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10168:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10153:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10153:3:12"
																		},
																		"nativeSrc": "10153:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10153:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10177:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10177:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10183:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10183:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10173:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10173:3:12"
																		},
																		"nativeSrc": "10173:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10173:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10146:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10146:6:12"
																},
																"nativeSrc": "10146:48:12",
																"nodeType": "YulFunctionCall",
																"src": "10146:48:12"
															},
															"nativeSrc": "10146:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "10146:48:12"
														},
														{
															"nativeSrc": "10203:86:12",
															"nodeType": "YulAssignment",
															"src": "10203:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10275:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10275:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10284:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10284:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10211:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "10211:63:12"
																},
																"nativeSrc": "10211:78:12",
																"nodeType": "YulFunctionCall",
																"src": "10211:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10203:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10203:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10343:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10343:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10356:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10356:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10367:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10367:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:12"
																		},
																		"nativeSrc": "10352:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10299:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10299:43:12"
																},
																"nativeSrc": "10299:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10299:72:12"
															},
															"nativeSrc": "10299:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10299:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10425:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10425:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10438:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10438:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10449:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10449:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10434:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10434:3:12"
																		},
																		"nativeSrc": "10434:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10434:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10381:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10381:43:12"
																},
																"nativeSrc": "10381:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10381:72:12"
															},
															"nativeSrc": "10381:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10381:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10507:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10507:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10520:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10520:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10531:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10531:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10516:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10516:3:12"
																		},
																		"nativeSrc": "10516:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10516:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10463:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10463:43:12"
																},
																"nativeSrc": "10463:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10463:73:12"
															},
															"nativeSrc": "10463:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10463:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10590:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10590:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10603:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10603:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10614:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10599:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:12"
																		},
																		"nativeSrc": "10599:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10599:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10546:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10546:43:12"
																},
																"nativeSrc": "10546:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10546:73:12"
															},
															"nativeSrc": "10546:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10546:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "10667:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10667:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10680:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10680:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10691:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10691:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10676:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:12"
																		},
																		"nativeSrc": "10676:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10629:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "10629:37:12"
																},
																"nativeSrc": "10629:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10629:67:12"
															},
															"nativeSrc": "10629:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "10629:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "9738:965:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9942:9:12",
														"nodeType": "YulTypedName",
														"src": "9942:9:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9954:6:12",
														"nodeType": "YulTypedName",
														"src": "9954:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9962:6:12",
														"nodeType": "YulTypedName",
														"src": "9962:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9970:6:12",
														"nodeType": "YulTypedName",
														"src": "9970:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9978:6:12",
														"nodeType": "YulTypedName",
														"src": "9978:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9986:6:12",
														"nodeType": "YulTypedName",
														"src": "9986:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9994:6:12",
														"nodeType": "YulTypedName",
														"src": "9994:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10002:6:12",
														"nodeType": "YulTypedName",
														"src": "10002:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10013:4:12",
														"nodeType": "YulTypedName",
														"src": "10013:4:12",
														"type": ""
													}
												],
												"src": "9738:965:12"
											},
											{
												"body": {
													"nativeSrc": "10741:28:12",
													"nodeType": "YulBlock",
													"src": "10741:28:12",
													"statements": [
														{
															"nativeSrc": "10751:12:12",
															"nodeType": "YulAssignment",
															"src": "10751:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "10758:5:12",
																"nodeType": "YulIdentifier",
																"src": "10758:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10751:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10751:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10709:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10727:5:12",
														"nodeType": "YulTypedName",
														"src": "10727:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10737:3:12",
														"nodeType": "YulTypedName",
														"src": "10737:3:12",
														"type": ""
													}
												],
												"src": "10709:60:12"
											},
											{
												"body": {
													"nativeSrc": "10835:82:12",
													"nodeType": "YulBlock",
													"src": "10835:82:12",
													"statements": [
														{
															"nativeSrc": "10845:66:12",
															"nodeType": "YulAssignment",
															"src": "10845:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10903:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10903:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10885:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "10885:17:12"
																				},
																				"nativeSrc": "10885:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10885:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10876:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "10876:8:12"
																		},
																		"nativeSrc": "10876:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10876:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "10858:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10858:17:12"
																},
																"nativeSrc": "10858:53:12",
																"nodeType": "YulFunctionCall",
																"src": "10858:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10845:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10845:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "10775:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10815:5:12",
														"nodeType": "YulTypedName",
														"src": "10815:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10825:9:12",
														"nodeType": "YulTypedName",
														"src": "10825:9:12",
														"type": ""
													}
												],
												"src": "10775:142:12"
											},
											{
												"body": {
													"nativeSrc": "10983:66:12",
													"nodeType": "YulBlock",
													"src": "10983:66:12",
													"statements": [
														{
															"nativeSrc": "10993:50:12",
															"nodeType": "YulAssignment",
															"src": "10993:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11037:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11037:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11006:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11006:30:12"
																},
																"nativeSrc": "11006:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11006:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10993:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10993:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "10923:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10963:5:12",
														"nodeType": "YulTypedName",
														"src": "10963:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10973:9:12",
														"nodeType": "YulTypedName",
														"src": "10973:9:12",
														"type": ""
													}
												],
												"src": "10923:126:12"
											},
											{
												"body": {
													"nativeSrc": "11129:66:12",
													"nodeType": "YulBlock",
													"src": "11129:66:12",
													"statements": [
														{
															"nativeSrc": "11139:50:12",
															"nodeType": "YulAssignment",
															"src": "11139:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11183:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11183:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11152:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11152:30:12"
																},
																"nativeSrc": "11152:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11152:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11139:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11139:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$611_to_t_address",
												"nativeSrc": "11055:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11109:5:12",
														"nodeType": "YulTypedName",
														"src": "11109:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11119:9:12",
														"nodeType": "YulTypedName",
														"src": "11119:9:12",
														"type": ""
													}
												],
												"src": "11055:140:12"
											},
											{
												"body": {
													"nativeSrc": "11280:80:12",
													"nodeType": "YulBlock",
													"src": "11280:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11297:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11297:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11347:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11347:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$611_to_t_address",
																			"nativeSrc": "11302:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "11302:44:12"
																		},
																		"nativeSrc": "11302:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11302:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11290:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11290:6:12"
																},
																"nativeSrc": "11290:64:12",
																"nodeType": "YulFunctionCall",
																"src": "11290:64:12"
															},
															"nativeSrc": "11290:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "11290:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack",
												"nativeSrc": "11201:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11268:5:12",
														"nodeType": "YulTypedName",
														"src": "11268:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11275:3:12",
														"nodeType": "YulTypedName",
														"src": "11275:3:12",
														"type": ""
													}
												],
												"src": "11201:159:12"
											},
											{
												"body": {
													"nativeSrc": "11478:138:12",
													"nodeType": "YulBlock",
													"src": "11478:138:12",
													"statements": [
														{
															"nativeSrc": "11488:26:12",
															"nodeType": "YulAssignment",
															"src": "11488:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11500:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11500:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11511:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11511:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11496:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11496:3:12"
																},
																"nativeSrc": "11496:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11496:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11488:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11488:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11582:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11582:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11595:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11595:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11606:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11606:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11591:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11591:3:12"
																		},
																		"nativeSrc": "11591:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11591:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack",
																	"nativeSrc": "11524:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "11524:57:12"
																},
																"nativeSrc": "11524:85:12",
																"nodeType": "YulFunctionCall",
																"src": "11524:85:12"
															},
															"nativeSrc": "11524:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "11524:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed",
												"nativeSrc": "11366:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11450:9:12",
														"nodeType": "YulTypedName",
														"src": "11450:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11462:6:12",
														"nodeType": "YulTypedName",
														"src": "11462:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11473:4:12",
														"nodeType": "YulTypedName",
														"src": "11473:4:12",
														"type": ""
													}
												],
												"src": "11366:250:12"
											},
											{
												"body": {
													"nativeSrc": "11728:62:12",
													"nodeType": "YulBlock",
													"src": "11728:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11750:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11750:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11758:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11758:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11746:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11746:3:12"
																		},
																		"nativeSrc": "11746:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11746:14:12"
																	},
																	{
																		"hexValue": "41504920646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "11762:20:12",
																		"nodeType": "YulLiteral",
																		"src": "11762:20:12",
																		"type": "",
																		"value": "API does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11739:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11739:6:12"
																},
																"nativeSrc": "11739:44:12",
																"nodeType": "YulFunctionCall",
																"src": "11739:44:12"
															},
															"nativeSrc": "11739:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "11739:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
												"nativeSrc": "11622:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11720:6:12",
														"nodeType": "YulTypedName",
														"src": "11720:6:12",
														"type": ""
													}
												],
												"src": "11622:168:12"
											},
											{
												"body": {
													"nativeSrc": "11942:220:12",
													"nodeType": "YulBlock",
													"src": "11942:220:12",
													"statements": [
														{
															"nativeSrc": "11952:74:12",
															"nodeType": "YulAssignment",
															"src": "11952:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12018:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12018:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12023:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12023:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11959:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11959:58:12"
																},
																"nativeSrc": "11959:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11959:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12124:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																	"nativeSrc": "12035:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12035:88:12"
																},
																"nativeSrc": "12035:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12035:93:12"
															},
															"nativeSrc": "12035:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12035:93:12"
														},
														{
															"nativeSrc": "12137:19:12",
															"nodeType": "YulAssignment",
															"src": "12137:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12148:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12148:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12153:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12153:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12144:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12144:3:12"
																},
																"nativeSrc": "12144:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12144:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12137:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12137:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11796:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11930:3:12",
														"nodeType": "YulTypedName",
														"src": "11930:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11938:3:12",
														"nodeType": "YulTypedName",
														"src": "11938:3:12",
														"type": ""
													}
												],
												"src": "11796:366:12"
											},
											{
												"body": {
													"nativeSrc": "12339:248:12",
													"nodeType": "YulBlock",
													"src": "12339:248:12",
													"statements": [
														{
															"nativeSrc": "12349:26:12",
															"nodeType": "YulAssignment",
															"src": "12349:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12361:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12361:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12372:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12357:3:12"
																},
																"nativeSrc": "12357:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12357:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12349:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12349:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12396:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12407:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12392:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:12"
																		},
																		"nativeSrc": "12392:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12415:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12415:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12421:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12411:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:12"
																		},
																		"nativeSrc": "12411:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12411:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12385:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:12"
																},
																"nativeSrc": "12385:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12385:47:12"
															},
															"nativeSrc": "12385:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12385:47:12"
														},
														{
															"nativeSrc": "12441:139:12",
															"nodeType": "YulAssignment",
															"src": "12441:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12575:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12575:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12449:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12449:124:12"
																},
																"nativeSrc": "12449:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12449:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12441:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12441:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12168:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12319:9:12",
														"nodeType": "YulTypedName",
														"src": "12319:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12334:4:12",
														"nodeType": "YulTypedName",
														"src": "12334:4:12",
														"type": ""
													}
												],
												"src": "12168:419:12"
											},
											{
												"body": {
													"nativeSrc": "12699:66:12",
													"nodeType": "YulBlock",
													"src": "12699:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12721:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12721:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12729:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12729:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12717:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12717:3:12"
																		},
																		"nativeSrc": "12717:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12717:14:12"
																	},
																	{
																		"hexValue": "4e6f2061637469766520737562736372697074696f6e",
																		"kind": "string",
																		"nativeSrc": "12733:24:12",
																		"nodeType": "YulLiteral",
																		"src": "12733:24:12",
																		"type": "",
																		"value": "No active subscription"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12710:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12710:6:12"
																},
																"nativeSrc": "12710:48:12",
																"nodeType": "YulFunctionCall",
																"src": "12710:48:12"
															},
															"nativeSrc": "12710:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "12710:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
												"nativeSrc": "12593:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12691:6:12",
														"nodeType": "YulTypedName",
														"src": "12691:6:12",
														"type": ""
													}
												],
												"src": "12593:172:12"
											},
											{
												"body": {
													"nativeSrc": "12917:220:12",
													"nodeType": "YulBlock",
													"src": "12917:220:12",
													"statements": [
														{
															"nativeSrc": "12927:74:12",
															"nodeType": "YulAssignment",
															"src": "12927:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12993:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12993:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12998:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12934:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12934:58:12"
																},
																"nativeSrc": "12934:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12934:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12927:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12927:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13099:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13099:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
																	"nativeSrc": "13010:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13010:88:12"
																},
																"nativeSrc": "13010:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13010:93:12"
															},
															"nativeSrc": "13010:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13010:93:12"
														},
														{
															"nativeSrc": "13112:19:12",
															"nodeType": "YulAssignment",
															"src": "13112:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13123:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13123:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13128:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13128:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13119:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13119:3:12"
																},
																"nativeSrc": "13119:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13119:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13112:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13112:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12771:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12905:3:12",
														"nodeType": "YulTypedName",
														"src": "12905:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12913:3:12",
														"nodeType": "YulTypedName",
														"src": "12913:3:12",
														"type": ""
													}
												],
												"src": "12771:366:12"
											},
											{
												"body": {
													"nativeSrc": "13314:248:12",
													"nodeType": "YulBlock",
													"src": "13314:248:12",
													"statements": [
														{
															"nativeSrc": "13324:26:12",
															"nodeType": "YulAssignment",
															"src": "13324:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13336:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13336:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13347:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13347:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13332:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:12"
																},
																"nativeSrc": "13332:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13332:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13324:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13324:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13371:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13371:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13382:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13382:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13367:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13367:3:12"
																		},
																		"nativeSrc": "13367:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13367:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13390:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13390:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13396:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13396:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13386:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13386:3:12"
																		},
																		"nativeSrc": "13386:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13386:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13360:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13360:6:12"
																},
																"nativeSrc": "13360:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13360:47:12"
															},
															"nativeSrc": "13360:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13360:47:12"
														},
														{
															"nativeSrc": "13416:139:12",
															"nodeType": "YulAssignment",
															"src": "13416:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13550:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13550:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13424:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13424:124:12"
																},
																"nativeSrc": "13424:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13424:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13416:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13416:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13143:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13294:9:12",
														"nodeType": "YulTypedName",
														"src": "13294:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13309:4:12",
														"nodeType": "YulTypedName",
														"src": "13309:4:12",
														"type": ""
													}
												],
												"src": "13143:419:12"
											},
											{
												"body": {
													"nativeSrc": "13674:68:12",
													"nodeType": "YulBlock",
													"src": "13674:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13696:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13696:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13704:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13704:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13692:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13692:3:12"
																		},
																		"nativeSrc": "13692:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13692:14:12"
																	},
																	{
																		"hexValue": "415049206e616d652063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "13708:26:12",
																		"nodeType": "YulLiteral",
																		"src": "13708:26:12",
																		"type": "",
																		"value": "API name cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13685:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13685:6:12"
																},
																"nativeSrc": "13685:50:12",
																"nodeType": "YulFunctionCall",
																"src": "13685:50:12"
															},
															"nativeSrc": "13685:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "13685:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
												"nativeSrc": "13568:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13666:6:12",
														"nodeType": "YulTypedName",
														"src": "13666:6:12",
														"type": ""
													}
												],
												"src": "13568:174:12"
											},
											{
												"body": {
													"nativeSrc": "13894:220:12",
													"nodeType": "YulBlock",
													"src": "13894:220:12",
													"statements": [
														{
															"nativeSrc": "13904:74:12",
															"nodeType": "YulAssignment",
															"src": "13904:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13970:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13970:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13975:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13975:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13911:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13911:58:12"
																},
																"nativeSrc": "13911:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13911:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13904:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13904:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14076:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																	"nativeSrc": "13987:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13987:88:12"
																},
																"nativeSrc": "13987:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13987:93:12"
															},
															"nativeSrc": "13987:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13987:93:12"
														},
														{
															"nativeSrc": "14089:19:12",
															"nodeType": "YulAssignment",
															"src": "14089:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14100:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14100:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14105:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14105:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14096:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14096:3:12"
																},
																"nativeSrc": "14096:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14096:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14089:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14089:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13748:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13882:3:12",
														"nodeType": "YulTypedName",
														"src": "13882:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13890:3:12",
														"nodeType": "YulTypedName",
														"src": "13890:3:12",
														"type": ""
													}
												],
												"src": "13748:366:12"
											},
											{
												"body": {
													"nativeSrc": "14291:248:12",
													"nodeType": "YulBlock",
													"src": "14291:248:12",
													"statements": [
														{
															"nativeSrc": "14301:26:12",
															"nodeType": "YulAssignment",
															"src": "14301:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14313:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14313:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14324:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14309:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14309:3:12"
																},
																"nativeSrc": "14309:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14309:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14301:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14301:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14348:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14348:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14359:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14359:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14344:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14344:3:12"
																		},
																		"nativeSrc": "14344:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14344:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14367:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14367:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14373:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14373:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14363:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14363:3:12"
																		},
																		"nativeSrc": "14363:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14363:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14337:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14337:6:12"
																},
																"nativeSrc": "14337:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14337:47:12"
															},
															"nativeSrc": "14337:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14337:47:12"
														},
														{
															"nativeSrc": "14393:139:12",
															"nodeType": "YulAssignment",
															"src": "14393:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14527:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14527:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14401:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14401:124:12"
																},
																"nativeSrc": "14401:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14401:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14393:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14393:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14120:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14271:9:12",
														"nodeType": "YulTypedName",
														"src": "14271:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14286:4:12",
														"nodeType": "YulTypedName",
														"src": "14286:4:12",
														"type": ""
													}
												],
												"src": "14120:419:12"
											},
											{
												"body": {
													"nativeSrc": "14651:117:12",
													"nodeType": "YulBlock",
													"src": "14651:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14673:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14673:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14681:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14681:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14669:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14669:3:12"
																		},
																		"nativeSrc": "14669:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14669:14:12"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652070726963696e67206f7074696f6e2072657175",
																		"kind": "string",
																		"nativeSrc": "14685:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14685:34:12",
																		"type": "",
																		"value": "At least one pricing option requ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14662:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14662:6:12"
																},
																"nativeSrc": "14662:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14662:58:12"
															},
															"nativeSrc": "14662:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14662:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14741:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14741:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14749:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14749:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14737:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14737:3:12"
																		},
																		"nativeSrc": "14737:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14737:15:12"
																	},
																	{
																		"hexValue": "69726564",
																		"kind": "string",
																		"nativeSrc": "14754:6:12",
																		"nodeType": "YulLiteral",
																		"src": "14754:6:12",
																		"type": "",
																		"value": "ired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14730:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14730:6:12"
																},
																"nativeSrc": "14730:31:12",
																"nodeType": "YulFunctionCall",
																"src": "14730:31:12"
															},
															"nativeSrc": "14730:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "14730:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c",
												"nativeSrc": "14545:223:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14643:6:12",
														"nodeType": "YulTypedName",
														"src": "14643:6:12",
														"type": ""
													}
												],
												"src": "14545:223:12"
											},
											{
												"body": {
													"nativeSrc": "14920:220:12",
													"nodeType": "YulBlock",
													"src": "14920:220:12",
													"statements": [
														{
															"nativeSrc": "14930:74:12",
															"nodeType": "YulAssignment",
															"src": "14930:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14996:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14996:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15001:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15001:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14937:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14937:58:12"
																},
																"nativeSrc": "14937:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14937:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14930:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15102:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15102:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c",
																	"nativeSrc": "15013:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15013:88:12"
																},
																"nativeSrc": "15013:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15013:93:12"
															},
															"nativeSrc": "15013:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15013:93:12"
														},
														{
															"nativeSrc": "15115:19:12",
															"nodeType": "YulAssignment",
															"src": "15115:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15126:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15126:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15131:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15131:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15122:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15122:3:12"
																},
																"nativeSrc": "15122:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15122:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15115:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15115:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14774:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14908:3:12",
														"nodeType": "YulTypedName",
														"src": "14908:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14916:3:12",
														"nodeType": "YulTypedName",
														"src": "14916:3:12",
														"type": ""
													}
												],
												"src": "14774:366:12"
											},
											{
												"body": {
													"nativeSrc": "15317:248:12",
													"nodeType": "YulBlock",
													"src": "15317:248:12",
													"statements": [
														{
															"nativeSrc": "15327:26:12",
															"nodeType": "YulAssignment",
															"src": "15327:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15339:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15339:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15350:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15350:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15335:3:12"
																},
																"nativeSrc": "15335:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15335:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15327:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15327:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15374:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15374:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15385:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15385:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15370:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15370:3:12"
																		},
																		"nativeSrc": "15370:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15370:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15393:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15393:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15399:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15399:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15389:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15389:3:12"
																		},
																		"nativeSrc": "15389:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15389:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15363:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15363:6:12"
																},
																"nativeSrc": "15363:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15363:47:12"
															},
															"nativeSrc": "15363:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15363:47:12"
														},
														{
															"nativeSrc": "15419:139:12",
															"nodeType": "YulAssignment",
															"src": "15419:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15553:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15553:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15427:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15427:124:12"
																},
																"nativeSrc": "15427:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15427:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15419:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15419:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15146:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15297:9:12",
														"nodeType": "YulTypedName",
														"src": "15297:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15312:4:12",
														"nodeType": "YulTypedName",
														"src": "15312:4:12",
														"type": ""
													}
												],
												"src": "15146:419:12"
											},
											{
												"body": {
													"nativeSrc": "15599:152:12",
													"nodeType": "YulBlock",
													"src": "15599:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15616:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15616:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15619:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15619:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15609:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15609:6:12"
																},
																"nativeSrc": "15609:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15609:88:12"
															},
															"nativeSrc": "15609:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15609:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15713:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15713:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15716:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15716:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15706:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15706:6:12"
																},
																"nativeSrc": "15706:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15706:15:12"
															},
															"nativeSrc": "15706:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15706:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15737:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15737:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15740:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15740:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15730:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15730:6:12"
																},
																"nativeSrc": "15730:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15730:15:12"
															},
															"nativeSrc": "15730:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15730:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15571:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15571:180:12"
											},
											{
												"body": {
													"nativeSrc": "15800:190:12",
													"nodeType": "YulBlock",
													"src": "15800:190:12",
													"statements": [
														{
															"nativeSrc": "15810:33:12",
															"nodeType": "YulAssignment",
															"src": "15810:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15837:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15837:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15819:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15819:17:12"
																},
																"nativeSrc": "15819:24:12",
																"nodeType": "YulFunctionCall",
																"src": "15819:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15810:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15810:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15933:22:12",
																"nodeType": "YulBlock",
																"src": "15933:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15935:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15935:16:12"
																			},
																			"nativeSrc": "15935:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15935:18:12"
																		},
																		"nativeSrc": "15935:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15935:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15858:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15858:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15865:66:12",
																		"nodeType": "YulLiteral",
																		"src": "15865:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15855:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15855:2:12"
																},
																"nativeSrc": "15855:77:12",
																"nodeType": "YulFunctionCall",
																"src": "15855:77:12"
															},
															"nativeSrc": "15852:103:12",
															"nodeType": "YulIf",
															"src": "15852:103:12"
														},
														{
															"nativeSrc": "15964:20:12",
															"nodeType": "YulAssignment",
															"src": "15964:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15975:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15975:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15982:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15982:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15971:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15971:3:12"
																},
																"nativeSrc": "15971:13:12",
																"nodeType": "YulFunctionCall",
																"src": "15971:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15964:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15964:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15757:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15786:5:12",
														"nodeType": "YulTypedName",
														"src": "15786:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15796:3:12",
														"nodeType": "YulTypedName",
														"src": "15796:3:12",
														"type": ""
													}
												],
												"src": "15757:233:12"
											},
											{
												"body": {
													"nativeSrc": "16024:152:12",
													"nodeType": "YulBlock",
													"src": "16024:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16041:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16041:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16044:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16044:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16034:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16034:6:12"
																},
																"nativeSrc": "16034:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16034:88:12"
															},
															"nativeSrc": "16034:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16034:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16138:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16138:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16141:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16141:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16131:6:12"
																},
																"nativeSrc": "16131:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16131:15:12"
															},
															"nativeSrc": "16131:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16131:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16162:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16162:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16165:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16165:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16155:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16155:6:12"
																},
																"nativeSrc": "16155:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16155:15:12"
															},
															"nativeSrc": "16155:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16155:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "15996:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15996:180:12"
											},
											{
												"body": {
													"nativeSrc": "16233:269:12",
													"nodeType": "YulBlock",
													"src": "16233:269:12",
													"statements": [
														{
															"nativeSrc": "16243:22:12",
															"nodeType": "YulAssignment",
															"src": "16243:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16257:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16257:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16263:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16263:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16253:3:12"
																},
																"nativeSrc": "16253:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16253:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16243:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16243:6:12"
																}
															]
														},
														{
															"nativeSrc": "16274:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16274:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16304:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16304:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16310:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16310:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16300:3:12"
																},
																"nativeSrc": "16300:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16300:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "16278:18:12",
																	"nodeType": "YulTypedName",
																	"src": "16278:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16351:51:12",
																"nodeType": "YulBlock",
																"src": "16351:51:12",
																"statements": [
																	{
																		"nativeSrc": "16365:27:12",
																		"nodeType": "YulAssignment",
																		"src": "16365:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "16379:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "16379:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16387:4:12",
																					"nodeType": "YulLiteral",
																					"src": "16387:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "16375:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "16375:3:12"
																			},
																			"nativeSrc": "16375:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16375:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "16365:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16365:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "16331:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "16331:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16324:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16324:6:12"
																},
																"nativeSrc": "16324:26:12",
																"nodeType": "YulFunctionCall",
																"src": "16324:26:12"
															},
															"nativeSrc": "16321:81:12",
															"nodeType": "YulIf",
															"src": "16321:81:12"
														},
														{
															"body": {
																"nativeSrc": "16454:42:12",
																"nodeType": "YulBlock",
																"src": "16454:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "16468:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16468:16:12"
																			},
																			"nativeSrc": "16468:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16468:18:12"
																		},
																		"nativeSrc": "16468:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16468:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "16418:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "16418:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16441:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16441:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16449:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16449:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16438:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16438:2:12"
																		},
																		"nativeSrc": "16438:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16438:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16415:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16415:2:12"
																},
																"nativeSrc": "16415:38:12",
																"nodeType": "YulFunctionCall",
																"src": "16415:38:12"
															},
															"nativeSrc": "16412:84:12",
															"nodeType": "YulIf",
															"src": "16412:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "16182:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16217:4:12",
														"nodeType": "YulTypedName",
														"src": "16217:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16226:6:12",
														"nodeType": "YulTypedName",
														"src": "16226:6:12",
														"type": ""
													}
												],
												"src": "16182:320:12"
											},
											{
												"body": {
													"nativeSrc": "16562:87:12",
													"nodeType": "YulBlock",
													"src": "16562:87:12",
													"statements": [
														{
															"nativeSrc": "16572:11:12",
															"nodeType": "YulAssignment",
															"src": "16572:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "16580:3:12",
																"nodeType": "YulIdentifier",
																"src": "16580:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16572:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16572:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16600:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16600:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16603:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16603:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16593:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16593:6:12"
																},
																"nativeSrc": "16593:14:12",
																"nodeType": "YulFunctionCall",
																"src": "16593:14:12"
															},
															"nativeSrc": "16593:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "16593:14:12"
														},
														{
															"nativeSrc": "16616:26:12",
															"nodeType": "YulAssignment",
															"src": "16616:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16634:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16634:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16637:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16637:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16624:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "16624:9:12"
																},
																"nativeSrc": "16624:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16624:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16616:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16616:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16508:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16549:3:12",
														"nodeType": "YulTypedName",
														"src": "16549:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16557:4:12",
														"nodeType": "YulTypedName",
														"src": "16557:4:12",
														"type": ""
													}
												],
												"src": "16508:141:12"
											},
											{
												"body": {
													"nativeSrc": "16699:49:12",
													"nodeType": "YulBlock",
													"src": "16699:49:12",
													"statements": [
														{
															"nativeSrc": "16709:33:12",
															"nodeType": "YulAssignment",
															"src": "16709:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16727:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16727:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16734:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16734:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16723:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16723:3:12"
																		},
																		"nativeSrc": "16723:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16723:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16739:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16739:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16719:3:12"
																},
																"nativeSrc": "16719:23:12",
																"nodeType": "YulFunctionCall",
																"src": "16719:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16709:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16709:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16655:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16682:5:12",
														"nodeType": "YulTypedName",
														"src": "16682:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16692:6:12",
														"nodeType": "YulTypedName",
														"src": "16692:6:12",
														"type": ""
													}
												],
												"src": "16655:93:12"
											},
											{
												"body": {
													"nativeSrc": "16807:54:12",
													"nodeType": "YulBlock",
													"src": "16807:54:12",
													"statements": [
														{
															"nativeSrc": "16817:37:12",
															"nodeType": "YulAssignment",
															"src": "16817:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16842:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16848:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16848:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16838:3:12"
																},
																"nativeSrc": "16838:16:12",
																"nodeType": "YulFunctionCall",
																"src": "16838:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16817:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "16817:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16754:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16782:4:12",
														"nodeType": "YulTypedName",
														"src": "16782:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16788:5:12",
														"nodeType": "YulTypedName",
														"src": "16788:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16798:8:12",
														"nodeType": "YulTypedName",
														"src": "16798:8:12",
														"type": ""
													}
												],
												"src": "16754:107:12"
											},
											{
												"body": {
													"nativeSrc": "16943:317:12",
													"nodeType": "YulBlock",
													"src": "16943:317:12",
													"statements": [
														{
															"nativeSrc": "16953:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16953:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16974:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "16974:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16986:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16986:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16970:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16970:3:12"
																},
																"nativeSrc": "16970:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16970:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16957:9:12",
																	"nodeType": "YulTypedName",
																	"src": "16957:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16997:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16997:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17028:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17028:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17039:66:12",
																		"nodeType": "YulLiteral",
																		"src": "17039:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17009:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "17009:18:12"
																},
																"nativeSrc": "17009:97:12",
																"nodeType": "YulFunctionCall",
																"src": "17009:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17001:4:12",
																	"nodeType": "YulTypedName",
																	"src": "17001:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17115:51:12",
															"nodeType": "YulAssignment",
															"src": "17115:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17146:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17146:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "17157:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "17157:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17127:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "17127:18:12"
																},
																"nativeSrc": "17127:39:12",
																"nodeType": "YulFunctionCall",
																"src": "17127:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "17115:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "17115:8:12"
																}
															]
														},
														{
															"nativeSrc": "17175:30:12",
															"nodeType": "YulAssignment",
															"src": "17175:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17188:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17188:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "17199:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17199:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17195:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17195:3:12"
																		},
																		"nativeSrc": "17195:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17195:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17184:3:12"
																},
																"nativeSrc": "17184:21:12",
																"nodeType": "YulFunctionCall",
																"src": "17184:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17175:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17175:5:12"
																}
															]
														},
														{
															"nativeSrc": "17214:40:12",
															"nodeType": "YulAssignment",
															"src": "17214:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17227:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17227:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17238:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "17238:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17248:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17248:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17234:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17234:3:12"
																		},
																		"nativeSrc": "17234:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17234:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17224:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17224:2:12"
																},
																"nativeSrc": "17224:30:12",
																"nodeType": "YulFunctionCall",
																"src": "17224:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17214:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17214:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16867:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16904:5:12",
														"nodeType": "YulTypedName",
														"src": "16904:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16911:10:12",
														"nodeType": "YulTypedName",
														"src": "16911:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16923:8:12",
														"nodeType": "YulTypedName",
														"src": "16923:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16936:6:12",
														"nodeType": "YulTypedName",
														"src": "16936:6:12",
														"type": ""
													}
												],
												"src": "16867:393:12"
											},
											{
												"body": {
													"nativeSrc": "17326:82:12",
													"nodeType": "YulBlock",
													"src": "17326:82:12",
													"statements": [
														{
															"nativeSrc": "17336:66:12",
															"nodeType": "YulAssignment",
															"src": "17336:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17394:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "17394:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17376:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "17376:17:12"
																				},
																				"nativeSrc": "17376:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17376:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17367:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "17367:8:12"
																		},
																		"nativeSrc": "17367:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17367:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17349:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17349:17:12"
																},
																"nativeSrc": "17349:53:12",
																"nodeType": "YulFunctionCall",
																"src": "17349:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17336:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "17336:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17266:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17306:5:12",
														"nodeType": "YulTypedName",
														"src": "17306:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17316:9:12",
														"nodeType": "YulTypedName",
														"src": "17316:9:12",
														"type": ""
													}
												],
												"src": "17266:142:12"
											},
											{
												"body": {
													"nativeSrc": "17461:28:12",
													"nodeType": "YulBlock",
													"src": "17461:28:12",
													"statements": [
														{
															"nativeSrc": "17471:12:12",
															"nodeType": "YulAssignment",
															"src": "17471:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "17478:5:12",
																"nodeType": "YulIdentifier",
																"src": "17478:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17471:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17471:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17414:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17447:5:12",
														"nodeType": "YulTypedName",
														"src": "17447:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17457:3:12",
														"nodeType": "YulTypedName",
														"src": "17457:3:12",
														"type": ""
													}
												],
												"src": "17414:75:12"
											},
											{
												"body": {
													"nativeSrc": "17571:193:12",
													"nodeType": "YulBlock",
													"src": "17571:193:12",
													"statements": [
														{
															"nativeSrc": "17581:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17581:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17636:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "17636:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17605:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "17605:30:12"
																},
																"nativeSrc": "17605:39:12",
																"nodeType": "YulFunctionCall",
																"src": "17605:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17585:16:12",
																	"nodeType": "YulTypedName",
																	"src": "17585:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17660:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17660:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17700:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "17700:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17694:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17694:5:12"
																				},
																				"nativeSrc": "17694:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17694:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17707:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17707:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17739:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "17739:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17715:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "17715:23:12"
																				},
																				"nativeSrc": "17715:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17715:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17666:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "17666:27:12"
																		},
																		"nativeSrc": "17666:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17666:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17653:6:12"
																},
																"nativeSrc": "17653:105:12",
																"nodeType": "YulFunctionCall",
																"src": "17653:105:12"
															},
															"nativeSrc": "17653:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "17653:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17495:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17548:4:12",
														"nodeType": "YulTypedName",
														"src": "17548:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17554:6:12",
														"nodeType": "YulTypedName",
														"src": "17554:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17562:7:12",
														"nodeType": "YulTypedName",
														"src": "17562:7:12",
														"type": ""
													}
												],
												"src": "17495:269:12"
											},
											{
												"body": {
													"nativeSrc": "17819:24:12",
													"nodeType": "YulBlock",
													"src": "17819:24:12",
													"statements": [
														{
															"nativeSrc": "17829:8:12",
															"nodeType": "YulAssignment",
															"src": "17829:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "17836:1:12",
																"nodeType": "YulLiteral",
																"src": "17836:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17829:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17829:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17770:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17815:3:12",
														"nodeType": "YulTypedName",
														"src": "17815:3:12",
														"type": ""
													}
												],
												"src": "17770:73:12"
											},
											{
												"body": {
													"nativeSrc": "17902:136:12",
													"nodeType": "YulBlock",
													"src": "17902:136:12",
													"statements": [
														{
															"nativeSrc": "17912:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17912:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17926:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "17926:30:12"
																},
																"nativeSrc": "17926:32:12",
																"nodeType": "YulFunctionCall",
																"src": "17926:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17916:6:12",
																	"nodeType": "YulTypedName",
																	"src": "17916:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18011:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18011:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18017:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18017:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "18025:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18025:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17967:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17967:43:12"
																},
																"nativeSrc": "17967:65:12",
																"nodeType": "YulFunctionCall",
																"src": "17967:65:12"
															},
															"nativeSrc": "17967:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "17967:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17849:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17888:4:12",
														"nodeType": "YulTypedName",
														"src": "17888:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17894:6:12",
														"nodeType": "YulTypedName",
														"src": "17894:6:12",
														"type": ""
													}
												],
												"src": "17849:189:12"
											},
											{
												"body": {
													"nativeSrc": "18094:136:12",
													"nodeType": "YulBlock",
													"src": "18094:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "18161:63:12",
																"nodeType": "YulBlock",
																"src": "18161:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18205:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "18205:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18212:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18212:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18175:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "18175:29:12"
																			},
																			"nativeSrc": "18175:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18175:39:12"
																		},
																		"nativeSrc": "18175:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18175:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18114:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18114:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18121:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18121:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18111:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18111:2:12"
																},
																"nativeSrc": "18111:14:12",
																"nodeType": "YulFunctionCall",
																"src": "18111:14:12"
															},
															"nativeSrc": "18104:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18126:26:12",
																"nodeType": "YulBlock",
																"src": "18126:26:12",
																"statements": [
																	{
																		"nativeSrc": "18128:22:12",
																		"nodeType": "YulAssignment",
																		"src": "18128:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18141:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "18141:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18148:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18148:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18137:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18137:3:12"
																			},
																			"nativeSrc": "18137:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18137:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18128:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "18128:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18108:2:12",
																"nodeType": "YulBlock",
																"src": "18108:2:12",
																"statements": []
															},
															"src": "18104:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "18044:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18082:5:12",
														"nodeType": "YulTypedName",
														"src": "18082:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18089:3:12",
														"nodeType": "YulTypedName",
														"src": "18089:3:12",
														"type": ""
													}
												],
												"src": "18044:186:12"
											},
											{
												"body": {
													"nativeSrc": "18315:464:12",
													"nodeType": "YulBlock",
													"src": "18315:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "18341:431:12",
																"nodeType": "YulBlock",
																"src": "18341:431:12",
																"statements": [
																	{
																		"nativeSrc": "18355:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18355:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18403:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "18403:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18371:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "18371:31:12"
																			},
																			"nativeSrc": "18371:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18371:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18359:8:12",
																				"nodeType": "YulTypedName",
																				"src": "18359:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18422:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18422:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18445:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "18445:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18473:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "18473:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18455:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "18455:17:12"
																					},
																					"nativeSrc": "18455:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18455:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18441:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18441:3:12"
																			},
																			"nativeSrc": "18441:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18441:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18426:11:12",
																				"nodeType": "YulTypedName",
																				"src": "18426:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18642:27:12",
																			"nodeType": "YulBlock",
																			"src": "18642:27:12",
																			"statements": [
																				{
																					"nativeSrc": "18644:23:12",
																					"nodeType": "YulAssignment",
																					"src": "18644:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18659:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "18659:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18644:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "18644:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18626:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "18626:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18638:2:12",
																					"nodeType": "YulLiteral",
																					"src": "18638:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18623:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "18623:2:12"
																			},
																			"nativeSrc": "18623:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18623:18:12"
																		},
																		"nativeSrc": "18620:49:12",
																		"nodeType": "YulIf",
																		"src": "18620:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18711:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "18711:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18728:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "18728:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18756:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "18756:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18738:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "18738:17:12"
																							},
																							"nativeSrc": "18738:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "18738:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18724:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "18724:3:12"
																					},
																					"nativeSrc": "18724:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18724:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18682:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "18682:28:12"
																			},
																			"nativeSrc": "18682:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18682:80:12"
																		},
																		"nativeSrc": "18682:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18682:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18332:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18332:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18337:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18337:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18329:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18329:2:12"
																},
																"nativeSrc": "18329:11:12",
																"nodeType": "YulFunctionCall",
																"src": "18329:11:12"
															},
															"nativeSrc": "18326:446:12",
															"nodeType": "YulIf",
															"src": "18326:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18236:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18291:5:12",
														"nodeType": "YulTypedName",
														"src": "18291:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18298:3:12",
														"nodeType": "YulTypedName",
														"src": "18298:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18303:10:12",
														"nodeType": "YulTypedName",
														"src": "18303:10:12",
														"type": ""
													}
												],
												"src": "18236:543:12"
											},
											{
												"body": {
													"nativeSrc": "18848:54:12",
													"nodeType": "YulBlock",
													"src": "18848:54:12",
													"statements": [
														{
															"nativeSrc": "18858:37:12",
															"nodeType": "YulAssignment",
															"src": "18858:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18883:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18883:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18889:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18889:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18879:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18879:3:12"
																},
																"nativeSrc": "18879:16:12",
																"nodeType": "YulFunctionCall",
																"src": "18879:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18858:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "18858:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18785:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18823:4:12",
														"nodeType": "YulTypedName",
														"src": "18823:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18829:5:12",
														"nodeType": "YulTypedName",
														"src": "18829:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18839:8:12",
														"nodeType": "YulTypedName",
														"src": "18839:8:12",
														"type": ""
													}
												],
												"src": "18785:117:12"
											},
											{
												"body": {
													"nativeSrc": "18959:118:12",
													"nodeType": "YulBlock",
													"src": "18959:118:12",
													"statements": [
														{
															"nativeSrc": "18969:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18969:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19018:1:12",
																						"nodeType": "YulLiteral",
																						"src": "19018:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "19021:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "19021:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "19014:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "19014:3:12"
																				},
																				"nativeSrc": "19014:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19014:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19033:1:12",
																						"nodeType": "YulLiteral",
																						"src": "19033:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19029:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "19029:3:12"
																				},
																				"nativeSrc": "19029:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19029:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18985:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "18985:28:12"
																		},
																		"nativeSrc": "18985:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18985:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18981:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18981:3:12"
																},
																"nativeSrc": "18981:56:12",
																"nodeType": "YulFunctionCall",
																"src": "18981:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18973:4:12",
																	"nodeType": "YulTypedName",
																	"src": "18973:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19046:25:12",
															"nodeType": "YulAssignment",
															"src": "19046:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19060:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19060:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "19066:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19066:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19056:3:12"
																},
																"nativeSrc": "19056:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19056:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19046:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19046:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18908:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18936:4:12",
														"nodeType": "YulTypedName",
														"src": "18936:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18942:5:12",
														"nodeType": "YulTypedName",
														"src": "18942:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18952:6:12",
														"nodeType": "YulTypedName",
														"src": "18952:6:12",
														"type": ""
													}
												],
												"src": "18908:169:12"
											},
											{
												"body": {
													"nativeSrc": "19163:214:12",
													"nodeType": "YulBlock",
													"src": "19163:214:12",
													"statements": [
														{
															"nativeSrc": "19296:37:12",
															"nodeType": "YulAssignment",
															"src": "19296:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19323:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19323:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19329:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19329:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19304:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "19304:18:12"
																},
																"nativeSrc": "19304:29:12",
																"nodeType": "YulFunctionCall",
																"src": "19304:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19296:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19296:4:12"
																}
															]
														},
														{
															"nativeSrc": "19342:29:12",
															"nodeType": "YulAssignment",
															"src": "19342:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19353:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19353:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19363:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19363:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19366:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "19366:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19359:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19359:3:12"
																		},
																		"nativeSrc": "19359:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19359:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19350:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19350:2:12"
																},
																"nativeSrc": "19350:21:12",
																"nodeType": "YulFunctionCall",
																"src": "19350:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19342:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19342:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19082:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19144:4:12",
														"nodeType": "YulTypedName",
														"src": "19144:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19150:3:12",
														"nodeType": "YulTypedName",
														"src": "19150:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19158:4:12",
														"nodeType": "YulTypedName",
														"src": "19158:4:12",
														"type": ""
													}
												],
												"src": "19082:295:12"
											},
											{
												"body": {
													"nativeSrc": "19474:1303:12",
													"nodeType": "YulBlock",
													"src": "19474:1303:12",
													"statements": [
														{
															"nativeSrc": "19485:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19485:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19532:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19532:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19499:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "19499:32:12"
																},
																"nativeSrc": "19499:37:12",
																"nodeType": "YulFunctionCall",
																"src": "19499:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19489:6:12",
																	"nodeType": "YulTypedName",
																	"src": "19489:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19621:22:12",
																"nodeType": "YulBlock",
																"src": "19621:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19623:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19623:16:12"
																			},
																			"nativeSrc": "19623:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19623:18:12"
																		},
																		"nativeSrc": "19623:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19623:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19593:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19593:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19601:18:12",
																		"nodeType": "YulLiteral",
																		"src": "19601:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19590:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19590:2:12"
																},
																"nativeSrc": "19590:30:12",
																"nodeType": "YulFunctionCall",
																"src": "19590:30:12"
															},
															"nativeSrc": "19587:56:12",
															"nodeType": "YulIf",
															"src": "19587:56:12"
														},
														{
															"nativeSrc": "19653:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19653:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19699:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19699:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19693:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "19693:5:12"
																		},
																		"nativeSrc": "19693:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19693:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19667:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "19667:25:12"
																},
																"nativeSrc": "19667:38:12",
																"nodeType": "YulFunctionCall",
																"src": "19667:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19657:6:12",
																	"nodeType": "YulTypedName",
																	"src": "19657:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19798:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19798:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19804:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19804:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19812:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19812:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19752:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "19752:45:12"
																},
																"nativeSrc": "19752:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19752:67:12"
															},
															"nativeSrc": "19752:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "19752:67:12"
														},
														{
															"nativeSrc": "19829:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19829:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "19846:1:12",
																"nodeType": "YulLiteral",
																"src": "19846:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19833:9:12",
																	"nodeType": "YulTypedName",
																	"src": "19833:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19857:17:12",
															"nodeType": "YulAssignment",
															"src": "19857:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "19870:4:12",
																"nodeType": "YulLiteral",
																"src": "19870:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19857:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "19857:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19921:611:12",
																		"nodeType": "YulBlock",
																		"src": "19921:611:12",
																		"statements": [
																			{
																				"nativeSrc": "19935:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19935:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19954:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "19954:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19966:4:12",
																									"nodeType": "YulLiteral",
																									"src": "19966:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19962:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "19962:3:12"
																							},
																							"nativeSrc": "19962:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "19962:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19950:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "19950:3:12"
																					},
																					"nativeSrc": "19950:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19950:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19939:7:12",
																						"nodeType": "YulTypedName",
																						"src": "19939:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19986:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19986:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20032:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "20032:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20000:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "20000:31:12"
																					},
																					"nativeSrc": "20000:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20000:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19990:6:12",
																						"nodeType": "YulTypedName",
																						"src": "19990:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20050:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20050:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20059:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20059:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20054:1:12",
																						"nodeType": "YulTypedName",
																						"src": "20054:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20118:163:12",
																					"nodeType": "YulBlock",
																					"src": "20118:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20143:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "20143:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20161:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "20161:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20166:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "20166:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20157:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "20157:3:12"
																												},
																												"nativeSrc": "20157:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "20157:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20151:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "20151:5:12"
																										},
																										"nativeSrc": "20151:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "20151:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20136:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "20136:6:12"
																								},
																								"nativeSrc": "20136:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20136:42:12"
																							},
																							"nativeSrc": "20136:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "20136:42:12"
																						},
																						{
																							"nativeSrc": "20195:24:12",
																							"nodeType": "YulAssignment",
																							"src": "20195:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20209:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "20209:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20217:1:12",
																										"nodeType": "YulLiteral",
																										"src": "20217:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20205:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "20205:3:12"
																								},
																								"nativeSrc": "20205:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20205:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20195:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "20195:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20236:31:12",
																							"nodeType": "YulAssignment",
																							"src": "20236:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20253:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "20253:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20264:2:12",
																										"nodeType": "YulLiteral",
																										"src": "20264:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20249:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "20249:3:12"
																								},
																								"nativeSrc": "20249:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20249:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20236:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "20236:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20084:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "20084:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20087:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "20087:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20081:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "20081:2:12"
																					},
																					"nativeSrc": "20081:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20081:14:12"
																				},
																				"nativeSrc": "20073:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20096:21:12",
																					"nodeType": "YulBlock",
																					"src": "20096:21:12",
																					"statements": [
																						{
																							"nativeSrc": "20098:17:12",
																							"nodeType": "YulAssignment",
																							"src": "20098:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20107:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "20107:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20110:4:12",
																										"nodeType": "YulLiteral",
																										"src": "20110:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20103:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "20103:3:12"
																								},
																								"nativeSrc": "20103:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20103:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20098:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "20098:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20077:3:12",
																					"nodeType": "YulBlock",
																					"src": "20077:3:12",
																					"statements": []
																				},
																				"src": "20073:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "20317:156:12",
																					"nodeType": "YulBlock",
																					"src": "20317:156:12",
																					"statements": [
																						{
																							"nativeSrc": "20335:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20335:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20362:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "20362:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20367:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "20367:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20358:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "20358:3:12"
																										},
																										"nativeSrc": "20358:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "20358:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20352:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "20352:5:12"
																								},
																								"nativeSrc": "20352:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20352:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20339:9:12",
																									"nodeType": "YulTypedName",
																									"src": "20339:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20402:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "20402:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20429:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "20429:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20444:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "20444:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20452:4:12",
																														"nodeType": "YulLiteral",
																														"src": "20452:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20440:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "20440:3:12"
																												},
																												"nativeSrc": "20440:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "20440:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20410:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "20410:18:12"
																										},
																										"nativeSrc": "20410:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "20410:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20395:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "20395:6:12"
																								},
																								"nativeSrc": "20395:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20395:64:12"
																							},
																							"nativeSrc": "20395:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "20395:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20300:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "20300:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20309:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "20309:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20297:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "20297:2:12"
																					},
																					"nativeSrc": "20297:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20297:19:12"
																				},
																				"nativeSrc": "20294:179:12",
																				"nodeType": "YulIf",
																				"src": "20294:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20493:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "20493:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20507:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "20507:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20515:1:12",
																											"nodeType": "YulLiteral",
																											"src": "20515:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20503:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "20503:3:12"
																									},
																									"nativeSrc": "20503:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "20503:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20519:1:12",
																									"nodeType": "YulLiteral",
																									"src": "20519:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20499:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "20499:3:12"
																							},
																							"nativeSrc": "20499:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "20499:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20486:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "20486:6:12"
																					},
																					"nativeSrc": "20486:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20486:36:12"
																				},
																				"nativeSrc": "20486:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "20486:36:12"
																			}
																		]
																	},
																	"nativeSrc": "19914:618:12",
																	"nodeType": "YulCase",
																	"src": "19914:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19919:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19919:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20549:222:12",
																		"nodeType": "YulBlock",
																		"src": "20549:222:12",
																		"statements": [
																			{
																				"nativeSrc": "20563:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20563:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20576:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20576:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20567:5:12",
																						"nodeType": "YulTypedName",
																						"src": "20567:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20600:67:12",
																					"nodeType": "YulBlock",
																					"src": "20600:67:12",
																					"statements": [
																						{
																							"nativeSrc": "20618:35:12",
																							"nodeType": "YulAssignment",
																							"src": "20618:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20637:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "20637:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20642:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "20642:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20633:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "20633:3:12"
																										},
																										"nativeSrc": "20633:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "20633:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20627:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "20627:5:12"
																								},
																								"nativeSrc": "20627:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "20627:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20618:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "20618:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20593:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "20593:6:12"
																				},
																				"nativeSrc": "20590:77:12",
																				"nodeType": "YulIf",
																				"src": "20590:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20687:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "20687:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20746:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "20746:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20753:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "20753:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20693:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "20693:52:12"
																							},
																							"nativeSrc": "20693:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "20693:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20680:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "20680:6:12"
																					},
																					"nativeSrc": "20680:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20680:81:12"
																				},
																				"nativeSrc": "20680:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "20680:81:12"
																			}
																		]
																	},
																	"nativeSrc": "20541:230:12",
																	"nodeType": "YulCase",
																	"src": "20541:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19894:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19894:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19902:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19902:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19891:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19891:2:12"
																},
																"nativeSrc": "19891:14:12",
																"nodeType": "YulFunctionCall",
																"src": "19891:14:12"
															},
															"nativeSrc": "19884:887:12",
															"nodeType": "YulSwitch",
															"src": "19884:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19382:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19463:4:12",
														"nodeType": "YulTypedName",
														"src": "19463:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19469:3:12",
														"nodeType": "YulTypedName",
														"src": "19469:3:12",
														"type": ""
													}
												],
												"src": "19382:1395:12"
											},
											{
												"body": {
													"nativeSrc": "20957:359:12",
													"nodeType": "YulBlock",
													"src": "20957:359:12",
													"statements": [
														{
															"nativeSrc": "20967:26:12",
															"nodeType": "YulAssignment",
															"src": "20967:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20979:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20979:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20990:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20990:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20975:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20975:3:12"
																},
																"nativeSrc": "20975:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20975:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20967:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20967:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21014:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21014:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21025:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21025:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21010:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21010:3:12"
																		},
																		"nativeSrc": "21010:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21010:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21033:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21033:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21039:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21039:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21029:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21029:3:12"
																		},
																		"nativeSrc": "21029:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21029:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21003:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21003:6:12"
																},
																"nativeSrc": "21003:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21003:47:12"
															},
															"nativeSrc": "21003:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21003:47:12"
														},
														{
															"nativeSrc": "21059:86:12",
															"nodeType": "YulAssignment",
															"src": "21059:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21131:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21131:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21140:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21140:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21067:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "21067:63:12"
																},
																"nativeSrc": "21067:78:12",
																"nodeType": "YulFunctionCall",
																"src": "21067:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21059:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21059:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21199:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21199:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21212:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21212:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21223:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21223:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21208:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21208:3:12"
																		},
																		"nativeSrc": "21208:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21208:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21155:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21155:43:12"
																},
																"nativeSrc": "21155:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21155:72:12"
															},
															"nativeSrc": "21155:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21155:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21281:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21281:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21294:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21294:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21305:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21305:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21290:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21290:3:12"
																		},
																		"nativeSrc": "21290:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21290:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21237:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21237:43:12"
																},
																"nativeSrc": "21237:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21237:72:12"
															},
															"nativeSrc": "21237:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21237:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20783:533:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20913:9:12",
														"nodeType": "YulTypedName",
														"src": "20913:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20925:6:12",
														"nodeType": "YulTypedName",
														"src": "20925:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20933:6:12",
														"nodeType": "YulTypedName",
														"src": "20933:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20941:6:12",
														"nodeType": "YulTypedName",
														"src": "20941:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20952:4:12",
														"nodeType": "YulTypedName",
														"src": "20952:4:12",
														"type": ""
													}
												],
												"src": "20783:533:12"
											},
											{
												"body": {
													"nativeSrc": "21428:115:12",
													"nodeType": "YulBlock",
													"src": "21428:115:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21450:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21450:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21458:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21458:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21446:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21446:3:12"
																		},
																		"nativeSrc": "21446:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21446:14:12"
																	},
																	{
																		"hexValue": "4d757374207075726368617365206174206c65617374206f6e65207265717565",
																		"kind": "string",
																		"nativeSrc": "21462:34:12",
																		"nodeType": "YulLiteral",
																		"src": "21462:34:12",
																		"type": "",
																		"value": "Must purchase at least one reque"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21439:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21439:6:12"
																},
																"nativeSrc": "21439:58:12",
																"nodeType": "YulFunctionCall",
																"src": "21439:58:12"
															},
															"nativeSrc": "21439:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "21439:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21518:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21518:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21526:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21526:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21514:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21514:3:12"
																		},
																		"nativeSrc": "21514:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21514:15:12"
																	},
																	{
																		"hexValue": "7374",
																		"kind": "string",
																		"nativeSrc": "21531:4:12",
																		"nodeType": "YulLiteral",
																		"src": "21531:4:12",
																		"type": "",
																		"value": "st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21507:6:12"
																},
																"nativeSrc": "21507:29:12",
																"nodeType": "YulFunctionCall",
																"src": "21507:29:12"
															},
															"nativeSrc": "21507:29:12",
															"nodeType": "YulExpressionStatement",
															"src": "21507:29:12"
														}
													]
												},
												"name": "store_literal_in_memory_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d",
												"nativeSrc": "21322:221:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21420:6:12",
														"nodeType": "YulTypedName",
														"src": "21420:6:12",
														"type": ""
													}
												],
												"src": "21322:221:12"
											},
											{
												"body": {
													"nativeSrc": "21695:220:12",
													"nodeType": "YulBlock",
													"src": "21695:220:12",
													"statements": [
														{
															"nativeSrc": "21705:74:12",
															"nodeType": "YulAssignment",
															"src": "21705:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21771:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21771:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21776:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21776:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21712:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21712:58:12"
																},
																"nativeSrc": "21712:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21712:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21705:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21705:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21877:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d",
																	"nativeSrc": "21788:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21788:88:12"
																},
																"nativeSrc": "21788:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21788:93:12"
															},
															"nativeSrc": "21788:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21788:93:12"
														},
														{
															"nativeSrc": "21890:19:12",
															"nodeType": "YulAssignment",
															"src": "21890:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21901:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21901:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21906:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21906:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21897:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21897:3:12"
																},
																"nativeSrc": "21897:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21897:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21890:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21890:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21549:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21683:3:12",
														"nodeType": "YulTypedName",
														"src": "21683:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21691:3:12",
														"nodeType": "YulTypedName",
														"src": "21691:3:12",
														"type": ""
													}
												],
												"src": "21549:366:12"
											},
											{
												"body": {
													"nativeSrc": "22092:248:12",
													"nodeType": "YulBlock",
													"src": "22092:248:12",
													"statements": [
														{
															"nativeSrc": "22102:26:12",
															"nodeType": "YulAssignment",
															"src": "22102:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22114:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22114:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22110:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22110:3:12"
																},
																"nativeSrc": "22110:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22110:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22102:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22102:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22149:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22149:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22160:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22160:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22145:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22145:3:12"
																		},
																		"nativeSrc": "22145:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22145:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22168:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22168:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22174:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22174:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22164:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22164:3:12"
																		},
																		"nativeSrc": "22164:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22164:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22138:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22138:6:12"
																},
																"nativeSrc": "22138:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22138:47:12"
															},
															"nativeSrc": "22138:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22138:47:12"
														},
														{
															"nativeSrc": "22194:139:12",
															"nodeType": "YulAssignment",
															"src": "22194:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22328:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22328:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22202:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22202:124:12"
																},
																"nativeSrc": "22202:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22202:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22194:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22194:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21921:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22072:9:12",
														"nodeType": "YulTypedName",
														"src": "22072:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22087:4:12",
														"nodeType": "YulTypedName",
														"src": "22087:4:12",
														"type": ""
													}
												],
												"src": "21921:419:12"
											},
											{
												"body": {
													"nativeSrc": "22452:61:12",
													"nodeType": "YulBlock",
													"src": "22452:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22474:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22474:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22482:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22482:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22470:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22470:3:12"
																		},
																		"nativeSrc": "22470:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22470:14:12"
																	},
																	{
																		"hexValue": "415049206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "22486:19:12",
																		"nodeType": "YulLiteral",
																		"src": "22486:19:12",
																		"type": "",
																		"value": "API is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22463:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22463:6:12"
																},
																"nativeSrc": "22463:43:12",
																"nodeType": "YulFunctionCall",
																"src": "22463:43:12"
															},
															"nativeSrc": "22463:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "22463:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
												"nativeSrc": "22346:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22444:6:12",
														"nodeType": "YulTypedName",
														"src": "22444:6:12",
														"type": ""
													}
												],
												"src": "22346:167:12"
											},
											{
												"body": {
													"nativeSrc": "22665:220:12",
													"nodeType": "YulBlock",
													"src": "22665:220:12",
													"statements": [
														{
															"nativeSrc": "22675:74:12",
															"nodeType": "YulAssignment",
															"src": "22675:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22741:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22741:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22746:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22746:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22682:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22682:58:12"
																},
																"nativeSrc": "22682:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22682:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22675:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22675:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22847:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22847:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																	"nativeSrc": "22758:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22758:88:12"
																},
																"nativeSrc": "22758:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22758:93:12"
															},
															"nativeSrc": "22758:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22758:93:12"
														},
														{
															"nativeSrc": "22860:19:12",
															"nodeType": "YulAssignment",
															"src": "22860:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22871:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22871:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22876:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22876:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22867:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22867:3:12"
																},
																"nativeSrc": "22867:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22867:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22860:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22860:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22519:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22653:3:12",
														"nodeType": "YulTypedName",
														"src": "22653:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22661:3:12",
														"nodeType": "YulTypedName",
														"src": "22661:3:12",
														"type": ""
													}
												],
												"src": "22519:366:12"
											},
											{
												"body": {
													"nativeSrc": "23062:248:12",
													"nodeType": "YulBlock",
													"src": "23062:248:12",
													"statements": [
														{
															"nativeSrc": "23072:26:12",
															"nodeType": "YulAssignment",
															"src": "23072:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23084:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23084:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23095:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23095:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23080:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23080:3:12"
																},
																"nativeSrc": "23080:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23080:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23072:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23072:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23119:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23119:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23130:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23130:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23115:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23115:3:12"
																		},
																		"nativeSrc": "23115:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23115:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23138:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23138:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23144:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23144:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23134:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23134:3:12"
																		},
																		"nativeSrc": "23134:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23134:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23108:6:12"
																},
																"nativeSrc": "23108:47:12",
																"nodeType": "YulFunctionCall",
																"src": "23108:47:12"
															},
															"nativeSrc": "23108:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "23108:47:12"
														},
														{
															"nativeSrc": "23164:139:12",
															"nodeType": "YulAssignment",
															"src": "23164:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23298:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23298:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23172:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "23172:124:12"
																},
																"nativeSrc": "23172:131:12",
																"nodeType": "YulFunctionCall",
																"src": "23172:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23164:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23164:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22891:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23042:9:12",
														"nodeType": "YulTypedName",
														"src": "23042:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23057:4:12",
														"nodeType": "YulTypedName",
														"src": "23057:4:12",
														"type": ""
													}
												],
												"src": "22891:419:12"
											},
											{
												"body": {
													"nativeSrc": "23364:362:12",
													"nodeType": "YulBlock",
													"src": "23364:362:12",
													"statements": [
														{
															"nativeSrc": "23374:25:12",
															"nodeType": "YulAssignment",
															"src": "23374:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23397:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23397:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23379:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23379:17:12"
																},
																"nativeSrc": "23379:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23379:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23374:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23374:1:12"
																}
															]
														},
														{
															"nativeSrc": "23408:25:12",
															"nodeType": "YulAssignment",
															"src": "23408:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23431:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23431:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23413:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23413:17:12"
																},
																"nativeSrc": "23413:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23413:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23408:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23408:1:12"
																}
															]
														},
														{
															"nativeSrc": "23442:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23442:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23465:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23465:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23468:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23468:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23461:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23461:3:12"
																},
																"nativeSrc": "23461:9:12",
																"nodeType": "YulFunctionCall",
																"src": "23461:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "23446:11:12",
																	"nodeType": "YulTypedName",
																	"src": "23446:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23479:41:12",
															"nodeType": "YulAssignment",
															"src": "23479:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "23508:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "23508:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23490:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23490:17:12"
																},
																"nativeSrc": "23490:30:12",
																"nodeType": "YulFunctionCall",
																"src": "23490:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "23479:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "23479:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23697:22:12",
																"nodeType": "YulBlock",
																"src": "23697:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23699:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "23699:16:12"
																			},
																			"nativeSrc": "23699:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23699:18:12"
																		},
																		"nativeSrc": "23699:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23699:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "23630:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "23630:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "23623:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "23623:6:12"
																				},
																				"nativeSrc": "23623:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23623:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "23653:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "23653:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "23660:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "23660:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "23669:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "23669:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "23656:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "23656:3:12"
																						},
																						"nativeSrc": "23656:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "23656:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "23650:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "23650:2:12"
																				},
																				"nativeSrc": "23650:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23650:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "23603:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "23603:2:12"
																		},
																		"nativeSrc": "23603:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23603:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23583:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23583:6:12"
																},
																"nativeSrc": "23583:113:12",
																"nodeType": "YulFunctionCall",
																"src": "23583:113:12"
															},
															"nativeSrc": "23580:139:12",
															"nodeType": "YulIf",
															"src": "23580:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "23316:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23347:1:12",
														"nodeType": "YulTypedName",
														"src": "23347:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23350:1:12",
														"nodeType": "YulTypedName",
														"src": "23350:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "23356:7:12",
														"nodeType": "YulTypedName",
														"src": "23356:7:12",
														"type": ""
													}
												],
												"src": "23316:410:12"
											},
											{
												"body": {
													"nativeSrc": "23776:147:12",
													"nodeType": "YulBlock",
													"src": "23776:147:12",
													"statements": [
														{
															"nativeSrc": "23786:25:12",
															"nodeType": "YulAssignment",
															"src": "23786:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23809:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23809:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23791:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23791:17:12"
																},
																"nativeSrc": "23791:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23791:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23786:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23786:1:12"
																}
															]
														},
														{
															"nativeSrc": "23820:25:12",
															"nodeType": "YulAssignment",
															"src": "23820:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23843:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23843:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23825:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "23825:17:12"
																},
																"nativeSrc": "23825:20:12",
																"nodeType": "YulFunctionCall",
																"src": "23825:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23820:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "23820:1:12"
																}
															]
														},
														{
															"nativeSrc": "23854:16:12",
															"nodeType": "YulAssignment",
															"src": "23854:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23865:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23865:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23868:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23868:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23861:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23861:3:12"
																},
																"nativeSrc": "23861:9:12",
																"nodeType": "YulFunctionCall",
																"src": "23861:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23854:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23854:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23894:22:12",
																"nodeType": "YulBlock",
																"src": "23894:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23896:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "23896:16:12"
																			},
																			"nativeSrc": "23896:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23896:18:12"
																		},
																		"nativeSrc": "23896:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23896:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23886:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "23886:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23889:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23889:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23883:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23883:2:12"
																},
																"nativeSrc": "23883:10:12",
																"nodeType": "YulFunctionCall",
																"src": "23883:10:12"
															},
															"nativeSrc": "23880:36:12",
															"nodeType": "YulIf",
															"src": "23880:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23732:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23763:1:12",
														"nodeType": "YulTypedName",
														"src": "23763:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23766:1:12",
														"nodeType": "YulTypedName",
														"src": "23766:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23772:3:12",
														"nodeType": "YulTypedName",
														"src": "23772:3:12",
														"type": ""
													}
												],
												"src": "23732:191:12"
											},
											{
												"body": {
													"nativeSrc": "23992:80:12",
													"nodeType": "YulBlock",
													"src": "23992:80:12",
													"statements": [
														{
															"nativeSrc": "24002:22:12",
															"nodeType": "YulAssignment",
															"src": "24002:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24017:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24017:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24011:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "24011:5:12"
																},
																"nativeSrc": "24011:13:12",
																"nodeType": "YulFunctionCall",
																"src": "24011:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24002:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "24002:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24060:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24060:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "24033:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "24033:26:12"
																},
																"nativeSrc": "24033:33:12",
																"nodeType": "YulFunctionCall",
																"src": "24033:33:12"
															},
															"nativeSrc": "24033:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "24033:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "23929:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23970:6:12",
														"nodeType": "YulTypedName",
														"src": "23970:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23978:3:12",
														"nodeType": "YulTypedName",
														"src": "23978:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23986:5:12",
														"nodeType": "YulTypedName",
														"src": "23986:5:12",
														"type": ""
													}
												],
												"src": "23929:143:12"
											},
											{
												"body": {
													"nativeSrc": "24155:274:12",
													"nodeType": "YulBlock",
													"src": "24155:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "24201:83:12",
																"nodeType": "YulBlock",
																"src": "24201:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24203:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "24203:77:12"
																			},
																			"nativeSrc": "24203:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "24203:79:12"
																		},
																		"nativeSrc": "24203:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "24203:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24176:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "24176:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24185:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24185:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24172:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24172:3:12"
																		},
																		"nativeSrc": "24172:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24172:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24197:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24197:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24168:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24168:3:12"
																},
																"nativeSrc": "24168:32:12",
																"nodeType": "YulFunctionCall",
																"src": "24168:32:12"
															},
															"nativeSrc": "24165:119:12",
															"nodeType": "YulIf",
															"src": "24165:119:12"
														},
														{
															"nativeSrc": "24294:128:12",
															"nodeType": "YulBlock",
															"src": "24294:128:12",
															"statements": [
																{
																	"nativeSrc": "24309:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24309:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24323:1:12",
																		"nodeType": "YulLiteral",
																		"src": "24323:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24313:6:12",
																			"nodeType": "YulTypedName",
																			"src": "24313:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24338:74:12",
																	"nodeType": "YulAssignment",
																	"src": "24338:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24384:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "24384:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24395:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "24395:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24380:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "24380:3:12"
																				},
																				"nativeSrc": "24380:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "24380:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24404:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "24404:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "24348:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "24348:31:12"
																		},
																		"nativeSrc": "24348:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24348:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24338:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "24338:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "24078:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24125:9:12",
														"nodeType": "YulTypedName",
														"src": "24125:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24136:7:12",
														"nodeType": "YulTypedName",
														"src": "24136:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24148:6:12",
														"nodeType": "YulTypedName",
														"src": "24148:6:12",
														"type": ""
													}
												],
												"src": "24078:351:12"
											},
											{
												"body": {
													"nativeSrc": "24541:65:12",
													"nodeType": "YulBlock",
													"src": "24541:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24563:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24563:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24571:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24571:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24559:3:12"
																		},
																		"nativeSrc": "24559:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24559:14:12"
																	},
																	{
																		"hexValue": "4e6f2072656d61696e696e67207265717565737473",
																		"kind": "string",
																		"nativeSrc": "24575:23:12",
																		"nodeType": "YulLiteral",
																		"src": "24575:23:12",
																		"type": "",
																		"value": "No remaining requests"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24552:6:12"
																},
																"nativeSrc": "24552:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24552:47:12"
															},
															"nativeSrc": "24552:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24552:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90",
												"nativeSrc": "24435:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24533:6:12",
														"nodeType": "YulTypedName",
														"src": "24533:6:12",
														"type": ""
													}
												],
												"src": "24435:171:12"
											},
											{
												"body": {
													"nativeSrc": "24758:220:12",
													"nodeType": "YulBlock",
													"src": "24758:220:12",
													"statements": [
														{
															"nativeSrc": "24768:74:12",
															"nodeType": "YulAssignment",
															"src": "24768:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24834:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24834:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24839:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24839:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24775:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24775:58:12"
																},
																"nativeSrc": "24775:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24775:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24768:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24768:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24940:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24940:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90",
																	"nativeSrc": "24851:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24851:88:12"
																},
																"nativeSrc": "24851:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24851:93:12"
															},
															"nativeSrc": "24851:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24851:93:12"
														},
														{
															"nativeSrc": "24953:19:12",
															"nodeType": "YulAssignment",
															"src": "24953:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24964:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24964:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24969:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24969:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24960:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24960:3:12"
																},
																"nativeSrc": "24960:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24960:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24953:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24612:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24746:3:12",
														"nodeType": "YulTypedName",
														"src": "24746:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24754:3:12",
														"nodeType": "YulTypedName",
														"src": "24754:3:12",
														"type": ""
													}
												],
												"src": "24612:366:12"
											},
											{
												"body": {
													"nativeSrc": "25155:248:12",
													"nodeType": "YulBlock",
													"src": "25155:248:12",
													"statements": [
														{
															"nativeSrc": "25165:26:12",
															"nodeType": "YulAssignment",
															"src": "25165:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25177:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "25177:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25188:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25188:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25173:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25173:3:12"
																},
																"nativeSrc": "25173:18:12",
																"nodeType": "YulFunctionCall",
																"src": "25173:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25165:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25165:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25212:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25212:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25223:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25223:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25208:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25208:3:12"
																		},
																		"nativeSrc": "25208:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25208:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25231:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25231:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25237:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25237:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25227:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25227:3:12"
																		},
																		"nativeSrc": "25227:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25227:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25201:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25201:6:12"
																},
																"nativeSrc": "25201:47:12",
																"nodeType": "YulFunctionCall",
																"src": "25201:47:12"
															},
															"nativeSrc": "25201:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "25201:47:12"
														},
														{
															"nativeSrc": "25257:139:12",
															"nodeType": "YulAssignment",
															"src": "25257:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25391:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25391:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25265:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "25265:124:12"
																},
																"nativeSrc": "25265:131:12",
																"nodeType": "YulFunctionCall",
																"src": "25265:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25257:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25257:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24984:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25135:9:12",
														"nodeType": "YulTypedName",
														"src": "25135:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25150:4:12",
														"nodeType": "YulTypedName",
														"src": "25150:4:12",
														"type": ""
													}
												],
												"src": "24984:419:12"
											},
											{
												"body": {
													"nativeSrc": "25454:149:12",
													"nodeType": "YulBlock",
													"src": "25454:149:12",
													"statements": [
														{
															"nativeSrc": "25464:25:12",
															"nodeType": "YulAssignment",
															"src": "25464:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25487:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25487:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25469:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25469:17:12"
																},
																"nativeSrc": "25469:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25469:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25464:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25464:1:12"
																}
															]
														},
														{
															"nativeSrc": "25498:25:12",
															"nodeType": "YulAssignment",
															"src": "25498:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25521:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25521:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25503:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25503:17:12"
																},
																"nativeSrc": "25503:20:12",
																"nodeType": "YulFunctionCall",
																"src": "25503:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25498:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "25498:1:12"
																}
															]
														},
														{
															"nativeSrc": "25532:17:12",
															"nodeType": "YulAssignment",
															"src": "25532:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25544:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25544:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25547:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25547:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "25540:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25540:3:12"
																},
																"nativeSrc": "25540:9:12",
																"nodeType": "YulFunctionCall",
																"src": "25540:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "25532:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25532:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25574:22:12",
																"nodeType": "YulBlock",
																"src": "25574:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25576:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "25576:16:12"
																			},
																			"nativeSrc": "25576:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25576:18:12"
																		},
																		"nativeSrc": "25576:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25576:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "25565:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25565:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "25571:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "25571:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "25562:2:12"
																},
																"nativeSrc": "25562:11:12",
																"nodeType": "YulFunctionCall",
																"src": "25562:11:12"
															},
															"nativeSrc": "25559:37:12",
															"nodeType": "YulIf",
															"src": "25559:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "25409:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25440:1:12",
														"nodeType": "YulTypedName",
														"src": "25440:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25443:1:12",
														"nodeType": "YulTypedName",
														"src": "25443:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "25449:4:12",
														"nodeType": "YulTypedName",
														"src": "25449:4:12",
														"type": ""
													}
												],
												"src": "25409:194:12"
											},
											{
												"body": {
													"nativeSrc": "25715:67:12",
													"nodeType": "YulBlock",
													"src": "25715:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25737:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25737:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25745:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25745:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25733:3:12"
																		},
																		"nativeSrc": "25733:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25733:14:12"
																	},
																	{
																		"hexValue": "4e6f206561726e696e677320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "25749:25:12",
																		"nodeType": "YulLiteral",
																		"src": "25749:25:12",
																		"type": "",
																		"value": "No earnings to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25726:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25726:6:12"
																},
																"nativeSrc": "25726:49:12",
																"nodeType": "YulFunctionCall",
																"src": "25726:49:12"
															},
															"nativeSrc": "25726:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "25726:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a",
												"nativeSrc": "25609:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25707:6:12",
														"nodeType": "YulTypedName",
														"src": "25707:6:12",
														"type": ""
													}
												],
												"src": "25609:173:12"
											},
											{
												"body": {
													"nativeSrc": "25934:220:12",
													"nodeType": "YulBlock",
													"src": "25934:220:12",
													"statements": [
														{
															"nativeSrc": "25944:74:12",
															"nodeType": "YulAssignment",
															"src": "25944:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26010:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26010:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26015:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26015:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25951:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "25951:58:12"
																},
																"nativeSrc": "25951:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25951:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25944:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26116:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26116:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a",
																	"nativeSrc": "26027:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "26027:88:12"
																},
																"nativeSrc": "26027:93:12",
																"nodeType": "YulFunctionCall",
																"src": "26027:93:12"
															},
															"nativeSrc": "26027:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "26027:93:12"
														},
														{
															"nativeSrc": "26129:19:12",
															"nodeType": "YulAssignment",
															"src": "26129:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26140:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26140:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26145:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26136:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26136:3:12"
																},
																"nativeSrc": "26136:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26136:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26129:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26129:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25788:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25922:3:12",
														"nodeType": "YulTypedName",
														"src": "25922:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25930:3:12",
														"nodeType": "YulTypedName",
														"src": "25930:3:12",
														"type": ""
													}
												],
												"src": "25788:366:12"
											},
											{
												"body": {
													"nativeSrc": "26331:248:12",
													"nodeType": "YulBlock",
													"src": "26331:248:12",
													"statements": [
														{
															"nativeSrc": "26341:26:12",
															"nodeType": "YulAssignment",
															"src": "26341:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26353:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26353:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26364:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26364:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26349:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26349:3:12"
																},
																"nativeSrc": "26349:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26349:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26341:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26341:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26388:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26388:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26399:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26399:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26384:3:12"
																		},
																		"nativeSrc": "26384:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26384:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26407:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26407:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26413:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26413:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26403:3:12"
																		},
																		"nativeSrc": "26403:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26403:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26377:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26377:6:12"
																},
																"nativeSrc": "26377:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26377:47:12"
															},
															"nativeSrc": "26377:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26377:47:12"
														},
														{
															"nativeSrc": "26433:139:12",
															"nodeType": "YulAssignment",
															"src": "26433:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26567:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26567:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26441:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "26441:124:12"
																},
																"nativeSrc": "26441:131:12",
																"nodeType": "YulFunctionCall",
																"src": "26441:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26433:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26433:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26160:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26311:9:12",
														"nodeType": "YulTypedName",
														"src": "26311:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26326:4:12",
														"nodeType": "YulTypedName",
														"src": "26326:4:12",
														"type": ""
													}
												],
												"src": "26160:419:12"
											},
											{
												"body": {
													"nativeSrc": "26739:288:12",
													"nodeType": "YulBlock",
													"src": "26739:288:12",
													"statements": [
														{
															"nativeSrc": "26749:26:12",
															"nodeType": "YulAssignment",
															"src": "26749:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26761:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26761:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26772:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26772:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26757:3:12"
																},
																"nativeSrc": "26757:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26757:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26749:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26749:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26829:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26829:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26842:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26842:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26853:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26853:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26838:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26838:3:12"
																		},
																		"nativeSrc": "26838:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26838:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26785:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26785:43:12"
																},
																"nativeSrc": "26785:71:12",
																"nodeType": "YulFunctionCall",
																"src": "26785:71:12"
															},
															"nativeSrc": "26785:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "26785:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26910:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26910:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26923:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26923:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26934:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26934:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26919:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26919:3:12"
																		},
																		"nativeSrc": "26919:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26919:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26866:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26866:43:12"
																},
																"nativeSrc": "26866:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26866:72:12"
															},
															"nativeSrc": "26866:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26866:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26992:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26992:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27005:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27005:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27016:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27016:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27001:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27001:3:12"
																		},
																		"nativeSrc": "27001:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27001:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26948:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26948:43:12"
																},
																"nativeSrc": "26948:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26948:72:12"
															},
															"nativeSrc": "26948:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26948:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "26585:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26695:9:12",
														"nodeType": "YulTypedName",
														"src": "26695:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26707:6:12",
														"nodeType": "YulTypedName",
														"src": "26707:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26715:6:12",
														"nodeType": "YulTypedName",
														"src": "26715:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26723:6:12",
														"nodeType": "YulTypedName",
														"src": "26723:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26734:4:12",
														"nodeType": "YulTypedName",
														"src": "26734:4:12",
														"type": ""
													}
												],
												"src": "26585:442:12"
											},
											{
												"body": {
													"nativeSrc": "27139:75:12",
													"nodeType": "YulBlock",
													"src": "27139:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27161:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "27161:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27169:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27169:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27157:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27157:3:12"
																		},
																		"nativeSrc": "27157:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27157:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "27173:33:12",
																		"nodeType": "YulLiteral",
																		"src": "27173:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27150:6:12"
																},
																"nativeSrc": "27150:57:12",
																"nodeType": "YulFunctionCall",
																"src": "27150:57:12"
															},
															"nativeSrc": "27150:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "27150:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "27033:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27131:6:12",
														"nodeType": "YulTypedName",
														"src": "27131:6:12",
														"type": ""
													}
												],
												"src": "27033:181:12"
											},
											{
												"body": {
													"nativeSrc": "27366:220:12",
													"nodeType": "YulBlock",
													"src": "27366:220:12",
													"statements": [
														{
															"nativeSrc": "27376:74:12",
															"nodeType": "YulAssignment",
															"src": "27376:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27442:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27442:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27447:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27447:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27383:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "27383:58:12"
																},
																"nativeSrc": "27383:67:12",
																"nodeType": "YulFunctionCall",
																"src": "27383:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27376:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27548:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27548:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "27459:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "27459:88:12"
																},
																"nativeSrc": "27459:93:12",
																"nodeType": "YulFunctionCall",
																"src": "27459:93:12"
															},
															"nativeSrc": "27459:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "27459:93:12"
														},
														{
															"nativeSrc": "27561:19:12",
															"nodeType": "YulAssignment",
															"src": "27561:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27572:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27577:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27577:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27568:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27568:3:12"
																},
																"nativeSrc": "27568:12:12",
																"nodeType": "YulFunctionCall",
																"src": "27568:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27561:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27220:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27354:3:12",
														"nodeType": "YulTypedName",
														"src": "27354:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27362:3:12",
														"nodeType": "YulTypedName",
														"src": "27362:3:12",
														"type": ""
													}
												],
												"src": "27220:366:12"
											},
											{
												"body": {
													"nativeSrc": "27763:248:12",
													"nodeType": "YulBlock",
													"src": "27763:248:12",
													"statements": [
														{
															"nativeSrc": "27773:26:12",
															"nodeType": "YulAssignment",
															"src": "27773:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27785:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27785:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27796:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27796:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27781:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27781:3:12"
																},
																"nativeSrc": "27781:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27781:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27773:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27773:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27820:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27820:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27831:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27831:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27816:3:12"
																		},
																		"nativeSrc": "27816:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27816:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27839:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "27839:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27845:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27845:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27835:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27835:3:12"
																		},
																		"nativeSrc": "27835:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27835:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27809:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27809:6:12"
																},
																"nativeSrc": "27809:47:12",
																"nodeType": "YulFunctionCall",
																"src": "27809:47:12"
															},
															"nativeSrc": "27809:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "27809:47:12"
														},
														{
															"nativeSrc": "27865:139:12",
															"nodeType": "YulAssignment",
															"src": "27865:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27999:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27999:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27873:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "27873:124:12"
																},
																"nativeSrc": "27873:131:12",
																"nodeType": "YulFunctionCall",
																"src": "27873:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27865:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27865:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27592:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27743:9:12",
														"nodeType": "YulTypedName",
														"src": "27743:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27758:4:12",
														"nodeType": "YulTypedName",
														"src": "27758:4:12",
														"type": ""
													}
												],
												"src": "27592:419:12"
											},
											{
												"body": {
													"nativeSrc": "28143:206:12",
													"nodeType": "YulBlock",
													"src": "28143:206:12",
													"statements": [
														{
															"nativeSrc": "28153:26:12",
															"nodeType": "YulAssignment",
															"src": "28153:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28165:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28165:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28176:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28176:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28161:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28161:3:12"
																},
																"nativeSrc": "28161:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28161:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28153:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28153:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28233:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28233:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28246:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28246:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28257:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28257:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28242:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28242:3:12"
																		},
																		"nativeSrc": "28242:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28242:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28189:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28189:43:12"
																},
																"nativeSrc": "28189:71:12",
																"nodeType": "YulFunctionCall",
																"src": "28189:71:12"
															},
															"nativeSrc": "28189:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "28189:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28314:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28314:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28327:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28327:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28338:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28338:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28323:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28323:3:12"
																		},
																		"nativeSrc": "28323:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28323:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28270:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28270:43:12"
																},
																"nativeSrc": "28270:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28270:72:12"
															},
															"nativeSrc": "28270:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28270:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "28017:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28107:9:12",
														"nodeType": "YulTypedName",
														"src": "28107:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28119:6:12",
														"nodeType": "YulTypedName",
														"src": "28119:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28127:6:12",
														"nodeType": "YulTypedName",
														"src": "28127:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28138:4:12",
														"nodeType": "YulTypedName",
														"src": "28138:4:12",
														"type": ""
													}
												],
												"src": "28017:332:12"
											},
											{
												"body": {
													"nativeSrc": "28481:206:12",
													"nodeType": "YulBlock",
													"src": "28481:206:12",
													"statements": [
														{
															"nativeSrc": "28491:26:12",
															"nodeType": "YulAssignment",
															"src": "28491:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28503:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28503:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28514:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28514:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28499:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28499:3:12"
																},
																"nativeSrc": "28499:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28499:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28491:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28491:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28571:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28571:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28584:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28584:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28595:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28595:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28580:3:12"
																		},
																		"nativeSrc": "28580:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28580:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28527:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28527:43:12"
																},
																"nativeSrc": "28527:71:12",
																"nodeType": "YulFunctionCall",
																"src": "28527:71:12"
															},
															"nativeSrc": "28527:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "28527:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28652:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28652:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28665:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28665:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28676:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28676:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28661:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28661:3:12"
																		},
																		"nativeSrc": "28661:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28661:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "28608:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28608:43:12"
																},
																"nativeSrc": "28608:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28608:72:12"
															},
															"nativeSrc": "28608:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28608:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "28355:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28445:9:12",
														"nodeType": "YulTypedName",
														"src": "28445:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28457:6:12",
														"nodeType": "YulTypedName",
														"src": "28457:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28465:6:12",
														"nodeType": "YulTypedName",
														"src": "28465:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28476:4:12",
														"nodeType": "YulTypedName",
														"src": "28476:4:12",
														"type": ""
													}
												],
												"src": "28355:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$611_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$611_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$611__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$611_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"API does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active subscription\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633(memPtr) {\n\n        mstore(add(memPtr, 0), \"API name cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one pricing option requ\")\n\n        mstore(add(memPtr, 32), \"ired\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must purchase at least one reque\")\n\n        mstore(add(memPtr, 32), \"st\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"API is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90(memPtr) {\n\n        mstore(add(memPtr, 0), \"No remaining requests\")\n\n    }\n\n    function abi_encode_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No earnings to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1104": [
									{
										"length": 32,
										"start": 2301
									},
									{
										"length": 32,
										"start": 2858
									},
									{
										"length": 32,
										"start": 3873
									},
									{
										"length": 32,
										"start": 4703
									},
									{
										"length": 32,
										"start": 4896
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c806375b238fc116100ab578063a217fddf1161006f578063a217fddf1461033c578063af6e56891461035a578063b73c6ce914610390578063d547741f1461039a578063fc0c546a146103b65761012a565b806375b238fc146102985780638da5cb5b146102b65780638e04d8d8146102d457806391d14854146102f05780639c4d9c0c146103205761012a565b806329206bd1116100f257806329206bd1146101f85780632a222851146102145780632f2ff15d1461023057806336568abe1461024c57806347734892146102685761012a565b806301ffc9a71461012e578063099952c81461015e578063212350831461017c578063248a9ca31461019857806328ac7f2c146101c8575b5f80fd5b61014860048036038101906101439190611842565b6103d4565b6040516101559190611887565b60405180910390f35b61016661044d565b60405161017391906118b8565b60405180910390f35b610196600480360381019061019191906118fb565b610453565b005b6101b260048036038101906101ad9190611959565b6105c3565b6040516101bf9190611993565b60405180910390f35b6101e260048036038101906101dd9190611a06565b6105e0565b6040516101ef91906118b8565b60405180910390f35b610212600480360381019061020d9190611b6d565b6105f5565b005b61022e60048036038101906102299190611bed565b6107f8565b005b61024a60048036038101906102459190611c2b565b610a8a565b005b61026660048036038101906102619190611c2b565b610aac565b005b610282600480360381019061027d9190611a06565b610b27565b60405161028f91906118b8565b60405180910390f35b6102a0610bc7565b6040516102ad9190611993565b60405180910390f35b6102be610beb565b6040516102cb9190611c78565b60405180910390f35b6102ee60048036038101906102e991906118fb565b610c10565b005b61030a60048036038101906103059190611c2b565b610e05565b6040516103179190611887565b60405180910390f35b61033a600480360381019061033591906118fb565b610e69565b005b610344611096565b6040516103519190611993565b60405180910390f35b610374600480360381019061036f91906118fb565b61109c565b6040516103879796959493929190611cf1565b60405180910390f35b61039861118b565b005b6103b460048036038101906103af9190611c2b565b6112fc565b005b6103be61131e565b6040516103cb9190611dc0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610446575061044582611342565b5b9050919050565b60035481565b6003548110610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90611e23565b60405180910390fd5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8381526020019081526020015f205411610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90611e8b565b60405180910390fd5b4260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8381526020019081526020015f2081905550803373ffffffffffffffffffffffffffffffffffffffff167f06aa12c0ad65927b4a753d119c26e490d3c4a4e11cb631b43131a709dc1e591760405160405180910390a350565b5f60015f8381526020019081526020015f20600101549050919050565b6004602052805f5260405f205f915090505481565b5f845111610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90611ef3565b60405180910390fd5b5f83118061064557505f82115b610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611f81565b60405180910390fd5b5f60035f81548092919061069790611fcc565b9190505590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020015f81526020016001151581525060055f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816107539190612204565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817faeb4fdd5a376011a12e318bf03de0006c5c806196fb1d14f787be471267cb8dc8787876040516107e9939291906122d3565b60405180910390a35050505050565b600354821061083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611e23565b60405180910390fd5b5f811161087e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108759061237f565b60405180910390fd5b5f60055f8481526020019081526020015f209050806006015f9054906101000a900460ff166108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906123e7565b60405180910390fd5b5f8282600201546108f39190612405565b90506109423330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ab909392919063ffffffff16565b8260065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8681526020019081526020015f205f82825461099f9190612446565b925050819055508060045f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a149190612446565b9250508190555082826005015f828254610a2e9190612446565b92505081905550833373ffffffffffffffffffffffffffffffffffffffff167f651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b85604051610a7c91906118b8565b60405180910390a350505050565b610a93826105c3565b610a9c8161142d565b610aa68383611441565b50505050565b610ab461152a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b18576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b228282611531565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610b819190611c78565b602060405180830381865afa158015610b9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc0919061248d565b9050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003548110610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611e23565b60405180910390fd5b5f60055f8381526020019081526020015f209050806006015f9054906101000a900460ff16610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf906123e7565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8481526020019081526020015f205490505f8111610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4390612502565b60405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8581526020019081526020015f205f828254610daa9190612520565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167fcca1381d7195cd2569f7fc5ea523be6bbec35a1421ab82b215b1651f7b22157e42604051610df891906118b8565b60405180910390a3505050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6003548110610ead576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea490611e23565b60405180910390fd5b5f60055f8381526020019081526020015f209050806006015f9054906101000a900460ff16610f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f08906123e7565b60405180910390fd5b5f81600301549050610f663330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ab909392919063ffffffff16565b816004015442610f769190612446565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8581526020019081526020015f20819055508060045f845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110379190612446565b92505081905550823373ffffffffffffffffffffffffffffffffffffffff167f6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03846004015460405161108991906118b8565b60405180910390a3505050565b5f801b81565b6005602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546110e090612040565b80601f016020809104026020016040519081016040528092919081815260200182805461110c90612040565b80156111575780601f1061112e57610100808354040283529160200191611157565b820191905f5260205f20905b81548152906001019060200180831161113a57829003601f168201915b505050505090806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16905087565b61119361161b565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120d9061259d565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112a333827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116689092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516112e991906118b8565b60405180910390a2506112fa6116e7565b565b611305826105c3565b61130e8161142d565b6113188383611531565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611427848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113e0939291906125bb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116f0565b50505050565b61143e8161143961152a565b61178b565b50565b5f61144c8383610e05565b611520576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506114bd61152a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611524565b5f90505b92915050565b5f33905090565b5f61153c8383610e05565b15611611575f60015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506115ae61152a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611615565b5f90505b92915050565b60025f540361165f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116569061263a565b60405180910390fd5b60025f81905550565b6116e2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161169b929190612658565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116f0565b505050565b60015f81905550565b5f8060205f8451602086015f885af18061170f576040513d5f823e3d81fd5b3d92505f519150505f8214611728576001811415611743565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561178557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161177c9190611c78565b60405180910390fd5b50505050565b6117958282610e05565b6117d85780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117cf92919061267f565b60405180910390fd5b5050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611821816117ed565b811461182b575f80fd5b50565b5f8135905061183c81611818565b92915050565b5f60208284031215611857576118566117e5565b5b5f6118648482850161182e565b91505092915050565b5f8115159050919050565b6118818161186d565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f819050919050565b6118b2816118a0565b82525050565b5f6020820190506118cb5f8301846118a9565b92915050565b6118da816118a0565b81146118e4575f80fd5b50565b5f813590506118f5816118d1565b92915050565b5f602082840312156119105761190f6117e5565b5b5f61191d848285016118e7565b91505092915050565b5f819050919050565b61193881611926565b8114611942575f80fd5b50565b5f813590506119538161192f565b92915050565b5f6020828403121561196e5761196d6117e5565b5b5f61197b84828501611945565b91505092915050565b61198d81611926565b82525050565b5f6020820190506119a65f830184611984565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119d5826119ac565b9050919050565b6119e5816119cb565b81146119ef575f80fd5b50565b5f81359050611a00816119dc565b92915050565b5f60208284031215611a1b57611a1a6117e5565b5b5f611a28848285016119f2565b91505092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a7f82611a39565b810181811067ffffffffffffffff82111715611a9e57611a9d611a49565b5b80604052505050565b5f611ab06117dc565b9050611abc8282611a76565b919050565b5f67ffffffffffffffff821115611adb57611ada611a49565b5b611ae482611a39565b9050602081019050919050565b828183375f83830152505050565b5f611b11611b0c84611ac1565b611aa7565b905082815260208101848484011115611b2d57611b2c611a35565b5b611b38848285611af1565b509392505050565b5f82601f830112611b5457611b53611a31565b5b8135611b64848260208601611aff565b91505092915050565b5f805f8060808587031215611b8557611b846117e5565b5b5f85013567ffffffffffffffff811115611ba257611ba16117e9565b5b611bae87828801611b40565b9450506020611bbf878288016118e7565b9350506040611bd0878288016118e7565b9250506060611be1878288016118e7565b91505092959194509250565b5f8060408385031215611c0357611c026117e5565b5b5f611c10858286016118e7565b9250506020611c21858286016118e7565b9150509250929050565b5f8060408385031215611c4157611c406117e5565b5b5f611c4e85828601611945565b9250506020611c5f858286016119f2565b9150509250929050565b611c72816119cb565b82525050565b5f602082019050611c8b5f830184611c69565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611cc382611c91565b611ccd8185611c9b565b9350611cdd818560208601611cab565b611ce681611a39565b840191505092915050565b5f60e082019050611d045f83018a611c69565b8181036020830152611d168189611cb9565b9050611d2560408301886118a9565b611d3260608301876118a9565b611d3f60808301866118a9565b611d4c60a08301856118a9565b611d5960c0830184611878565b98975050505050505050565b5f819050919050565b5f611d88611d83611d7e846119ac565b611d65565b6119ac565b9050919050565b5f611d9982611d6e565b9050919050565b5f611daa82611d8f565b9050919050565b611dba81611da0565b82525050565b5f602082019050611dd35f830184611db1565b92915050565b7f41504920646f6573206e6f7420657869737400000000000000000000000000005f82015250565b5f611e0d601283611c9b565b9150611e1882611dd9565b602082019050919050565b5f6020820190508181035f830152611e3a81611e01565b9050919050565b7f4e6f2061637469766520737562736372697074696f6e000000000000000000005f82015250565b5f611e75601683611c9b565b9150611e8082611e41565b602082019050919050565b5f6020820190508181035f830152611ea281611e69565b9050919050565b7f415049206e616d652063616e6e6f7420626520656d70747900000000000000005f82015250565b5f611edd601883611c9b565b9150611ee882611ea9565b602082019050919050565b5f6020820190508181035f830152611f0a81611ed1565b9050919050565b7f4174206c65617374206f6e652070726963696e67206f7074696f6e20726571755f8201527f6972656400000000000000000000000000000000000000000000000000000000602082015250565b5f611f6b602483611c9b565b9150611f7682611f11565b604082019050919050565b5f6020820190508181035f830152611f9881611f5f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fd6826118a0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200857612007611f9f565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061205757607f821691505b60208210810361206a57612069612013565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120cc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612091565b6120d68683612091565b95508019841693508086168417925050509392505050565b5f6121086121036120fe846118a0565b611d65565b6118a0565b9050919050565b5f819050919050565b612121836120ee565b61213561212d8261210f565b84845461209d565b825550505050565b5f90565b61214961213d565b612154818484612118565b505050565b5b818110156121775761216c5f82612141565b60018101905061215a565b5050565b601f8211156121bc5761218d81612070565b61219684612082565b810160208510156121a5578190505b6121b96121b185612082565b830182612159565b50505b505050565b5f82821c905092915050565b5f6121dc5f19846008026121c1565b1980831691505092915050565b5f6121f483836121cd565b9150826002028217905092915050565b61220d82611c91565b67ffffffffffffffff81111561222657612225611a49565b5b6122308254612040565b61223b82828561217b565b5f60209050601f83116001811461226c575f841561225a578287015190505b61226485826121e9565b8655506122cb565b601f19841661227a86612070565b5f5b828110156122a15784890151825560018201915060208501945060208101905061227c565b868310156122be57848901516122ba601f8916826121cd565b8355505b6001600288020188555050505b505050505050565b5f6060820190508181035f8301526122eb8186611cb9565b90506122fa60208301856118a9565b61230760408301846118a9565b949350505050565b7f4d757374207075726368617365206174206c65617374206f6e652072657175655f8201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b5f612369602283611c9b565b91506123748261230f565b604082019050919050565b5f6020820190508181035f8301526123968161235d565b9050919050565b7f415049206973206e6f74206163746976650000000000000000000000000000005f82015250565b5f6123d1601183611c9b565b91506123dc8261239d565b602082019050919050565b5f6020820190508181035f8301526123fe816123c5565b9050919050565b5f61240f826118a0565b915061241a836118a0565b9250828202612428816118a0565b9150828204841483151761243f5761243e611f9f565b5b5092915050565b5f612450826118a0565b915061245b836118a0565b925082820190508082111561247357612472611f9f565b5b92915050565b5f81519050612487816118d1565b92915050565b5f602082840312156124a2576124a16117e5565b5b5f6124af84828501612479565b91505092915050565b7f4e6f2072656d61696e696e6720726571756573747300000000000000000000005f82015250565b5f6124ec601583611c9b565b91506124f7826124b8565b602082019050919050565b5f6020820190508181035f830152612519816124e0565b9050919050565b5f61252a826118a0565b9150612535836118a0565b925082820390508181111561254d5761254c611f9f565b5b92915050565b7f4e6f206561726e696e677320746f2077697468647261770000000000000000005f82015250565b5f612587601783611c9b565b915061259282612553565b602082019050919050565b5f6020820190508181035f8301526125b48161257b565b9050919050565b5f6060820190506125ce5f830186611c69565b6125db6020830185611c69565b6125e860408301846118a9565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612624601f83611c9b565b915061262f826125f0565b602082019050919050565b5f6020820190508181035f83015261265181612618565b9050919050565b5f60408201905061266b5f830185611c69565b61267860208301846118a9565b9392505050565b5f6040820190506126925f830185611c69565b61269f6020830184611984565b939250505056fea2646970667358221220dbff78643e8436719283411da639dc30db1d2e1128b46f1f6d25a1772ac9ae2864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAF6E5689 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3B6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8E04D8D8 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x9C4D9C0C EQ PUSH2 0x320 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x29206BD1 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x29206BD1 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x2A222851 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x47734892 EQ PUSH2 0x268 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x99952C8 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x21235083 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x28AC7F2C EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0x118B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x446 JUMPI POP PUSH2 0x445 DUP3 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AA12C0AD65927B4A753D119C26E490D3C4A4E11CB631B43131A709DC1E5917 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP5 MLOAD GT PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 PUSH2 0x645 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x697 SWAP1 PUSH2 0x1FCC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xAEB4FDD5A376011A12E318BF03DE0006C5C806196FB1D14F787BE471267CB8DC DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0x237F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST SWAP1 POP PUSH2 0x942 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13AB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B DUP6 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH2 0xAA6 DUP4 DUP4 PUSH2 0x1441 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB22 DUP3 DUP3 PUSH2 0x1531 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xC54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4B SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCCA1381D7195CD2569F7FC5EA523BE6BBEC35A1421AB82B215B1651F7B22157E TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xDF8 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0xF66 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13AB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2446 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x10E0 SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x110C SWAP1 PUSH2 0x2040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x112E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x1193 PUSH2 0x161B JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120D SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12A3 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1668 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12FA PUSH2 0x16E7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1305 DUP3 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x130E DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x1318 DUP4 DUP4 PUSH2 0x1531 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16F0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x1439 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x144C DUP4 DUP4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x1520 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14BD PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1524 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x153C DUP4 DUP4 PUSH2 0xE05 JUMP JUMPDEST ISZERO PUSH2 0x1611 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15AE PUSH2 0x152A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x16E2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x169B SWAP3 SWAP2 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1728 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1743 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1785 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177C SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1795 DUP3 DUP3 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x17D8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CF SWAP3 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183C DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x186D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18F5 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x191D DUP5 DUP3 DUP6 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP2 EQ PUSH2 0x1942 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197B DUP5 DUP3 DUP6 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D5 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP2 EQ PUSH2 0x19EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A00 DUP2 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1B JUMPI PUSH2 0x1A1A PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A28 DUP5 DUP3 DUP6 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A7F DUP3 PUSH2 0x1A39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABC DUP3 DUP3 PUSH2 0x1A76 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST PUSH2 0x1AE4 DUP3 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B11 PUSH2 0x1B0C DUP5 PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1A35 JUMP JUMPDEST JUMPDEST PUSH2 0x1B38 DUP5 DUP3 DUP6 PUSH2 0x1AF1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B64 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B85 JUMPI PUSH2 0x1B84 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA1 PUSH2 0x17E9 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAE DUP8 DUP3 DUP9 ADD PUSH2 0x1B40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BBF DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BD0 DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1BE1 DUP8 DUP3 DUP9 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C10 DUP6 DUP3 DUP7 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C21 DUP6 DUP3 DUP7 ADD PUSH2 0x18E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4E DUP6 DUP3 DUP7 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5F DUP6 DUP3 DUP7 ADD PUSH2 0x19F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C72 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8B PUSH0 DUP4 ADD DUP5 PUSH2 0x1C69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC3 DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x1CCD DUP2 DUP6 PUSH2 0x1C9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1CE6 DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1D04 PUSH0 DUP4 ADD DUP11 PUSH2 0x1C69 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 DUP10 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D25 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D32 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D3F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D4C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1D59 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D88 PUSH2 0x1D83 PUSH2 0x1D7E DUP5 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D99 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAA DUP3 PUSH2 0x1D8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBA DUP2 PUSH2 0x1DA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41504920646F6573206E6F742065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0D PUSH1 0x12 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E18 DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3A DUP2 PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2061637469766520737562736372697074696F6E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E75 PUSH1 0x16 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E80 DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA2 DUP2 PUSH2 0x1E69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206E616D652063616E6E6F7420626520656D7074790000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EDD PUSH1 0x18 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE8 DUP3 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0A DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652070726963696E67206F7074696F6E2072657175 PUSH0 DUP3 ADD MSTORE PUSH32 0x6972656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6B PUSH1 0x24 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F76 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F98 DUP2 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FD6 DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2057 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20CC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x20D6 DUP7 DUP4 PUSH2 0x2091 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2108 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2121 DUP4 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2135 PUSH2 0x212D DUP3 PUSH2 0x210F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x209D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2149 PUSH2 0x213D JUMP JUMPDEST PUSH2 0x2154 DUP2 DUP5 DUP5 PUSH2 0x2118 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2177 JUMPI PUSH2 0x216C PUSH0 DUP3 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21BC JUMPI PUSH2 0x218D DUP2 PUSH2 0x2070 JUMP JUMPDEST PUSH2 0x2196 DUP5 PUSH2 0x2082 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21A5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21B9 PUSH2 0x21B1 DUP6 PUSH2 0x2082 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2159 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21DC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21C1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F4 DUP4 DUP4 PUSH2 0x21CD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220D DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1A49 JUMP JUMPDEST JUMPDEST PUSH2 0x2230 DUP3 SLOAD PUSH2 0x2040 JUMP JUMPDEST PUSH2 0x223B DUP3 DUP3 DUP6 PUSH2 0x217B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x226C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x225A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2264 DUP6 DUP3 PUSH2 0x21E9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x227A DUP7 PUSH2 0x2070 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22A1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x227C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22BE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22BA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21CD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 DUP7 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x22FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x2307 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D757374207075726368617365206174206C65617374206F6E65207265717565 PUSH0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2369 PUSH1 0x22 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x2374 DUP3 PUSH2 0x230F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2396 DUP2 PUSH2 0x235D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x415049206973206E6F7420616374697665000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0x11 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x240F DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x241A DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2428 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x243F JUMPI PUSH2 0x243E PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2450 DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x245B DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2473 JUMPI PUSH2 0x2472 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2487 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x17E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AF DUP5 DUP3 DUP6 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2072656D61696E696E672072657175657374730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EC PUSH1 0x15 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x24F7 DUP3 PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2519 DUP2 PUSH2 0x24E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x252A DUP3 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2535 DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x254D JUMPI PUSH2 0x254C PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206561726E696E677320746F207769746864726177000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 PUSH1 0x17 DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x2592 DUP3 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25B4 DUP2 PUSH2 0x257B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25CE PUSH0 DUP4 ADD DUP7 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x25E8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2624 PUSH1 0x1F DUP4 PUSH2 0x1C9B JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266B PUSH0 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x2678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2692 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x269F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1984 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SELFDESTRUCT PUSH25 0x643E8436719283411DA639DC30DB1D2E1128B46F1F6D25A177 0x2A 0xC9 0xAE 0x28 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:6062:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:27:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:402;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;970:51:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3101:906;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4013:666;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6446:117:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;805:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;731:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5271:441;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4681:588:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1336:35:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;5718:314;;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;644:29:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;899:27:11:-;;;;:::o;6038:402::-;6118:12;;6109:6;:21;6101:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6236:15;6184:10;:22;6195:10;6184:22;;;;;;;;;;;;;;;:41;;:49;6226:6;6184:49;;;;;;;;;;;;:67;6163:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;6362:15;6310:10;:22;6321:10;6310:22;;;;;;;;;;;;;;;:41;;:49;6352:6;6310:49;;;;;;;;;;;:67;;;;6426:6;6414:10;6392:41;;;;;;;;;;;;6038:402;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;970:51:11:-;;;;;;;;;;;;;;;;;:::o;3101:906::-;3315:1;3299:5;3293:19;:23;3285:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3395:1;3376:16;:20;:46;;;;3421:1;3400:18;:22;3376:46;3355:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;3495:13;3511:12;;:14;;;;;;;;;:::i;:::-;;;;;3495:30;;3549:288;;;;;;;;3577:10;3549:288;;;;;;3607:5;3549:288;;;;3643:16;3549:288;;;;3692:18;3549:288;;;;3746:21;3549:288;;;;3797:1;3549:288;;;;3822:4;3549:288;;;;;3535:4;:11;3540:5;3535:11;;;;;;;;;;;:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3899:10;3853:147;;3880:5;3853:147;3923:5;3942:16;3972:18;3853:147;;;;;;;;:::i;:::-;;;;;;;;3275:732;3101:906;;;;:::o;4013:666::-;4117:12;;4108:6;:21;4100:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4178:1;4166:9;:13;4158:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4225:15;4243:4;:12;4248:6;4243:12;;;;;;;;;;;4225:30;;4269:3;:12;;;;;;;;;;;;4261:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4310:17;4352:9;4330:3;:19;;;:31;;;;:::i;:::-;4310:51;;4401:60;4424:10;4444:4;4451:9;4401:5;:22;;;;:60;;;;;;:::i;:::-;4520:9;4468:10;:22;4479:10;4468:22;;;;;;;;;;;;;;;:40;;:48;4509:6;4468:48;;;;;;;;;;;;:61;;;;;;;:::i;:::-;;;;;;;;4569:9;4535:16;:30;4552:3;:12;;;;;;;;;;;;4535:30;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;4607:9;4585:3;:18;;;:31;;;;;;;:::i;:::-;;;;;;;;4658:6;4646:10;4627:49;;;4666:9;4627:49;;;;;;:::i;:::-;;;;;;;;4094:585;;4013:666;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;6446:117:11:-;6508:7;6534:5;:15;;;6550:5;6534:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6527:29;;6446:117;;;:::o;805:60::-;842:23;805:60;:::o;731:20::-;;;;;;;;;;;;;:::o;5271:441::-;5341:12;;5332:6;:21;5324:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5383:15;5401:4;:12;5406:6;5401:12;;;;;;;;;;;5383:30;;5427:3;:12;;;;;;;;;;;;5419:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;5468:17;5488:10;:22;5499:10;5488:22;;;;;;;;;;;;;;;:40;;:48;5529:6;5488:48;;;;;;;;;;;;5468:68;;5562:1;5550:9;:13;5542:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5648:1;5596:10;:22;5607:10;5596:22;;;;;;;;;;;;;;;:40;;:48;5637:6;5596:48;;;;;;;;;;;;:53;;;;;;;:::i;:::-;;;;;;;;5685:6;5673:10;5661:48;;;5693:15;5661:48;;;;;;:::i;:::-;;;;;;;;5318:394;;5271:441;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;4681:588:11:-;4769:12;;4760:6;:21;4752:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4811:15;4829:4;:12;4834:6;4829:12;;;;;;;;;;;4811:30;;4855:3;:12;;;;;;;;;;;;4847:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;4896:17;4916:3;:21;;;4896:41;;4977:60;5000:10;5020:4;5027:9;4977:5;:22;;;;:60;;;;;;:::i;:::-;5114:3;:24;;;5096:15;:42;;;;:::i;:::-;5044:10;:22;5055:10;5044:22;;;;;;;;;;;;;;;:41;;:49;5086:6;5044:49;;;;;;;;;;;:94;;;;5178:9;5144:16;:30;5161:3;:12;;;;;;;;;;;;5144:30;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;5233:6;5221:10;5199:67;;;5241:3;:24;;;5199:67;;;;;;:::i;:::-;;;;;;;;4746:523;;4681:588;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;1336:35:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5718:314::-;2261:21:5;:19;:21::i;:::-;5778:15:11::1;5796:16;:28;5813:10;5796:28;;;;;;;;;;;;;;;;5778:46;;5852:1;5842:7;:11;5834:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5923:1;5892:16;:28;5909:10;5892:28;;;;;;;;;;;;;;;:32;;;;5934:39;5953:10;5965:7;5934:5;:18;;;;:39;;;;;:::i;:::-;6005:10;5989:36;;;6017:7;5989:36;;;;;;:::i;:::-;;;;;;;;5768:264;2303:20:5::0;:18;:20::i;:::-;5718:314:11:o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;644:29:11:-;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;7686:720:7:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:329::-;2976:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:119;;;3031:79;;:::i;:::-;2993:119;3151:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3122:117;2917:329;;;;:::o;3252:118::-;3339:24;3357:5;3339:24;:::i;:::-;3334:3;3327:37;3252:118;;:::o;3376:222::-;3469:4;3507:2;3496:9;3492:18;3484:26;;3520:71;3588:1;3577:9;3573:17;3564:6;3520:71;:::i;:::-;3376:222;;;;:::o;3604:126::-;3641:7;3681:42;3674:5;3670:54;3659:65;;3604:126;;;:::o;3736:96::-;3773:7;3802:24;3820:5;3802:24;:::i;:::-;3791:35;;3736:96;;;:::o;3838:122::-;3911:24;3929:5;3911:24;:::i;:::-;3904:5;3901:35;3891:63;;3950:1;3947;3940:12;3891:63;3838:122;:::o;3966:139::-;4012:5;4050:6;4037:20;4028:29;;4066:33;4093:5;4066:33;:::i;:::-;3966:139;;;;:::o;4111:329::-;4170:6;4219:2;4207:9;4198:7;4194:23;4190:32;4187:119;;;4225:79;;:::i;:::-;4187:119;4345:1;4370:53;4415:7;4406:6;4395:9;4391:22;4370:53;:::i;:::-;4360:63;;4316:117;4111:329;;;;:::o;4446:117::-;4555:1;4552;4545:12;4569:117;4678:1;4675;4668:12;4692:102;4733:6;4784:2;4780:7;4775:2;4768:5;4764:14;4760:28;4750:38;;4692:102;;;:::o;4800:180::-;4848:77;4845:1;4838:88;4945:4;4942:1;4935:15;4969:4;4966:1;4959:15;4986:281;5069:27;5091:4;5069:27;:::i;:::-;5061:6;5057:40;5199:6;5187:10;5184:22;5163:18;5151:10;5148:34;5145:62;5142:88;;;5210:18;;:::i;:::-;5142:88;5250:10;5246:2;5239:22;5029:238;4986:281;;:::o;5273:129::-;5307:6;5334:20;;:::i;:::-;5324:30;;5363:33;5391:4;5383:6;5363:33;:::i;:::-;5273:129;;;:::o;5408:308::-;5470:4;5560:18;5552:6;5549:30;5546:56;;;5582:18;;:::i;:::-;5546:56;5620:29;5642:6;5620:29;:::i;:::-;5612:37;;5704:4;5698;5694:15;5686:23;;5408:308;;;:::o;5722:148::-;5820:6;5815:3;5810;5797:30;5861:1;5852:6;5847:3;5843:16;5836:27;5722:148;;;:::o;5876:425::-;5954:5;5979:66;5995:49;6037:6;5995:49;:::i;:::-;5979:66;:::i;:::-;5970:75;;6068:6;6061:5;6054:21;6106:4;6099:5;6095:16;6144:3;6135:6;6130:3;6126:16;6123:25;6120:112;;;6151:79;;:::i;:::-;6120:112;6241:54;6288:6;6283:3;6278;6241:54;:::i;:::-;5960:341;5876:425;;;;;:::o;6321:340::-;6377:5;6426:3;6419:4;6411:6;6407:17;6403:27;6393:122;;6434:79;;:::i;:::-;6393:122;6551:6;6538:20;6576:79;6651:3;6643:6;6636:4;6628:6;6624:17;6576:79;:::i;:::-;6567:88;;6383:278;6321:340;;;;:::o;6667:945::-;6763:6;6771;6779;6787;6836:3;6824:9;6815:7;6811:23;6807:33;6804:120;;;6843:79;;:::i;:::-;6804:120;6991:1;6980:9;6976:17;6963:31;7021:18;7013:6;7010:30;7007:117;;;7043:79;;:::i;:::-;7007:117;7148:63;7203:7;7194:6;7183:9;7179:22;7148:63;:::i;:::-;7138:73;;6934:287;7260:2;7286:53;7331:7;7322:6;7311:9;7307:22;7286:53;:::i;:::-;7276:63;;7231:118;7388:2;7414:53;7459:7;7450:6;7439:9;7435:22;7414:53;:::i;:::-;7404:63;;7359:118;7516:2;7542:53;7587:7;7578:6;7567:9;7563:22;7542:53;:::i;:::-;7532:63;;7487:118;6667:945;;;;;;;:::o;7618:474::-;7686:6;7694;7743:2;7731:9;7722:7;7718:23;7714:32;7711:119;;;7749:79;;:::i;:::-;7711:119;7869:1;7894:53;7939:7;7930:6;7919:9;7915:22;7894:53;:::i;:::-;7884:63;;7840:117;7996:2;8022:53;8067:7;8058:6;8047:9;8043:22;8022:53;:::i;:::-;8012:63;;7967:118;7618:474;;;;;:::o;8098:::-;8166:6;8174;8223:2;8211:9;8202:7;8198:23;8194:32;8191:119;;;8229:79;;:::i;:::-;8191:119;8349:1;8374:53;8419:7;8410:6;8399:9;8395:22;8374:53;:::i;:::-;8364:63;;8320:117;8476:2;8502:53;8547:7;8538:6;8527:9;8523:22;8502:53;:::i;:::-;8492:63;;8447:118;8098:474;;;;;:::o;8578:118::-;8665:24;8683:5;8665:24;:::i;:::-;8660:3;8653:37;8578:118;;:::o;8702:222::-;8795:4;8833:2;8822:9;8818:18;8810:26;;8846:71;8914:1;8903:9;8899:17;8890:6;8846:71;:::i;:::-;8702:222;;;;:::o;8930:99::-;8982:6;9016:5;9010:12;9000:22;;8930:99;;;:::o;9035:169::-;9119:11;9153:6;9148:3;9141:19;9193:4;9188:3;9184:14;9169:29;;9035:169;;;;:::o;9210:139::-;9299:6;9294:3;9289;9283:23;9340:1;9331:6;9326:3;9322:16;9315:27;9210:139;;;:::o;9355:377::-;9443:3;9471:39;9504:5;9471:39;:::i;:::-;9526:71;9590:6;9585:3;9526:71;:::i;:::-;9519:78;;9606:65;9664:6;9659:3;9652:4;9645:5;9641:16;9606:65;:::i;:::-;9696:29;9718:6;9696:29;:::i;:::-;9691:3;9687:39;9680:46;;9447:285;9355:377;;;;:::o;9738:965::-;10013:4;10051:3;10040:9;10036:19;10028:27;;10065:71;10133:1;10122:9;10118:17;10109:6;10065:71;:::i;:::-;10183:9;10177:4;10173:20;10168:2;10157:9;10153:18;10146:48;10211:78;10284:4;10275:6;10211:78;:::i;:::-;10203:86;;10299:72;10367:2;10356:9;10352:18;10343:6;10299:72;:::i;:::-;10381;10449:2;10438:9;10434:18;10425:6;10381:72;:::i;:::-;10463:73;10531:3;10520:9;10516:19;10507:6;10463:73;:::i;:::-;10546;10614:3;10603:9;10599:19;10590:6;10546:73;:::i;:::-;10629:67;10691:3;10680:9;10676:19;10667:6;10629:67;:::i;:::-;9738:965;;;;;;;;;;:::o;10709:60::-;10737:3;10758:5;10751:12;;10709:60;;;:::o;10775:142::-;10825:9;10858:53;10876:34;10885:24;10903:5;10885:24;:::i;:::-;10876:34;:::i;:::-;10858:53;:::i;:::-;10845:66;;10775:142;;;:::o;10923:126::-;10973:9;11006:37;11037:5;11006:37;:::i;:::-;10993:50;;10923:126;;;:::o;11055:140::-;11119:9;11152:37;11183:5;11152:37;:::i;:::-;11139:50;;11055:140;;;:::o;11201:159::-;11302:51;11347:5;11302:51;:::i;:::-;11297:3;11290:64;11201:159;;:::o;11366:250::-;11473:4;11511:2;11500:9;11496:18;11488:26;;11524:85;11606:1;11595:9;11591:17;11582:6;11524:85;:::i;:::-;11366:250;;;;:::o;11622:168::-;11762:20;11758:1;11750:6;11746:14;11739:44;11622:168;:::o;11796:366::-;11938:3;11959:67;12023:2;12018:3;11959:67;:::i;:::-;11952:74;;12035:93;12124:3;12035:93;:::i;:::-;12153:2;12148:3;12144:12;12137:19;;11796:366;;;:::o;12168:419::-;12334:4;12372:2;12361:9;12357:18;12349:26;;12421:9;12415:4;12411:20;12407:1;12396:9;12392:17;12385:47;12449:131;12575:4;12449:131;:::i;:::-;12441:139;;12168:419;;;:::o;12593:172::-;12733:24;12729:1;12721:6;12717:14;12710:48;12593:172;:::o;12771:366::-;12913:3;12934:67;12998:2;12993:3;12934:67;:::i;:::-;12927:74;;13010:93;13099:3;13010:93;:::i;:::-;13128:2;13123:3;13119:12;13112:19;;12771:366;;;:::o;13143:419::-;13309:4;13347:2;13336:9;13332:18;13324:26;;13396:9;13390:4;13386:20;13382:1;13371:9;13367:17;13360:47;13424:131;13550:4;13424:131;:::i;:::-;13416:139;;13143:419;;;:::o;13568:174::-;13708:26;13704:1;13696:6;13692:14;13685:50;13568:174;:::o;13748:366::-;13890:3;13911:67;13975:2;13970:3;13911:67;:::i;:::-;13904:74;;13987:93;14076:3;13987:93;:::i;:::-;14105:2;14100:3;14096:12;14089:19;;13748:366;;;:::o;14120:419::-;14286:4;14324:2;14313:9;14309:18;14301:26;;14373:9;14367:4;14363:20;14359:1;14348:9;14344:17;14337:47;14401:131;14527:4;14401:131;:::i;:::-;14393:139;;14120:419;;;:::o;14545:223::-;14685:34;14681:1;14673:6;14669:14;14662:58;14754:6;14749:2;14741:6;14737:15;14730:31;14545:223;:::o;14774:366::-;14916:3;14937:67;15001:2;14996:3;14937:67;:::i;:::-;14930:74;;15013:93;15102:3;15013:93;:::i;:::-;15131:2;15126:3;15122:12;15115:19;;14774:366;;;:::o;15146:419::-;15312:4;15350:2;15339:9;15335:18;15327:26;;15399:9;15393:4;15389:20;15385:1;15374:9;15370:17;15363:47;15427:131;15553:4;15427:131;:::i;:::-;15419:139;;15146:419;;;:::o;15571:180::-;15619:77;15616:1;15609:88;15716:4;15713:1;15706:15;15740:4;15737:1;15730:15;15757:233;15796:3;15819:24;15837:5;15819:24;:::i;:::-;15810:33;;15865:66;15858:5;15855:77;15852:103;;15935:18;;:::i;:::-;15852:103;15982:1;15975:5;15971:13;15964:20;;15757:233;;;:::o;15996:180::-;16044:77;16041:1;16034:88;16141:4;16138:1;16131:15;16165:4;16162:1;16155:15;16182:320;16226:6;16263:1;16257:4;16253:12;16243:22;;16310:1;16304:4;16300:12;16331:18;16321:81;;16387:4;16379:6;16375:17;16365:27;;16321:81;16449:2;16441:6;16438:14;16418:18;16415:38;16412:84;;16468:18;;:::i;:::-;16412:84;16233:269;16182:320;;;:::o;16508:141::-;16557:4;16580:3;16572:11;;16603:3;16600:1;16593:14;16637:4;16634:1;16624:18;16616:26;;16508:141;;;:::o;16655:93::-;16692:6;16739:2;16734;16727:5;16723:14;16719:23;16709:33;;16655:93;;;:::o;16754:107::-;16798:8;16848:5;16842:4;16838:16;16817:37;;16754:107;;;;:::o;16867:393::-;16936:6;16986:1;16974:10;16970:18;17009:97;17039:66;17028:9;17009:97;:::i;:::-;17127:39;17157:8;17146:9;17127:39;:::i;:::-;17115:51;;17199:4;17195:9;17188:5;17184:21;17175:30;;17248:4;17238:8;17234:19;17227:5;17224:30;17214:40;;16943:317;;16867:393;;;;;:::o;17266:142::-;17316:9;17349:53;17367:34;17376:24;17394:5;17376:24;:::i;:::-;17367:34;:::i;:::-;17349:53;:::i;:::-;17336:66;;17266:142;;;:::o;17414:75::-;17457:3;17478:5;17471:12;;17414:75;;;:::o;17495:269::-;17605:39;17636:7;17605:39;:::i;:::-;17666:91;17715:41;17739:16;17715:41;:::i;:::-;17707:6;17700:4;17694:11;17666:91;:::i;:::-;17660:4;17653:105;17571:193;17495:269;;;:::o;17770:73::-;17815:3;17770:73;:::o;17849:189::-;17926:32;;:::i;:::-;17967:65;18025:6;18017;18011:4;17967:65;:::i;:::-;17902:136;17849:189;;:::o;18044:186::-;18104:120;18121:3;18114:5;18111:14;18104:120;;;18175:39;18212:1;18205:5;18175:39;:::i;:::-;18148:1;18141:5;18137:13;18128:22;;18104:120;;;18044:186;;:::o;18236:543::-;18337:2;18332:3;18329:11;18326:446;;;18371:38;18403:5;18371:38;:::i;:::-;18455:29;18473:10;18455:29;:::i;:::-;18445:8;18441:44;18638:2;18626:10;18623:18;18620:49;;;18659:8;18644:23;;18620:49;18682:80;18738:22;18756:3;18738:22;:::i;:::-;18728:8;18724:37;18711:11;18682:80;:::i;:::-;18341:431;;18326:446;18236:543;;;:::o;18785:117::-;18839:8;18889:5;18883:4;18879:16;18858:37;;18785:117;;;;:::o;18908:169::-;18952:6;18985:51;19033:1;19029:6;19021:5;19018:1;19014:13;18985:51;:::i;:::-;18981:56;19066:4;19060;19056:15;19046:25;;18959:118;18908:169;;;;:::o;19082:295::-;19158:4;19304:29;19329:3;19323:4;19304:29;:::i;:::-;19296:37;;19366:3;19363:1;19359:11;19353:4;19350:21;19342:29;;19082:295;;;;:::o;19382:1395::-;19499:37;19532:3;19499:37;:::i;:::-;19601:18;19593:6;19590:30;19587:56;;;19623:18;;:::i;:::-;19587:56;19667:38;19699:4;19693:11;19667:38;:::i;:::-;19752:67;19812:6;19804;19798:4;19752:67;:::i;:::-;19846:1;19870:4;19857:17;;19902:2;19894:6;19891:14;19919:1;19914:618;;;;20576:1;20593:6;20590:77;;;20642:9;20637:3;20633:19;20627:26;20618:35;;20590:77;20693:67;20753:6;20746:5;20693:67;:::i;:::-;20687:4;20680:81;20549:222;19884:887;;19914:618;19966:4;19962:9;19954:6;19950:22;20000:37;20032:4;20000:37;:::i;:::-;20059:1;20073:208;20087:7;20084:1;20081:14;20073:208;;;20166:9;20161:3;20157:19;20151:26;20143:6;20136:42;20217:1;20209:6;20205:14;20195:24;;20264:2;20253:9;20249:18;20236:31;;20110:4;20107:1;20103:12;20098:17;;20073:208;;;20309:6;20300:7;20297:19;20294:179;;;20367:9;20362:3;20358:19;20352:26;20410:48;20452:4;20444:6;20440:17;20429:9;20410:48;:::i;:::-;20402:6;20395:64;20317:156;20294:179;20519:1;20515;20507:6;20503:14;20499:22;20493:4;20486:36;19921:611;;;19884:887;;19474:1303;;;19382:1395;;:::o;20783:533::-;20952:4;20990:2;20979:9;20975:18;20967:26;;21039:9;21033:4;21029:20;21025:1;21014:9;21010:17;21003:47;21067:78;21140:4;21131:6;21067:78;:::i;:::-;21059:86;;21155:72;21223:2;21212:9;21208:18;21199:6;21155:72;:::i;:::-;21237;21305:2;21294:9;21290:18;21281:6;21237:72;:::i;:::-;20783:533;;;;;;:::o;21322:221::-;21462:34;21458:1;21450:6;21446:14;21439:58;21531:4;21526:2;21518:6;21514:15;21507:29;21322:221;:::o;21549:366::-;21691:3;21712:67;21776:2;21771:3;21712:67;:::i;:::-;21705:74;;21788:93;21877:3;21788:93;:::i;:::-;21906:2;21901:3;21897:12;21890:19;;21549:366;;;:::o;21921:419::-;22087:4;22125:2;22114:9;22110:18;22102:26;;22174:9;22168:4;22164:20;22160:1;22149:9;22145:17;22138:47;22202:131;22328:4;22202:131;:::i;:::-;22194:139;;21921:419;;;:::o;22346:167::-;22486:19;22482:1;22474:6;22470:14;22463:43;22346:167;:::o;22519:366::-;22661:3;22682:67;22746:2;22741:3;22682:67;:::i;:::-;22675:74;;22758:93;22847:3;22758:93;:::i;:::-;22876:2;22871:3;22867:12;22860:19;;22519:366;;;:::o;22891:419::-;23057:4;23095:2;23084:9;23080:18;23072:26;;23144:9;23138:4;23134:20;23130:1;23119:9;23115:17;23108:47;23172:131;23298:4;23172:131;:::i;:::-;23164:139;;22891:419;;;:::o;23316:410::-;23356:7;23379:20;23397:1;23379:20;:::i;:::-;23374:25;;23413:20;23431:1;23413:20;:::i;:::-;23408:25;;23468:1;23465;23461:9;23490:30;23508:11;23490:30;:::i;:::-;23479:41;;23669:1;23660:7;23656:15;23653:1;23650:22;23630:1;23623:9;23603:83;23580:139;;23699:18;;:::i;:::-;23580:139;23364:362;23316:410;;;;:::o;23732:191::-;23772:3;23791:20;23809:1;23791:20;:::i;:::-;23786:25;;23825:20;23843:1;23825:20;:::i;:::-;23820:25;;23868:1;23865;23861:9;23854:16;;23889:3;23886:1;23883:10;23880:36;;;23896:18;;:::i;:::-;23880:36;23732:191;;;;:::o;23929:143::-;23986:5;24017:6;24011:13;24002:22;;24033:33;24060:5;24033:33;:::i;:::-;23929:143;;;;:::o;24078:351::-;24148:6;24197:2;24185:9;24176:7;24172:23;24168:32;24165:119;;;24203:79;;:::i;:::-;24165:119;24323:1;24348:64;24404:7;24395:6;24384:9;24380:22;24348:64;:::i;:::-;24338:74;;24294:128;24078:351;;;;:::o;24435:171::-;24575:23;24571:1;24563:6;24559:14;24552:47;24435:171;:::o;24612:366::-;24754:3;24775:67;24839:2;24834:3;24775:67;:::i;:::-;24768:74;;24851:93;24940:3;24851:93;:::i;:::-;24969:2;24964:3;24960:12;24953:19;;24612:366;;;:::o;24984:419::-;25150:4;25188:2;25177:9;25173:18;25165:26;;25237:9;25231:4;25227:20;25223:1;25212:9;25208:17;25201:47;25265:131;25391:4;25265:131;:::i;:::-;25257:139;;24984:419;;;:::o;25409:194::-;25449:4;25469:20;25487:1;25469:20;:::i;:::-;25464:25;;25503:20;25521:1;25503:20;:::i;:::-;25498:25;;25547:1;25544;25540:9;25532:17;;25571:1;25565:4;25562:11;25559:37;;;25576:18;;:::i;:::-;25559:37;25409:194;;;;:::o;25609:173::-;25749:25;25745:1;25737:6;25733:14;25726:49;25609:173;:::o;25788:366::-;25930:3;25951:67;26015:2;26010:3;25951:67;:::i;:::-;25944:74;;26027:93;26116:3;26027:93;:::i;:::-;26145:2;26140:3;26136:12;26129:19;;25788:366;;;:::o;26160:419::-;26326:4;26364:2;26353:9;26349:18;26341:26;;26413:9;26407:4;26403:20;26399:1;26388:9;26384:17;26377:47;26441:131;26567:4;26441:131;:::i;:::-;26433:139;;26160:419;;;:::o;26585:442::-;26734:4;26772:2;26761:9;26757:18;26749:26;;26785:71;26853:1;26842:9;26838:17;26829:6;26785:71;:::i;:::-;26866:72;26934:2;26923:9;26919:18;26910:6;26866:72;:::i;:::-;26948;27016:2;27005:9;27001:18;26992:6;26948:72;:::i;:::-;26585:442;;;;;;:::o;27033:181::-;27173:33;27169:1;27161:6;27157:14;27150:57;27033:181;:::o;27220:366::-;27362:3;27383:67;27447:2;27442:3;27383:67;:::i;:::-;27376:74;;27459:93;27548:3;27459:93;:::i;:::-;27577:2;27572:3;27568:12;27561:19;;27220:366;;;:::o;27592:419::-;27758:4;27796:2;27785:9;27781:18;27773:26;;27845:9;27839:4;27835:20;27831:1;27820:9;27816:17;27809:47;27873:131;27999:4;27873:131;:::i;:::-;27865:139;;27592:419;;;:::o;28017:332::-;28138:4;28176:2;28165:9;28161:18;28153:26;;28189:71;28257:1;28246:9;28242:17;28233:6;28189:71;:::i;:::-;28270:72;28338:2;28327:9;28323:18;28314:6;28270:72;:::i;:::-;28017:332;;;;;:::o;28355:::-;28476:4;28514:2;28503:9;28499:18;28491:26;;28527:71;28595:1;28584:9;28580:17;28571:6;28527:71;:::i;:::-;28608:72;28676:2;28665:9;28661:18;28652:6;28608:72;:::i;:::-;28355:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1989600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "348",
								"DEFAULT_ADMIN_ROLE()": "352",
								"apiIdCounter()": "2471",
								"apis(uint256)": "infinite",
								"approveAndPurchaseAPIAccess(uint256,uint256)": "infinite",
								"approveAndPurchaseSubscription(uint256)": "infinite",
								"cancelSubscription(uint256)": "28703",
								"getRoleAdmin(bytes32)": "infinite",
								"getUserBalance(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"owner()": "2553",
								"providerBalances(address)": "2914",
								"registerAPI(string,uint256,uint256,uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"token()": "infinite",
								"useAPIAccess(uint256)": "infinite",
								"withdrawEarnings()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2578,
									"end": 2834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2650,
									"end": 2651,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2623,
									"end": 2652,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2623,
									"end": 2652,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2631,
									"end": 2637,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2623,
									"end": 2652,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2623,
									"end": 2652,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2623,
									"end": 2652,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2615,
									"end": 2678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2615,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2702,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2688,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2720,
									"end": 2730,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2717,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2712,
									"end": 2717,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2752,
									"end": 2770,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2741,
									"end": 2751,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2741,
									"end": 2751,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2741,
									"end": 2783,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 842,
									"end": 865,
									"name": "PUSH",
									"source": 11,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2816,
									"end": 2826,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2793,
									"end": 2803,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2793,
									"end": 2803,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2827,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2578,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1497,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1526,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1515,
									"end": 1518,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1527,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1560,
									"end": 1564,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1555,
									"end": 1558,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1551,
									"end": 1565,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1565,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1740,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1711,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1715,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1694,
									"end": 1741,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1899,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1981,
									"end": 1983,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1976,
									"end": 1979,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1917,
									"end": 1984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1917,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1910,
									"end": 1984,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1910,
									"end": 1984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2082,
									"end": 2085,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1993,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1993,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2113,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2106,
									"end": 2109,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2095,
									"end": 2114,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2095,
									"end": 2114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 2120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2296,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2330,
									"end": 2332,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2319,
									"end": 2328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2333,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2379,
									"end": 2388,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2373,
									"end": 2377,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2369,
									"end": 2389,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2354,
									"end": 2363,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2350,
									"end": 2367,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2533,
									"end": 2537,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2407,
									"end": 2538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2407,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2538,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2538,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2545,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1104"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 6565,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbff78643e8436719283411da639dc30db1d2e1128b46f1f6d25a1772ac9ae2864736f6c634300081a0033",
									".code": [
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "75B238FC"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "AF6E5689"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "B73C6CE9"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "75B238FC"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "8E04D8D8"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "9C4D9C0C"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "29206BD1"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "29206BD1"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "2A222851"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "47734892"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "99952C8"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "21235083"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "28AC7F2C"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 503,
											"end": 6565,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 899,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 899,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 6038,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 6038,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 970,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 970,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 970,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3101,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3101,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4013,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4013,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 6446,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 6446,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 6446,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 805,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 805,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 731,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 731,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5271,
											"end": 5712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5271,
											"end": 5712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4681,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4681,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5718,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 926,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 899,
											"end": 926,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 899,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6130,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 6101,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 6101,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6194,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6205,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6206,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6225,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6184,
											"end": 6225,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6233,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6251,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 6163,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6163,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6362,
											"end": 6377,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6320,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6331,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6351,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6310,
											"end": 6351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6359,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6377,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6310,
											"end": 6377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6414,
											"end": 6424,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "PUSH",
											"source": 11,
											"value": "6AA12C0AD65927B4A753D119C26E490D3C4A4E11CB631B43131A709DC1E5917"
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6433,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3316,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3285,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3285,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3396,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3422,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3355,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3355,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3508,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3511,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3525,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3587,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3767,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3539,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3535,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3899,
											"end": 3909,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH",
											"source": 11,
											"value": "AEB4FDD5A376011A12E318BF03DE0006C5C806196FB1D14F787BE471267CB8DC"
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 3958,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3853,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4000,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 4007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4117,
											"end": 4129,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4117,
											"end": 4129,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4129,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4100,
											"end": 4152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4100,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4179,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 4158,
											"end": 4218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4158,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4225,
											"end": 4240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4225,
											"end": 4255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4225,
											"end": 4255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4261,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 4261,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4349,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 4330,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4330,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4424,
											"end": 4434,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4444,
											"end": 4448,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4406,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4401,
											"end": 4423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 4401,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4478,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4489,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4508,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4515,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4468,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4569,
											"end": 4578,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4555,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4535,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4585,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4656,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "651496919C95942A8A70DB2E93544280A0491B14565245385A8026DCB32E923B"
										},
										{
											"begin": 4666,
											"end": 4675,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4627,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4676,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4094,
											"end": 4679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4094,
											"end": 4679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4013,
											"end": 4679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6539,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 6534,
											"end": 6549,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6549,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6549,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 6550,
											"end": 6555,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 6534,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6534,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 842,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 805,
											"end": 865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 805,
											"end": 865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 731,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5341,
											"end": 5353,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5353,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5324,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5324,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5405,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5413,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5419,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5419,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5498,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5509,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5528,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5542,
											"end": 5589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5542,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5617,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5643,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5596,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 5691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5673,
											"end": 5683,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "CCA1381D7195CD2569F7FC5EA523BE6BBEC35A1421AB82B215B1651F7B22157E"
										},
										{
											"begin": 5693,
											"end": 5708,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5661,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5661,
											"end": 5709,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 5318,
											"end": 5712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5318,
											"end": 5712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5271,
											"end": 5712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4781,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4752,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 4752,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4833,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4841,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4855,
											"end": 4867,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4847,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4847,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4916,
											"end": 4937,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4916,
											"end": 4937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4916,
											"end": 4937,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5000,
											"end": 5010,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 4977,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5138,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5138,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5138,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5111,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5096,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5096,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5085,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5044,
											"end": 5085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5093,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5138,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5138,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5160,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5164,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5144,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5239,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "6D458FA94CC5B30D7877BED127C2029F98BC0CBC4634DC7789B6BC804FBDAE03"
										},
										{
											"begin": 5241,
											"end": 5244,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5265,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5241,
											"end": 5265,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5265,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5199,
											"end": 5266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5266,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 5269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5718,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5823,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5796,
											"end": 5824,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5778,
											"end": 5824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5778,
											"end": 5824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5842,
											"end": 5853,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 5834,
											"end": 5881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5834,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5923,
											"end": 5924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5919,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5920,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5924,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5892,
											"end": 5924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 5953,
											"end": 5963,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 5972,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5939,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 5934,
											"end": 5952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 5934,
											"end": 5952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 5934,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6005,
											"end": 6015,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
										},
										{
											"begin": 6017,
											"end": 6024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5989,
											"end": 6025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5989,
											"end": 6025,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 6032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 673,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1104"
										},
										{
											"begin": 644,
											"end": 673,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 644,
											"end": 673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2026,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2181,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2717,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2872,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3031,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3176,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3122,
											"end": 3239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3339,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3520,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3723,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3674,
											"end": 3679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3670,
											"end": 3724,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3773,
											"end": 3780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3802,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3826,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 3911,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3936,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3940,
											"end": 3952,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4057,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 4066,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4205,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4217,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4222,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4306,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 4187,
											"end": 4306,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 4225,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4225,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4304,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 4225,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4306,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 4187,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4391,
											"end": 4413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 4370,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4563,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 4446,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4686,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4569,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4668,
											"end": 4680,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4794,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4692,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4780,
											"end": 4787,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4775,
											"end": 4777,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4768,
											"end": 4773,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4764,
											"end": 4778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4760,
											"end": 4788,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4794,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4980,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4800,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4848,
											"end": 4925,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4926,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4949,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4942,
											"end": 4943,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 4950,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4974,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5267,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4986,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 5091,
											"end": 5095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5069,
											"end": 5096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5187,
											"end": 5197,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5206,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5151,
											"end": 5161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5148,
											"end": 5182,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5145,
											"end": 5207,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 5210,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 5142,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5239,
											"end": 5261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4986,
											"end": 5267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5402,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5273,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 5334,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 5363,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5716,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 5408,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5578,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5549,
											"end": 5579,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5602,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 5546,
											"end": 5602,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 5582,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5602,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 5546,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5620,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5612,
											"end": 5649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 5709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 5709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5716,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5870,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5722,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5827,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 5861,
											"end": 5862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5847,
											"end": 5850,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5836,
											"end": 5863,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 5995,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 6037,
											"end": 6043,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 5995,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5995,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 5995,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 5979,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6045,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 5979,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6061,
											"end": 6066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6106,
											"end": 6110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6141,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6130,
											"end": 6133,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6123,
											"end": 6148,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6120,
											"end": 6232,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6120,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 6120,
											"end": 6232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 6151,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6151,
											"end": 6230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6230,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 6151,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6120,
											"end": 6232,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 6120,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6283,
											"end": 6286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6281,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6241,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6295,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 6241,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 6301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5876,
											"end": 6301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6407,
											"end": 6424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6403,
											"end": 6430,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6393,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6393,
											"end": 6515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 6434,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6434,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6513,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 6434,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6393,
											"end": 6515,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6393,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6551,
											"end": 6557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6651,
											"end": 6654,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6636,
											"end": 6640,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6634,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6641,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6576,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6576,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6655,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6321,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6777,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6779,
											"end": 6785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6807,
											"end": 6840,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6924,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6804,
											"end": 6924,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6843,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6843,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 6843,
											"end": 6922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6843,
											"end": 6922,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 6843,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6924,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 6804,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6991,
											"end": 6992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6980,
											"end": 6989,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6963,
											"end": 6994,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7013,
											"end": 7019,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7010,
											"end": 7040,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 7007,
											"end": 7124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 7043,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7124,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 7007,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7148,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 7203,
											"end": 7210,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7194,
											"end": 7200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7183,
											"end": 7192,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7179,
											"end": 7201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7148,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 7148,
											"end": 7211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7148,
											"end": 7211,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 7148,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7211,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 7221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 7331,
											"end": 7338,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7311,
											"end": 7320,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7307,
											"end": 7329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7286,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7339,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 7286,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7339,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7276,
											"end": 7339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7414,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 7459,
											"end": 7466,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 7457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7414,
											"end": 7467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7467,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 7414,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7359,
											"end": 7477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7542,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 7587,
											"end": 7594,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7578,
											"end": 7584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7576,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7542,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7595,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 7542,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7487,
											"end": 7605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 7612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7731,
											"end": 7740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7729,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7718,
											"end": 7741,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7714,
											"end": 7746,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7830,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7711,
											"end": 7830,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7749,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7749,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 7749,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7749,
											"end": 7828,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 7749,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7830,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 7711,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7939,
											"end": 7946,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7930,
											"end": 7936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7928,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7894,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7947,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 7894,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7840,
											"end": 7957,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8022,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 8067,
											"end": 8074,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8056,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8065,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8022,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 8022,
											"end": 8075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8022,
											"end": 8075,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 8022,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8012,
											"end": 8075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8012,
											"end": 8075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 8092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8211,
											"end": 8220,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8209,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8198,
											"end": 8221,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8194,
											"end": 8226,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8310,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 8191,
											"end": 8310,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8229,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 8229,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8229,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8229,
											"end": 8308,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 8229,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8310,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 8191,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8410,
											"end": 8416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8395,
											"end": 8417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8374,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8427,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8320,
											"end": 8437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8476,
											"end": 8478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8502,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 8547,
											"end": 8554,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8502,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 8502,
											"end": 8555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8502,
											"end": 8555,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 8502,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8492,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8447,
											"end": 8565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8696,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8578,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 8683,
											"end": 8688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 8665,
											"end": 8689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8689,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 8665,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8660,
											"end": 8663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8903,
											"end": 8912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8899,
											"end": 8916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8846,
											"end": 8917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8702,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 9029,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8930,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9022,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 9029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 9029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 9029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 9029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9193,
											"end": 9197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9349,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9210,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9294,
											"end": 9297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9306,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9322,
											"end": 9338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9315,
											"end": 9342,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 9504,
											"end": 9509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9471,
											"end": 9510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9510,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 9471,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 9590,
											"end": 9596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9585,
											"end": 9588,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9526,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9597,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 9526,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9597,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9656,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 9650,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9606,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9671,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9606,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 9718,
											"end": 9724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9696,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9725,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 9696,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9694,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9680,
											"end": 9726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9680,
											"end": 9726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9447,
											"end": 9732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10065,
											"end": 10136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10183,
											"end": 10192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10177,
											"end": 10181,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10168,
											"end": 10170,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10194,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 10284,
											"end": 10288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 10211,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10289,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 10211,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10203,
											"end": 10289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10203,
											"end": 10289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 10367,
											"end": 10369,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10356,
											"end": 10365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10352,
											"end": 10370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 10299,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10371,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 10299,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 10449,
											"end": 10451,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10438,
											"end": 10447,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10434,
											"end": 10452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10425,
											"end": 10431,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 10381,
											"end": 10453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10381,
											"end": 10453,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 10381,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 10531,
											"end": 10534,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10520,
											"end": 10529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10513,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 10463,
											"end": 10536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10536,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 10463,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10546,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 10614,
											"end": 10617,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10603,
											"end": 10612,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10590,
											"end": 10596,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10546,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 10546,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10546,
											"end": 10619,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 10546,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10629,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 10680,
											"end": 10689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10676,
											"end": 10695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10673,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10629,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 10629,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10629,
											"end": 10696,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 10629,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 10703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10769,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 10709,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10737,
											"end": 10740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10769,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10917,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 10775,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10825,
											"end": 10834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 10876,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 10903,
											"end": 10908,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10885,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10876,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 10876,
											"end": 10910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10876,
											"end": 10910,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 10876,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10858,
											"end": 10911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 10911,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 10858,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10845,
											"end": 10911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10845,
											"end": 10911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 11049,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 10923,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 10982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 11037,
											"end": 11042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11006,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11006,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11006,
											"end": 11043,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 11006,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 11049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 11049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 11049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 11049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11195,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11055,
											"end": 11195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11119,
											"end": 11128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 11183,
											"end": 11188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 11152,
											"end": 11189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11189,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 11152,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11360,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11201,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11302,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11302,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11302,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11302,
											"end": 11353,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 11302,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11290,
											"end": 11354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11473,
											"end": 11477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11513,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11524,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 11606,
											"end": 11607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11595,
											"end": 11604,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11582,
											"end": 11588,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11524,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11524,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11524,
											"end": 11609,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 11524,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11622,
											"end": 11790,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11622,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11782,
											"name": "PUSH",
											"source": 12,
											"value": "41504920646F6573206E6F742065786973740000000000000000000000000000"
										},
										{
											"begin": 11758,
											"end": 11759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11756,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11746,
											"end": 11760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11739,
											"end": 11783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11622,
											"end": 11790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11622,
											"end": 11790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12018,
											"end": 12021,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 11959,
											"end": 12026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12035,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12148,
											"end": 12151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12144,
											"end": 12156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11796,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12431,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12385,
											"end": 12432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12449,
											"end": 12580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12765,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 12593,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12733,
											"end": 12757,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F2061637469766520737562736372697074696F6E00000000000000000000"
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12717,
											"end": 12731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12710,
											"end": 12758,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12593,
											"end": 12765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 13137,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12771,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 12998,
											"end": 13000,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 12993,
											"end": 12996,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12934,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 12934,
											"end": 13001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12934,
											"end": 13001,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 12934,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12927,
											"end": 13001,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12927,
											"end": 13001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 13010,
											"end": 13103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13103,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 13010,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13128,
											"end": 13130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13112,
											"end": 13131,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13112,
											"end": 13131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 13137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 13137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 13137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 13137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13562,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 13143,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13309,
											"end": 13313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13349,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13332,
											"end": 13350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13324,
											"end": 13350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13396,
											"end": 13405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13390,
											"end": 13394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13406,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13382,
											"end": 13383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13360,
											"end": 13407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 13550,
											"end": 13554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 13424,
											"end": 13555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13555,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 13424,
											"end": 13555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13742,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 13568,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13708,
											"end": 13734,
											"name": "PUSH",
											"source": 12,
											"value": "415049206E616D652063616E6E6F7420626520656D7074790000000000000000"
										},
										{
											"begin": 13704,
											"end": 13705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13692,
											"end": 13706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13685,
											"end": 13735,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13568,
											"end": 13742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 14114,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 13748,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 13893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13911,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 13975,
											"end": 13977,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13970,
											"end": 13973,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 13911,
											"end": 13978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13978,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 13911,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13904,
											"end": 13978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13904,
											"end": 13978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13987,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13987,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 13987,
											"end": 14080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13987,
											"end": 14080,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 13987,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14100,
											"end": 14103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 14114,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 14114,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 14114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 14114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14539,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 14120,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14286,
											"end": 14290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14301,
											"end": 14327,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14301,
											"end": 14327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14373,
											"end": 14382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14383,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14348,
											"end": 14357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 14527,
											"end": 14531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 14401,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14532,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 14401,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14393,
											"end": 14532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14393,
											"end": 14532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14539,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14539,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14120,
											"end": 14539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14545,
											"end": 14768,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 14545,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14685,
											"end": 14719,
											"name": "PUSH",
											"source": 12,
											"value": "4174206C65617374206F6E652070726963696E67206F7074696F6E2072657175"
										},
										{
											"begin": 14681,
											"end": 14682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14669,
											"end": 14683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14662,
											"end": 14720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14754,
											"end": 14760,
											"name": "PUSH",
											"source": 12,
											"value": "6972656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14749,
											"end": 14751,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14741,
											"end": 14747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14737,
											"end": 14752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14730,
											"end": 14761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14545,
											"end": 14768,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14545,
											"end": 14768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 15140,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 14774,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14916,
											"end": 14919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14937,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 15001,
											"end": 15003,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14996,
											"end": 14999,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 14937,
											"end": 15004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 15004,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 14937,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 15004,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 15004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15013,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 15102,
											"end": 15105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15013,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 15013,
											"end": 15106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15013,
											"end": 15106,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 15013,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15131,
											"end": 15133,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15126,
											"end": 15129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15115,
											"end": 15134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 15140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 15140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 15140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 15140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15565,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 15146,
											"end": 15565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15350,
											"end": 15352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15335,
											"end": 15353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15327,
											"end": 15353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15327,
											"end": 15353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15389,
											"end": 15409,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15385,
											"end": 15386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15374,
											"end": 15383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15370,
											"end": 15387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15363,
											"end": 15410,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15427,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 15553,
											"end": 15557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15427,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 15427,
											"end": 15558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15427,
											"end": 15558,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 15427,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15419,
											"end": 15558,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15419,
											"end": 15558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15571,
											"end": 15751,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 15571,
											"end": 15751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15619,
											"end": 15696,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15616,
											"end": 15617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15609,
											"end": 15697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15716,
											"end": 15720,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15713,
											"end": 15714,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15706,
											"end": 15721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15737,
											"end": 15738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15730,
											"end": 15745,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15757,
											"end": 15990,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 15757,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15796,
											"end": 15799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 15837,
											"end": 15842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 15843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 15819,
											"end": 15843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 15843,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 15819,
											"end": 15843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15810,
											"end": 15843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15810,
											"end": 15843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15865,
											"end": 15931,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15858,
											"end": 15863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15852,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15852,
											"end": 15955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 15935,
											"end": 15953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15852,
											"end": 15955,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15852,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15975,
											"end": 15980,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15971,
											"end": 15984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15964,
											"end": 15984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15964,
											"end": 15984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15757,
											"end": 15990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15757,
											"end": 15990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15757,
											"end": 15990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15757,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16176,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 15996,
											"end": 16176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16044,
											"end": 16121,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16041,
											"end": 16042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16141,
											"end": 16145,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 16138,
											"end": 16139,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16131,
											"end": 16146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16165,
											"end": 16169,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16162,
											"end": 16163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16155,
											"end": 16170,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16182,
											"end": 16502,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 16182,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16226,
											"end": 16232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16264,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 16257,
											"end": 16261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16253,
											"end": 16265,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16243,
											"end": 16265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16243,
											"end": 16265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16311,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16304,
											"end": 16308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16300,
											"end": 16312,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16331,
											"end": 16349,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16321,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 16321,
											"end": 16402,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16387,
											"end": 16391,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 16379,
											"end": 16385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16375,
											"end": 16392,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16365,
											"end": 16392,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16365,
											"end": 16392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16321,
											"end": 16402,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 16321,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16449,
											"end": 16451,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16441,
											"end": 16447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16438,
											"end": 16452,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16415,
											"end": 16453,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16412,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 16412,
											"end": 16496,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16468,
											"end": 16486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16412,
											"end": 16496,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 16412,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16233,
											"end": 16502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16182,
											"end": 16502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16182,
											"end": 16502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16182,
											"end": 16502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16182,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16649,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 16508,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16557,
											"end": 16561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16572,
											"end": 16583,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16572,
											"end": 16583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16603,
											"end": 16606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16600,
											"end": 16601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16593,
											"end": 16607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 16641,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16634,
											"end": 16635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16616,
											"end": 16642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16616,
											"end": 16642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16508,
											"end": 16649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16739,
											"end": 16741,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16734,
											"end": 16736,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 16727,
											"end": 16732,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16723,
											"end": 16737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16719,
											"end": 16742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 16742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16798,
											"end": 16806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16848,
											"end": 16853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16842,
											"end": 16846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16838,
											"end": 16854,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 16817,
											"end": 16854,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16817,
											"end": 16854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16754,
											"end": 16861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 16942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 16987,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 16974,
											"end": 16984,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16970,
											"end": 16988,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17009,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 17039,
											"end": 17105,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17028,
											"end": 17037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17009,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 17009,
											"end": 17106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17009,
											"end": 17106,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 17009,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 17157,
											"end": 17165,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17146,
											"end": 17155,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 17127,
											"end": 17166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17127,
											"end": 17166,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 17127,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17115,
											"end": 17166,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17115,
											"end": 17166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17199,
											"end": 17203,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17195,
											"end": 17204,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17188,
											"end": 17193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17205,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17175,
											"end": 17205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17248,
											"end": 17252,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17238,
											"end": 17246,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17234,
											"end": 17253,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17227,
											"end": 17232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17254,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16943,
											"end": 17260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16943,
											"end": 17260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 17260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17266,
											"end": 17408,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 17266,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17316,
											"end": 17325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17349,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 17376,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17394,
											"end": 17399,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17376,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 17376,
											"end": 17400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17376,
											"end": 17400,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17376,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 17367,
											"end": 17401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17349,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 17349,
											"end": 17402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17349,
											"end": 17402,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 17349,
											"end": 17402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17336,
											"end": 17402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17336,
											"end": 17402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17266,
											"end": 17408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17266,
											"end": 17408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17266,
											"end": 17408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17266,
											"end": 17408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17414,
											"end": 17489,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 17414,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17478,
											"end": 17483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17471,
											"end": 17483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17471,
											"end": 17483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17414,
											"end": 17489,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17414,
											"end": 17489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17414,
											"end": 17489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17414,
											"end": 17489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17764,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 17495,
											"end": 17764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 17636,
											"end": 17643,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 17605,
											"end": 17644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17644,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 17605,
											"end": 17644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 17715,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 17739,
											"end": 17755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17715,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 17715,
											"end": 17756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17715,
											"end": 17756,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 17715,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17707,
											"end": 17713,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17700,
											"end": 17704,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17694,
											"end": 17705,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 17666,
											"end": 17757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 17757,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 17666,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17660,
											"end": 17664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 17758,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 17571,
											"end": 17764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17843,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 17770,
											"end": 17843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17815,
											"end": 17818,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17770,
											"end": 17843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17849,
											"end": 18038,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 17849,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17926,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 17926,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 17926,
											"end": 17958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17926,
											"end": 17958,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 17926,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 18032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 18025,
											"end": 18031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18017,
											"end": 18023,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18011,
											"end": 18015,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 18032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 17967,
											"end": 18032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 18032,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 17967,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17902,
											"end": 18038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17849,
											"end": 18038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17849,
											"end": 18038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17849,
											"end": 18038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18230,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 18044,
											"end": 18230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18121,
											"end": 18124,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18119,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18111,
											"end": 18125,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18175,
											"end": 18214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 18212,
											"end": 18213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18175,
											"end": 18214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 18175,
											"end": 18214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18175,
											"end": 18214,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 18175,
											"end": 18214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18148,
											"end": 18149,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18141,
											"end": 18146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18137,
											"end": 18150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18128,
											"end": 18150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18128,
											"end": 18150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 18104,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18779,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 18236,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18337,
											"end": 18339,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18332,
											"end": 18335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18329,
											"end": 18340,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18326,
											"end": 18772,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18326,
											"end": 18772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 18326,
											"end": 18772,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18371,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 18403,
											"end": 18408,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18371,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 18371,
											"end": 18409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18371,
											"end": 18409,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 18371,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 18473,
											"end": 18483,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 18455,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18484,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 18455,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18445,
											"end": 18453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18441,
											"end": 18485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18638,
											"end": 18640,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18626,
											"end": 18636,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18623,
											"end": 18641,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18620,
											"end": 18669,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18620,
											"end": 18669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 18620,
											"end": 18669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18659,
											"end": 18667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18644,
											"end": 18667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18644,
											"end": 18667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18620,
											"end": 18669,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 18620,
											"end": 18669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18738,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18756,
											"end": 18759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18738,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 18738,
											"end": 18760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18738,
											"end": 18760,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18738,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18728,
											"end": 18736,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18724,
											"end": 18761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18711,
											"end": 18722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 18682,
											"end": 18762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18762,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18682,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18341,
											"end": 18772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18341,
											"end": 18772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18326,
											"end": 18772,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 18326,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18236,
											"end": 18779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18839,
											"end": 18847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18889,
											"end": 18894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18883,
											"end": 18887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18879,
											"end": 18895,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 18858,
											"end": 18895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18858,
											"end": 18895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18785,
											"end": 18902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18952,
											"end": 18958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18985,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19033,
											"end": 19034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19029,
											"end": 19035,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 19021,
											"end": 19026,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19018,
											"end": 19019,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 19014,
											"end": 19027,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 18985,
											"end": 19036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18985,
											"end": 19036,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 18985,
											"end": 19036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18981,
											"end": 19037,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 19066,
											"end": 19070,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19060,
											"end": 19064,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19056,
											"end": 19071,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19046,
											"end": 19071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19046,
											"end": 19071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18959,
											"end": 19077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 19077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 19329,
											"end": 19332,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19323,
											"end": 19327,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 19304,
											"end": 19333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19296,
											"end": 19333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19296,
											"end": 19333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19366,
											"end": 19369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19363,
											"end": 19364,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 19359,
											"end": 19370,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19353,
											"end": 19357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19350,
											"end": 19371,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 20777,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 19382,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 19532,
											"end": 19535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 19499,
											"end": 19536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19593,
											"end": 19599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19590,
											"end": 19620,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19587,
											"end": 19643,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19587,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 19587,
											"end": 19643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19623,
											"end": 19641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19623,
											"end": 19641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 19623,
											"end": 19641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19623,
											"end": 19641,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19623,
											"end": 19641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19587,
											"end": 19643,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 19587,
											"end": 19643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19667,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19699,
											"end": 19703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19693,
											"end": 19704,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19667,
											"end": 19705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 19667,
											"end": 19705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19667,
											"end": 19705,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19667,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 19812,
											"end": 19818,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19804,
											"end": 19810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19798,
											"end": 19802,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 19752,
											"end": 19819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19846,
											"end": 19847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19870,
											"end": 19874,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19857,
											"end": 19874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19857,
											"end": 19874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19902,
											"end": 19904,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19894,
											"end": 19900,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19891,
											"end": 19905,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 19920,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20576,
											"end": 20577,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20593,
											"end": 20599,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 20590,
											"end": 20667,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20637,
											"end": 20640,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20633,
											"end": 20652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20627,
											"end": 20653,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20618,
											"end": 20653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20618,
											"end": 20653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20667,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 20590,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 20753,
											"end": 20759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20746,
											"end": 20751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 20693,
											"end": 20760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20760,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 20693,
											"end": 20760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20687,
											"end": 20691,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20761,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 20549,
											"end": 20771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19884,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 19884,
											"end": 20771,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19914,
											"end": 20532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19962,
											"end": 19971,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 19972,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20000,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 20032,
											"end": 20036,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20000,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 20000,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20000,
											"end": 20037,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 20000,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20087,
											"end": 20094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20084,
											"end": 20085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20081,
											"end": 20095,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20166,
											"end": 20175,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20161,
											"end": 20164,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 20157,
											"end": 20176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20151,
											"end": 20177,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20143,
											"end": 20149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20136,
											"end": 20178,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 20217,
											"end": 20218,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20209,
											"end": 20215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20205,
											"end": 20219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20264,
											"end": 20266,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20253,
											"end": 20262,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20249,
											"end": 20267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20236,
											"end": 20267,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20236,
											"end": 20267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20110,
											"end": 20114,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20107,
											"end": 20108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20103,
											"end": 20115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20098,
											"end": 20115,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20098,
											"end": 20115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 20073,
											"end": 20281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20309,
											"end": 20315,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20300,
											"end": 20307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20297,
											"end": 20316,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20294,
											"end": 20473,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20294,
											"end": 20473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 20294,
											"end": 20473,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20367,
											"end": 20376,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20362,
											"end": 20365,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 20358,
											"end": 20377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20352,
											"end": 20378,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20410,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 20452,
											"end": 20456,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 20444,
											"end": 20450,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 20440,
											"end": 20457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20429,
											"end": 20438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20410,
											"end": 20458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 20410,
											"end": 20458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20410,
											"end": 20458,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 20410,
											"end": 20458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20402,
											"end": 20408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20395,
											"end": 20459,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 20317,
											"end": 20473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20294,
											"end": 20473,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 20294,
											"end": 20473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20519,
											"end": 20520,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20515,
											"end": 20516,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 20507,
											"end": 20513,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20503,
											"end": 20517,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 20499,
											"end": 20521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20493,
											"end": 20497,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20486,
											"end": 20522,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 20532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 20532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 20532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19884,
											"end": 20771,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 19884,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19884,
											"end": 20771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19474,
											"end": 20777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19474,
											"end": 20777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19474,
											"end": 20777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 20777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 20777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 20777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20952,
											"end": 20956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20990,
											"end": 20992,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20979,
											"end": 20988,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20975,
											"end": 20993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20967,
											"end": 20993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20967,
											"end": 20993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21039,
											"end": 21048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21033,
											"end": 21037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21029,
											"end": 21049,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21025,
											"end": 21026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21014,
											"end": 21023,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21010,
											"end": 21027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21003,
											"end": 21050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21067,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 21140,
											"end": 21144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21131,
											"end": 21137,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21067,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 21067,
											"end": 21145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21067,
											"end": 21145,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 21067,
											"end": 21145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21145,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21155,
											"end": 21227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 21223,
											"end": 21225,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21221,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21208,
											"end": 21226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21199,
											"end": 21205,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21155,
											"end": 21227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 21155,
											"end": 21227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21155,
											"end": 21227,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 21155,
											"end": 21227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21237,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 21305,
											"end": 21307,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21294,
											"end": 21303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21290,
											"end": 21308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21281,
											"end": 21287,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21237,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 21237,
											"end": 21309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21237,
											"end": 21309,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 21237,
											"end": 21309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20783,
											"end": 21316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21543,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 21322,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21496,
											"name": "PUSH",
											"source": 12,
											"value": "4D757374207075726368617365206174206C65617374206F6E65207265717565"
										},
										{
											"begin": 21458,
											"end": 21459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21450,
											"end": 21456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21446,
											"end": 21460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21439,
											"end": 21497,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21535,
											"name": "PUSH",
											"source": 12,
											"value": "7374000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21526,
											"end": 21528,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21518,
											"end": 21524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21514,
											"end": 21529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21507,
											"end": 21536,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21915,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 21549,
											"end": 21915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21691,
											"end": 21694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21712,
											"end": 21779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 21776,
											"end": 21778,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 21771,
											"end": 21774,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21712,
											"end": 21779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 21712,
											"end": 21779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21712,
											"end": 21779,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 21712,
											"end": 21779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21705,
											"end": 21779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21705,
											"end": 21779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 21881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 21877,
											"end": 21880,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 21881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 21788,
											"end": 21881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 21881,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 21788,
											"end": 21881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21906,
											"end": 21908,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21901,
											"end": 21904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21890,
											"end": 21909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21890,
											"end": 21909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 22340,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 21921,
											"end": 22340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22087,
											"end": 22091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22125,
											"end": 22127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22114,
											"end": 22123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22110,
											"end": 22128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22102,
											"end": 22128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22102,
											"end": 22128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22174,
											"end": 22183,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22168,
											"end": 22172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22164,
											"end": 22184,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22160,
											"end": 22161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22149,
											"end": 22158,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22138,
											"end": 22185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22202,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 22328,
											"end": 22332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22202,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 22202,
											"end": 22333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22202,
											"end": 22333,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 22202,
											"end": 22333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 22333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 22333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 22340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 22340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 22340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 22340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22513,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 22346,
											"end": 22513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22486,
											"end": 22505,
											"name": "PUSH",
											"source": 12,
											"value": "415049206973206E6F7420616374697665000000000000000000000000000000"
										},
										{
											"begin": 22482,
											"end": 22483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22474,
											"end": 22480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22470,
											"end": 22484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22463,
											"end": 22506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22346,
											"end": 22513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22885,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 22519,
											"end": 22885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22661,
											"end": 22664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 22746,
											"end": 22748,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 22741,
											"end": 22744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22682,
											"end": 22749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 22682,
											"end": 22749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22682,
											"end": 22749,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 22682,
											"end": 22749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22675,
											"end": 22749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22675,
											"end": 22749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22758,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 22847,
											"end": 22850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22758,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 22758,
											"end": 22851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22758,
											"end": 22851,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 22758,
											"end": 22851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22876,
											"end": 22878,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22871,
											"end": 22874,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22867,
											"end": 22879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22860,
											"end": 22879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22860,
											"end": 22879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22519,
											"end": 22885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 23310,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 22891,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23057,
											"end": 23061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23095,
											"end": 23097,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23084,
											"end": 23093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23080,
											"end": 23098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23072,
											"end": 23098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23072,
											"end": 23098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23144,
											"end": 23153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23138,
											"end": 23142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23134,
											"end": 23154,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23130,
											"end": 23131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23119,
											"end": 23128,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23115,
											"end": 23132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23108,
											"end": 23155,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23172,
											"end": 23303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 23298,
											"end": 23302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23172,
											"end": 23303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 23172,
											"end": 23303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23172,
											"end": 23303,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 23172,
											"end": 23303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23164,
											"end": 23303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23164,
											"end": 23303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 23310,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 23310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 23310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 23310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23356,
											"end": 23363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23379,
											"end": 23399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 23397,
											"end": 23398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23379,
											"end": 23399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23379,
											"end": 23399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23379,
											"end": 23399,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 23379,
											"end": 23399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23374,
											"end": 23399,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23374,
											"end": 23399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23413,
											"end": 23433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 23431,
											"end": 23432,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23413,
											"end": 23433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23413,
											"end": 23433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23413,
											"end": 23433,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 23413,
											"end": 23433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23408,
											"end": 23433,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23408,
											"end": 23433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23468,
											"end": 23469,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23465,
											"end": 23466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23461,
											"end": 23470,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 23490,
											"end": 23520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 23508,
											"end": 23519,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23490,
											"end": 23520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23490,
											"end": 23520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23490,
											"end": 23520,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 23490,
											"end": 23520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23479,
											"end": 23520,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23479,
											"end": 23520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23669,
											"end": 23670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23660,
											"end": 23667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 23653,
											"end": 23654,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23650,
											"end": 23672,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 23630,
											"end": 23631,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23623,
											"end": 23632,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23603,
											"end": 23686,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 23580,
											"end": 23719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 23580,
											"end": 23719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23699,
											"end": 23717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 23699,
											"end": 23717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 23699,
											"end": 23717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23699,
											"end": 23717,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 23699,
											"end": 23717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23580,
											"end": 23719,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 23580,
											"end": 23719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23364,
											"end": 23726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23772,
											"end": 23775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23791,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 23809,
											"end": 23810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23791,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23791,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23791,
											"end": 23811,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 23791,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23786,
											"end": 23811,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23786,
											"end": 23811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23825,
											"end": 23845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 23843,
											"end": 23844,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23825,
											"end": 23845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23825,
											"end": 23845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23825,
											"end": 23845,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 23825,
											"end": 23845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23820,
											"end": 23845,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23820,
											"end": 23845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23868,
											"end": 23869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23865,
											"end": 23866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23861,
											"end": 23870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23889,
											"end": 23892,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23886,
											"end": 23887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23883,
											"end": 23893,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23880,
											"end": 23916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23880,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 23880,
											"end": 23916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23896,
											"end": 23914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 23896,
											"end": 23914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 23896,
											"end": 23914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23896,
											"end": 23914,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 23896,
											"end": 23914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23880,
											"end": 23916,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 23880,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23732,
											"end": 23923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23986,
											"end": 23991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24017,
											"end": 24023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24011,
											"end": 24024,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24002,
											"end": 24024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24002,
											"end": 24024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 24060,
											"end": 24065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 24033,
											"end": 24066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24148,
											"end": 24154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24197,
											"end": 24199,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24185,
											"end": 24194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24176,
											"end": 24183,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24172,
											"end": 24195,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24168,
											"end": 24200,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 24165,
											"end": 24284,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24165,
											"end": 24284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 24165,
											"end": 24284,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24203,
											"end": 24282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 24203,
											"end": 24282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 24203,
											"end": 24282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24203,
											"end": 24282,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 24203,
											"end": 24282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24165,
											"end": 24284,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 24165,
											"end": 24284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24323,
											"end": 24324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24348,
											"end": 24412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 24404,
											"end": 24411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24395,
											"end": 24401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24384,
											"end": 24393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24380,
											"end": 24402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24348,
											"end": 24412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 24348,
											"end": 24412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24348,
											"end": 24412,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 24348,
											"end": 24412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24412,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24294,
											"end": 24422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24435,
											"end": 24606,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 24435,
											"end": 24606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24575,
											"end": 24598,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F2072656D61696E696E672072657175657374730000000000000000000000"
										},
										{
											"begin": 24571,
											"end": 24572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24563,
											"end": 24569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24559,
											"end": 24573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24552,
											"end": 24599,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24435,
											"end": 24606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24435,
											"end": 24606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24612,
											"end": 24978,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 24612,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24754,
											"end": 24757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24775,
											"end": 24842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 24839,
											"end": 24841,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 24834,
											"end": 24837,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24775,
											"end": 24842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 24775,
											"end": 24842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24775,
											"end": 24842,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 24775,
											"end": 24842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24768,
											"end": 24842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24768,
											"end": 24842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24851,
											"end": 24944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 24940,
											"end": 24943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24851,
											"end": 24944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 24851,
											"end": 24944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24851,
											"end": 24944,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 24851,
											"end": 24944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24969,
											"end": 24971,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24964,
											"end": 24967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24960,
											"end": 24972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24953,
											"end": 24972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24953,
											"end": 24972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24612,
											"end": 24978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24612,
											"end": 24978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24612,
											"end": 24978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24612,
											"end": 24978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25403,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 24984,
											"end": 25403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25150,
											"end": 25154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25188,
											"end": 25190,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25177,
											"end": 25186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25165,
											"end": 25191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25165,
											"end": 25191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25237,
											"end": 25246,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25231,
											"end": 25235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25227,
											"end": 25247,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25223,
											"end": 25224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25212,
											"end": 25221,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25208,
											"end": 25225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25201,
											"end": 25248,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25265,
											"end": 25396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 25391,
											"end": 25395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25265,
											"end": 25396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 25265,
											"end": 25396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25265,
											"end": 25396,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 25265,
											"end": 25396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25257,
											"end": 25396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25257,
											"end": 25396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25449,
											"end": 25453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25469,
											"end": 25489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 25487,
											"end": 25488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 25469,
											"end": 25489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25489,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 25469,
											"end": 25489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25464,
											"end": 25489,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25464,
											"end": 25489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25503,
											"end": 25523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 25521,
											"end": 25522,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25503,
											"end": 25523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 25503,
											"end": 25523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25503,
											"end": 25523,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 25503,
											"end": 25523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25498,
											"end": 25523,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25498,
											"end": 25523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25547,
											"end": 25548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25544,
											"end": 25545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25540,
											"end": 25549,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25532,
											"end": 25549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25571,
											"end": 25572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25565,
											"end": 25569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25562,
											"end": 25573,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 25559,
											"end": 25596,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25559,
											"end": 25596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 25559,
											"end": 25596,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25576,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 25576,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 25576,
											"end": 25594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25576,
											"end": 25594,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 25576,
											"end": 25594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25559,
											"end": 25596,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 25559,
											"end": 25596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25409,
											"end": 25603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25609,
											"end": 25782,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 25609,
											"end": 25782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25749,
											"end": 25774,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206561726E696E677320746F207769746864726177000000000000000000"
										},
										{
											"begin": 25745,
											"end": 25746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25737,
											"end": 25743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25733,
											"end": 25747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25726,
											"end": 25775,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25609,
											"end": 25782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25609,
											"end": 25782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25788,
											"end": 26154,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 25788,
											"end": 26154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25930,
											"end": 25933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25951,
											"end": 26018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 26015,
											"end": 26017,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 26010,
											"end": 26013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25951,
											"end": 26018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 25951,
											"end": 26018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25951,
											"end": 26018,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 25951,
											"end": 26018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25944,
											"end": 26018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25944,
											"end": 26018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 26116,
											"end": 26119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 26027,
											"end": 26120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26027,
											"end": 26120,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 26027,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26145,
											"end": 26147,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26140,
											"end": 26143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26136,
											"end": 26148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26129,
											"end": 26148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26129,
											"end": 26148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25788,
											"end": 26154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25788,
											"end": 26154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25788,
											"end": 26154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25788,
											"end": 26154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26160,
											"end": 26579,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 26160,
											"end": 26579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26326,
											"end": 26330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26364,
											"end": 26366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26353,
											"end": 26362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26349,
											"end": 26367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26341,
											"end": 26367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26341,
											"end": 26367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26407,
											"end": 26411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26403,
											"end": 26423,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26399,
											"end": 26400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26388,
											"end": 26397,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26384,
											"end": 26401,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26377,
											"end": 26424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26441,
											"end": 26572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 26567,
											"end": 26571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26441,
											"end": 26572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 26441,
											"end": 26572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26441,
											"end": 26572,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 26441,
											"end": 26572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26433,
											"end": 26572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26433,
											"end": 26572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26160,
											"end": 26579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26160,
											"end": 26579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26160,
											"end": 26579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26160,
											"end": 26579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26734,
											"end": 26738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26772,
											"end": 26774,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 26761,
											"end": 26770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26757,
											"end": 26775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26749,
											"end": 26775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26749,
											"end": 26775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26785,
											"end": 26856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 26853,
											"end": 26854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26842,
											"end": 26851,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26838,
											"end": 26855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26829,
											"end": 26835,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26785,
											"end": 26856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 26785,
											"end": 26856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26785,
											"end": 26856,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 26785,
											"end": 26856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26866,
											"end": 26938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 26934,
											"end": 26936,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26923,
											"end": 26932,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26919,
											"end": 26937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26910,
											"end": 26916,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26866,
											"end": 26938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 26866,
											"end": 26938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26866,
											"end": 26938,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 26866,
											"end": 26938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26948,
											"end": 27020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 27016,
											"end": 27018,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 27005,
											"end": 27014,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26992,
											"end": 26998,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26948,
											"end": 27020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 26948,
											"end": 27020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26948,
											"end": 27020,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 26948,
											"end": 27020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26585,
											"end": 27027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27033,
											"end": 27214,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 27033,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27173,
											"end": 27206,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 27169,
											"end": 27170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27161,
											"end": 27167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27157,
											"end": 27171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27150,
											"end": 27207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27033,
											"end": 27214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27033,
											"end": 27214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27362,
											"end": 27365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 27447,
											"end": 27449,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 27442,
											"end": 27445,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 27383,
											"end": 27450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 27383,
											"end": 27450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 27548,
											"end": 27551,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 27459,
											"end": 27552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 27459,
											"end": 27552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27577,
											"end": 27579,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27568,
											"end": 27580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27561,
											"end": 27580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27561,
											"end": 27580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27220,
											"end": 27586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27758,
											"end": 27762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27796,
											"end": 27798,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27785,
											"end": 27794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27781,
											"end": 27799,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27773,
											"end": 27799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27773,
											"end": 27799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27845,
											"end": 27854,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27839,
											"end": 27843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27835,
											"end": 27855,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27831,
											"end": 27832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27820,
											"end": 27829,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27816,
											"end": 27833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27809,
											"end": 27856,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 27999,
											"end": 28003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 27873,
											"end": 28004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 27873,
											"end": 28004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27865,
											"end": 28004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27865,
											"end": 28004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27592,
											"end": 28011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27592,
											"end": 28011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28138,
											"end": 28142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28176,
											"end": 28178,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28165,
											"end": 28174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28161,
											"end": 28179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28153,
											"end": 28179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28153,
											"end": 28179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28189,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 28257,
											"end": 28258,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28246,
											"end": 28255,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28242,
											"end": 28259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28233,
											"end": 28239,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28189,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 28189,
											"end": 28260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28189,
											"end": 28260,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 28189,
											"end": 28260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28270,
											"end": 28342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 28338,
											"end": 28340,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28327,
											"end": 28336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28323,
											"end": 28341,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28314,
											"end": 28320,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28270,
											"end": 28342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 28270,
											"end": 28342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28270,
											"end": 28342,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 28270,
											"end": 28342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28017,
											"end": 28349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28476,
											"end": 28480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28514,
											"end": 28516,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28503,
											"end": 28512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28499,
											"end": 28517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28491,
											"end": 28517,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28491,
											"end": 28517,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28527,
											"end": 28598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 28595,
											"end": 28596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28584,
											"end": 28593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28580,
											"end": 28597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28571,
											"end": 28577,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28527,
											"end": 28598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 28527,
											"end": 28598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28527,
											"end": 28598,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 28527,
											"end": 28598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28608,
											"end": 28680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 28676,
											"end": 28678,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28665,
											"end": 28674,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28661,
											"end": 28679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28652,
											"end": 28658,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28608,
											"end": 28680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 28608,
											"end": 28680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28608,
											"end": 28680,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 28608,
											"end": 28680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28355,
											"end": 28687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"final project/GeneralApiMarketplaceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"apiIdCounter()": "099952c8",
							"apis(uint256)": "af6e5689",
							"approveAndPurchaseAPIAccess(uint256,uint256)": "2a222851",
							"approveAndPurchaseSubscription(uint256)": "9c4d9c0c",
							"cancelSubscription(uint256)": "21235083",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getUserBalance(address)": "47734892",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"owner()": "8da5cb5b",
							"providerBalances(address)": "28ac7f2c",
							"registerAPI(string,uint256,uint256,uint256)": "29206bd1",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"useAPIAccess(uint256)": "8e04d8d8",
							"withdrawEarnings()": "b73c6ce9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requests\",\"type\":\"uint256\"}],\"name\":\"APIAccessPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"APICallMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerRequest\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionPrice\",\"type\":\"uint256\"}],\"name\":\"APIRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"APIStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"apiId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SubscriptionPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apiIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apis\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchases\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requests\",\"type\":\"uint256\"}],\"name\":\"approveAndPurchaseAPIAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"approveAndPurchaseSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_subscriptionPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_subscriptionDuration\",\"type\":\"uint256\"}],\"name\":\"registerAPI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"useAPIAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"General API Marketplace Contract\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"General API Marketplace Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Created by Matt Lindborg UAT MS636 Week 7\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"final project/GeneralApiMarketplaceToken.sol\":\"GeneralApiMarketplaceToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"final project/GeneralApiMarketplaceToken.sol\":{\"keccak256\":\"0xd39e774185ef64f96e191ae7aea58aa0605c8fbab84dde9a44e234725c0b47e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4938211d79c72cc2c0d6c52dd4cecc6bbc3f81fdd4887defd2c07fea9512e08\",\"dweb:/ipfs/QmPUUNWcLt8cb5xU1sW9B8HeEiEGXP3GMrEVGvpQ3Hdx7b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 479,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1106,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1113,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "apiIdCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1117,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "providerBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1137,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "apis",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(API)1132_storage)"
							},
							{
								"astId": 1151,
								"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
								"label": "userUsages",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(UserUsage)1146_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserUsage)1146_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)",
								"numberOfBytes": "32",
								"value": "t_struct(UserUsage)1146_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(API)1132_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GeneralApiMarketplaceToken.API)",
								"numberOfBytes": "32",
								"value": "t_struct(API)1132_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(API)1132_storage": {
								"encoding": "inplace",
								"label": "struct GeneralApiMarketplaceToken.API",
								"members": [
									{
										"astId": 1119,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "provider",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1121,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1123,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "pricePerRequest",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1125,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "subscriptionPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1127,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "subscriptionDuration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1129,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "totalPurchases",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1131,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "isActive",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserUsage)1146_storage": {
								"encoding": "inplace",
								"label": "struct GeneralApiMarketplaceToken.UserUsage",
								"members": [
									{
										"astId": 1141,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "remainingRequests",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 1145,
										"contract": "final project/GeneralApiMarketplaceToken.sol:GeneralApiMarketplaceToken",
										"label": "subscriptionExpiry",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Created by Matt Lindborg UAT MS636 Week 7",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"ERC165": [
							1074
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1051,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1075,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1074,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1074,
								1086,
								378,
								1050
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1073
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC165": [
							1086
						],
						"IERC20": [
							611
						]
					},
					"id": 461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 469,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 465,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 611,
										"src": "590:6:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "598:7:2"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460,
								1086,
								611
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 460,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 460,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 460,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 460,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 460,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 460,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 461,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 465,
							"sourceUnit": 1087,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 463,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 612,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 474,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 472,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 477,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 475,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 479,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 533,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 493,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 498,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 503,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 533,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 533,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 528,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 526,
												"id": 530,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 533,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 534,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 545,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 554,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 611,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 611,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 611,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 611,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 611,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 611,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								545,
								554
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"SafeERC20": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 612,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 614,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 611,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 461,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 616,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 460,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 623,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 632,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 649,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 645,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1020,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 610,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 675,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 676,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 678,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 671,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 611,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1020,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2548:139:7",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "2558:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1020",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2612:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 696,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2581:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 588,
														"src": "2581:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2643:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 707,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2659:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "2674:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2630:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:7"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "2493:6:7"
													},
													"referencedDeclaration": 611,
													"src": "2493:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2507:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "2524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:7"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:7"
									},
									"scope": 1020,
									"src": "2462:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3453:370:7",
										"statements": [
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:7",
												"statements": [
													{
														"assignments": [
															726
														],
														"declarations": [
															{
																"constant": false,
																"id": 726,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 755,
																"src": "3487:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 735,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 731,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1020",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 729,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3545:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 727,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3514:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 588,
																"src": "3514:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 736,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3571:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 737,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "3590:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 746,
														"nodeType": "IfStatement",
														"src": "3567:160:7",
														"trueBody": {
															"id": 745,
															"nodeType": "Block",
															"src": "3609:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 740,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "3667:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 741,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "3676:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 742,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 722,
																				"src": "3694:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 739,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "3634:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 744,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 748,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3753:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 749,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3760:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 750,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3769:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 751,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "3788:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$611",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 747,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "3740:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3386:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "3386:6:7"
													},
													"referencedDeclaration": 611,
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3417:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:7"
									},
									"scope": 1020,
									"src": "3355:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "4477:303:7",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "4487:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 768,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4530:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 598,
															"src": "4530:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 774,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "4546:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "4555:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 776,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 770,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:7"
											},
											{
												"condition": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 780,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4602:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 781,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4609:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$611",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 779,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "4578:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "4573:201:7",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "4624:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4658:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 788,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "4680:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$611",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 598,
																				"src": "4680:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 790,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 763,
																						"src": "4696:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 792,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 786,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 784,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4638:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 795,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 797,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4743:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 798,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "4750:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 796,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "4723:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4422:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "4422:6:7"
													},
													"referencedDeclaration": 611,
													"src": "4422:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4436:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "4453:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:7"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:7"
									},
									"scope": 1020,
									"src": "4400:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "5227:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 817,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "5241:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5350:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "5354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 833,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "5361:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "5328:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "5328:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 844,
													"nodeType": "IfStatement",
													"src": "5323:117:7",
													"trueBody": {
														"id": 843,
														"nodeType": "Block",
														"src": "5368:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 839,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 808,
																					"src": "5422:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 837,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 836,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5389:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 842,
																"nodeType": "RevertStatement",
																"src": "5382:47:7"
															}
														]
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5237:203:7",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "5262:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 823,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5289:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 824,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "5296:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "5300:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 822,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5276:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5156:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5156:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5172:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5184:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "5199:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:7"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:7"
									},
									"scope": 1020,
									"src": "5124:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "5965:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 862,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "5979:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6102:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 878,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "6108:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 879,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6112:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 880,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "6119:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6076:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 437,
																"src": "6076:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 891,
													"nodeType": "IfStatement",
													"src": "6071:127:7",
													"trueBody": {
														"id": 890,
														"nodeType": "Block",
														"src": "6126:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 886,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "6180:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 884,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 883,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "6147:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 889,
																"nodeType": "RevertStatement",
																"src": "6140:47:7"
															}
														]
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "5975:223:7",
												"trueBody": {
													"id": 874,
													"nodeType": "Block",
													"src": "6000:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 868,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "6031:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 869,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "6038:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 870,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "6044:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 871,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "6048:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6014:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 873,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5843:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5843:8:7"
													},
													"referencedDeclaration": 460,
													"src": "5843:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5867:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5889:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5932:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:7"
									},
									"scope": 1020,
									"src": "5798:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "6971:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 907,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6985:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 921,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "7093:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "7097:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 923,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "7104:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 919,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "7072:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "7072:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 934,
													"nodeType": "IfStatement",
													"src": "7067:116:7",
													"trueBody": {
														"id": 933,
														"nodeType": "Block",
														"src": "7111:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 929,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "7165:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 927,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 926,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "7132:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 932,
																"nodeType": "RevertStatement",
																"src": "7125:47:7"
															}
														]
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "6981:202:7",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "7006:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 913,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "7033:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 914,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "7040:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 915,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "7044:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 912,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "7020:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6900:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "6900:8:7"
													},
													"referencedDeclaration": 460,
													"src": "6900:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6916:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6928:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6943:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:7"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:7"
									},
									"scope": 1020,
									"src": "6869:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "7756:650:7",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7766:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:7"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "7794:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 951,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:7",
													"nodeType": "YulBlock",
													"src": "7848:396:7",
													"statements": [
														{
															"nativeSrc": "7862:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:7"
																		},
																		"nativeSrc": "7882:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:7"
																		},
																		"nativeSrc": "7899:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:7"
																		},
																		"nativeSrc": "7916:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:7"
																},
																"nativeSrc": "7877:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:7",
																"nodeType": "YulBlock",
																"src": "7998:157:7",
																"statements": [
																	{
																		"nativeSrc": "8016:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:7"
																			},
																			"nativeSrc": "8027:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:7"
																					},
																					"nativeSrc": "8078:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:7"
																			},
																			"nativeSrc": "8055:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:7"
																		},
																		"nativeSrc": "8055:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:7"
																					},
																					"nativeSrc": "8124:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:7"
																			},
																			"nativeSrc": "8112:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:7"
																		},
																		"nativeSrc": "8112:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:7"
																},
																"nativeSrc": "7982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:7"
															},
															"nativeSrc": "7979:176:7",
															"nodeType": "YulIf",
															"src": "7979:176:7"
														},
														{
															"nativeSrc": "8168:30:7",
															"nodeType": "YulAssignment",
															"src": "8168:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:7"
																},
																"nativeSrc": "8182:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:7"
																}
															]
														},
														{
															"nativeSrc": "8211:23:7",
															"nodeType": "YulAssignment",
															"src": "8211:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:7"
																},
																"nativeSrc": "8226:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:7",
														"valueSize": 1
													},
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:7",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:7",
														"valueSize": 1
													},
													{
														"declaration": 950,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:7",
														"valueSize": 1
													},
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 952,
												"nodeType": "InlineAssembly",
												"src": "7823:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 953,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "8258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 964,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "8310:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 941,
																			"src": "8284:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$611",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 956,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "8254:146:7",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "8328:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 971,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "8382:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$611",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8349:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "8342:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7715:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "7715:6:7"
													},
													"referencedDeclaration": 611,
													"src": "7715:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7729:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:7"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:7"
									},
									"scope": 1020,
									"src": "7686:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8997:391:7",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9007:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:7"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9029:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:7"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9057:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:7",
													"nodeType": "YulBlock",
													"src": "9111:174:7",
													"statements": [
														{
															"nativeSrc": "9125:71:7",
															"nodeType": "YulAssignment",
															"src": "9125:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:7"
																		},
																		"nativeSrc": "9141:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:7"
																		},
																		"nativeSrc": "9158:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:7"
																		},
																		"nativeSrc": "9175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:7"
																},
																"nativeSrc": "9136:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:7"
																}
															]
														},
														{
															"nativeSrc": "9209:30:7",
															"nodeType": "YulAssignment",
															"src": "9209:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:7"
																},
																"nativeSrc": "9223:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:7"
																}
															]
														},
														{
															"nativeSrc": "9252:23:7",
															"nodeType": "YulAssignment",
															"src": "9252:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:7"
																},
																"nativeSrc": "9267:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:7",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:7",
														"valueSize": 1
													},
													{
														"declaration": 993,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:7",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:7",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 998,
												"nodeType": "InlineAssembly",
												"src": "9086:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 999,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "9301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "9313:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1011,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "9364:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1005,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "9339:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$611",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1003,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 988,
												"id": 1017,
												"nodeType": "Return",
												"src": "9294:87:7"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8941:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "8941:6:7"
													},
													"referencedDeclaration": 611,
													"src": "8941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8955:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8991:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:7"
									},
									"scope": 1020,
									"src": "8908:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1021,
							"src": "698:8692:7",
							"usedErrors": [
								623,
								632
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1050,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1037,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1039,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1050,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1045,
												"id": 1047,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1050,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1051,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1074
						],
						"IERC165": [
							1086
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1075,
							"sourceUnit": 1087,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1086,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "688:7:9"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074,
								1086
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1067,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1086_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1066,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1086",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1071,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1074,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1075,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1086
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1086,
							"linearizedBaseContracts": [
								1086
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1086,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"final project/GeneralApiMarketplaceToken.sol": {
				"ast": {
					"absolutePath": "final project/GeneralApiMarketplaceToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1050
						],
						"ERC165": [
							1074
						],
						"GeneralApiMarketplaceToken": [
							1663
						],
						"IAccessControl": [
							378
						],
						"IERC1363": [
							460
						],
						"IERC20": [
							611
						],
						"ReentrancyGuard": [
							533
						],
						"SafeERC20": [
							1020
						]
					},
					"id": 1664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 612,
							"src": "65:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 1021,
							"src": "122:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 534,
							"src": "188:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 296,
							"src": "251:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"542:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "542:15:11"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "542:15:11"
								},
								{
									"baseName": {
										"id": 1096,
										"name": "AccessControl",
										"nameLocations": [
											"559:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "559:13:11"
									},
									"id": 1097,
									"nodeType": "InheritanceSpecifier",
									"src": "559:13:11"
								}
							],
							"canonicalName": "GeneralApiMarketplaceToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1093,
								"nodeType": "StructuredDocumentation",
								"src": "311:190:11",
								"text": "Created by Matt Lindborg\n UAT MS636 Week 7\n @title General API Marketplace Token\n @dev General API Marketplace Contract\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 1663,
							"linearizedBaseContracts": [
								1663,
								295,
								1074,
								1086,
								378,
								1050,
								533
							],
							"name": "GeneralApiMarketplaceToken",
							"nameLocation": "512:26:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1101,
									"libraryName": {
										"id": 1098,
										"name": "SafeERC20",
										"nameLocations": [
											"585:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "585:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "579:27:11",
									"typeName": {
										"id": 1100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1099,
											"name": "IERC20",
											"nameLocations": [
												"599:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "599:6:11"
										},
										"referencedDeclaration": 611,
										"src": "599:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1104,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "668:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "644:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$611",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1103,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1102,
											"name": "IERC20",
											"nameLocations": [
												"644:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 611,
											"src": "644:6:11"
										},
										"referencedDeclaration": 611,
										"src": "644:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$611",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1106,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "746:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "731:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1111,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "829:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "805:60:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1107,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "805:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1109,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "852:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1108,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "842:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "842:23:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "099952c8",
									"id": 1113,
									"mutability": "mutable",
									"name": "apiIdCounter",
									"nameLocation": "914:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "899:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "28ac7f2c",
									"id": 1117,
									"mutability": "mutable",
									"name": "providerBalances",
									"nameLocation": "1005:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "970:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1116,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "978:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "970:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1115,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "989:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GeneralApiMarketplaceToken.API",
									"id": 1132,
									"members": [
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "provider",
											"nameLocation": "1092:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1084:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1118,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1084:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1117:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1110:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1120,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1110:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1123,
											"mutability": "mutable",
											"name": "pricePerRequest",
											"nameLocation": "1139:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1131:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1131:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "subscriptionPrice",
											"nameLocation": "1172:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1164:25:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1164:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "subscriptionDuration",
											"nameLocation": "1207:20:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1199:28:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1126,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1199:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "totalPurchases",
											"nameLocation": "1245:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1237:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1237:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1274:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1132,
											"src": "1269:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1130,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1269:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "API",
									"nameLocation": "1070:3:11",
									"nodeType": "StructDefinition",
									"scope": 1663,
									"src": "1063:226:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af6e5689",
									"id": 1137,
									"mutability": "mutable",
									"name": "apis",
									"nameLocation": "1367:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "1336:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
										"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API)"
									},
									"typeName": {
										"id": 1136,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1133,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1344:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1336:23:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
											"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1135,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1134,
												"name": "API",
												"nameLocations": [
													"1355:3:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1132,
												"src": "1355:3:11"
											},
											"referencedDeclaration": 1132,
											"src": "1355:3:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
												"typeString": "struct GeneralApiMarketplaceToken.API"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GeneralApiMarketplaceToken.UserUsage",
									"id": 1146,
									"members": [
										{
											"constant": false,
											"id": 1141,
											"mutability": "mutable",
											"name": "remainingRequests",
											"nameLocation": "1481:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 1146,
											"src": "1453:45:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1140,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1453:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "subscriptionExpiry",
											"nameLocation": "1536:18:11",
											"nodeType": "VariableDeclaration",
											"scope": 1146,
											"src": "1508:46:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1144,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1508:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserUsage",
									"nameLocation": "1433:9:11",
									"nodeType": "StructDefinition",
									"scope": 1663,
									"src": "1426:135:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1151,
									"mutability": "mutable",
									"name": "userUsages",
									"nameLocation": "1667:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1663,
									"src": "1629:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
										"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)"
									},
									"typeName": {
										"id": 1150,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1147,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1637:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1629:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
											"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1149,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1148,
												"name": "UserUsage",
												"nameLocations": [
													"1648:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1146,
												"src": "1648:9:11"
											},
											"referencedDeclaration": 1146,
											"src": "1648:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserUsage_$1146_storage_ptr",
												"typeString": "struct GeneralApiMarketplaceToken.UserUsage"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "aeb4fdd5a376011a12e318bf03de0006c5c806196fb1d14f787be471267cb8dc",
									"id": 1163,
									"name": "APIRegistered",
									"nameLocation": "1704:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1743:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1727:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1774:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1758:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1799:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1792:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1792:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"mutability": "mutable",
												"name": "pricePerRequest",
												"nameLocation": "1821:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1813:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "subscriptionPrice",
												"nameLocation": "1854:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1846:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:160:11"
									},
									"src": "1698:180:11"
								},
								{
									"anonymous": false,
									"eventSelector": "651496919c95942a8a70db2e93544280a0491b14565245385a8026dcb32e923b",
									"id": 1171,
									"name": "APIAccessPurchased",
									"nameLocation": "1889:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1933:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1917:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "1963:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1947:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "requests",
												"nameLocation": "1986:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1978:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:93:11"
									},
									"src": "1883:118:11"
								},
								{
									"anonymous": false,
									"eventSelector": "cca1381d7195cd2569f7fc5ea523be6bbec35a1421ab82b215b1651f7b22157e",
									"id": 1179,
									"name": "APICallMade",
									"nameLocation": "2012:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2049:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2033:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "2079:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2063:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2102:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2094:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:94:11"
									},
									"src": "2006:112:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b",
									"id": 1185,
									"name": "TokensWithdrawn",
									"nameLocation": "2129:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "2161:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2145:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2179:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2171:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:42:11"
									},
									"src": "2123:64:11"
								},
								{
									"anonymous": false,
									"eventSelector": "33446694866e808b8c5250f584345f59832e7a6f29e30bf7a8ead78441940d9e",
									"id": 1191,
									"name": "APIStatusUpdated",
									"nameLocation": "2198:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "2231:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2215:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "2243:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2238:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2238:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:38:11"
									},
									"src": "2192:61:11"
								},
								{
									"anonymous": false,
									"eventSelector": "6d458fa94cc5b30d7877bed127c2029f98bc0cbc4634dc7789b6bc804fbdae03",
									"id": 1199,
									"name": "SubscriptionPurchased",
									"nameLocation": "2264:21:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2311:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2295:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "2341:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2325:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2364:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2356:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:93:11"
									},
									"src": "2258:121:11"
								},
								{
									"anonymous": false,
									"eventSelector": "06aa12c0ad65927b4a753d119c26e490d3c4a4e11cb631b43131a709dc1e5917",
									"id": 1205,
									"name": "SubscriptionCancelled",
									"nameLocation": "2390:21:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2428:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2412:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "2450:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2434:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:45:11"
									},
									"src": "2384:73:11"
								},
								{
									"anonymous": false,
									"eventSelector": "93c496f36ecab5f5583f216646cac3acb12a63aeacddb1a9251ceb81f0ee36e7",
									"id": 1213,
									"name": "RefundIssued",
									"nameLocation": "2468:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2506:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2490:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "apiId",
												"nameLocation": "2536:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2520:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2559:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2551:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:91:11"
									},
									"src": "2462:110:11"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "2605:229:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "2631:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$611",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2623:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2623:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2623:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2650:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2642:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1224,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2642:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2642:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2623:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2654:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2615:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2615:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "2615:63:11"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "2688:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1233,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2696:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$611",
															"typeString": "contract IERC20"
														}
													},
													"src": "2688:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "2688:14:11"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "2712:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1237,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2720:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2724:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2720:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2712:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2712:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2752:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2772:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2776:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2772:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1241,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2741:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "2741:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2804:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2816:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2820:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2816:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1247,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2793:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2793:34:11"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2597:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2590:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$611",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1214,
														"name": "IERC20",
														"nameLocations": [
															"2590:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 611,
														"src": "2590:6:11"
													},
													"referencedDeclaration": 611,
													"src": "2590:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$611",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2589:15:11"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2605:0:11"
									},
									"scope": 1663,
									"src": "2578:256:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "2878:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1259,
																		"name": "apis",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "2896:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
																			"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API storage ref)"
																		}
																	},
																	"id": 1261,
																	"indexExpression": {
																		"id": 1260,
																		"name": "_apiId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2901:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2896:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_API_$1132_storage",
																		"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2909:8:11",
																"memberName": "provider",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1119,
																"src": "2896:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2921:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2925:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2921:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2896:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865204150492070726f7669646572",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2933:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf714c8a7a1fc7cf8ffe8e0acc804d86803f16c72f9fe8be1ea7c6bceeda8ae7",
																"typeString": "literal_string \"Not the API provider\""
															},
															"value": "Not the API provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf714c8a7a1fc7cf8ffe8e0acc804d86803f16c72f9fe8be1ea7c6bceeda8ae7",
																"typeString": "literal_string \"Not the API provider\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2888:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2888:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2888:68:11"
											},
											{
												"id": 1269,
												"nodeType": "PlaceholderStatement",
												"src": "2966:1:11"
											}
										]
									},
									"id": 1271,
									"name": "onlyProvider",
									"nameLocation": "2849:12:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "2870:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "2862:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:16:11"
									},
									"src": "2840:134:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "3001:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1275,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "3027:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1276,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3039:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3043:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3039:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1274,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "3019:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3019:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3052:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3011:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "3011:66:11"
											},
											{
												"id": 1282,
												"nodeType": "PlaceholderStatement",
												"src": "3087:1:11"
											}
										]
									},
									"id": 1284,
									"name": "onlyAdmin",
									"nameLocation": "2989:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:2:11"
									},
									"src": "2980:115:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "3275:732:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1298,
																			"name": "_name",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "3299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3293:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1296,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3293:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3293:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3306:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3293:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3315:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3293:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206e616d652063616e6e6f7420626520656d707479",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3318:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																"typeString": "literal_string \"API name cannot be empty\""
															},
															"value": "API name cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1c372847f0683104c97a48f2d76bfebe5e55158e1e6b0f2ebe1d5665788d633",
																"typeString": "literal_string \"API name cannot be empty\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "3285:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1307,
																	"name": "_pricePerRequest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "3376:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3395:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3376:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1310,
																	"name": "_subscriptionPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "3400:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3421:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3400:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3376:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652070726963696e67206f7074696f6e207265717569726564",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c",
																"typeString": "literal_string \"At least one pricing option required\""
															},
															"value": "At least one pricing option required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bd391e9ac4887c2abbf67573a75161cefa8188f7408a62d5a88ec36735a4b3c",
																"typeString": "literal_string \"At least one pricing option required\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3355:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3355:129:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "3355:129:11"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "apiId",
														"nameLocation": "3503:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "3495:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3495:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3511:14:11",
													"subExpression": {
														"id": 1319,
														"name": "apiIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "3511:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3495:30:11"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1322,
															"name": "apis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "3535:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
																"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API storage ref)"
															}
														},
														"id": 1324,
														"indexExpression": {
															"id": 1323,
															"name": "apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "3540:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3535:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_storage",
															"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1326,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3577:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3581:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3577:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1328,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "3607:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1329,
																"name": "_pricePerRequest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "3643:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1330,
																"name": "_subscriptionPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "3692:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1331,
																"name": "_subscriptionDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "3746:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3797:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3822:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1325,
															"name": "API",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3549:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_API_$1132_storage_ptr_$",
																"typeString": "type(struct GeneralApiMarketplaceToken.API storage pointer)"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3567:8:11",
															"3601:4:11",
															"3626:15:11",
															"3673:17:11",
															"3724:20:11",
															"3781:14:11",
															"3812:8:11"
														],
														"names": [
															"provider",
															"name",
															"pricePerRequest",
															"subscriptionPrice",
															"subscriptionDuration",
															"totalPurchases",
															"isActive"
														],
														"nodeType": "FunctionCall",
														"src": "3549:288:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_memory_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.API memory"
														}
													},
													"src": "3535:302:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_API_$1132_storage",
														"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "3535:302:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1338,
															"name": "apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "3880:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3899:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3903:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3899:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1341,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "3923:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1342,
															"name": "_pricePerRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "3942:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1343,
															"name": "_subscriptionPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "3972:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1337,
														"name": "APIRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3853:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256,uint256)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3853:147:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "EmitStatement",
												"src": "3848:152:11"
											}
										]
									},
									"functionSelector": "29206bd1",
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerAPI",
									"nameLocation": "3110:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "3145:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3131:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3131:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_pricePerRequest",
												"nameLocation": "3168:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3160:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "_subscriptionPrice",
												"nameLocation": "3202:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3194:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "_subscriptionDuration",
												"nameLocation": "3238:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3230:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:144:11"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:0:11"
									},
									"scope": 1663,
									"src": "3101:906:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "4094:585:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "4108:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1356,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4117:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4108:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4131:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4100:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4100:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1362,
																"name": "_requests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "4166:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4178:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4166:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374207075726368617365206174206c65617374206f6e652072657175657374",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4181:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d",
																"typeString": "literal_string \"Must purchase at least one request\""
															},
															"value": "Must purchase at least one request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a71fc55311410b5ed5ede7d48917df88e9b229d9d03521b5aa44e52e0ccf12d",
																"typeString": "literal_string \"Must purchase at least one request\""
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4158:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "4158:60:11"
											},
											{
												"assignments": [
													1370
												],
												"declarations": [
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "4237:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1430,
														"src": "4225:15:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.API"
														},
														"typeName": {
															"id": 1369,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1368,
																"name": "API",
																"nameLocations": [
																	"4225:3:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1132,
																"src": "4225:3:11"
															},
															"referencedDeclaration": 1132,
															"src": "4225:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.API"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"baseExpression": {
														"id": 1371,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4243:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API storage ref)"
														}
													},
													"id": 1373,
													"indexExpression": {
														"id": 1372,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4248:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4243:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_API_$1132_storage",
														"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4225:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1376,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "4269:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4273:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "4269:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4283:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4261:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4261:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "4261:42:11"
											},
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "totalCost",
														"nameLocation": "4318:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1430,
														"src": "4310:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4310:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1383,
															"name": "api",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4330:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4334:15:11",
														"memberName": "pricePerRequest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "4330:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1385,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "4352:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4330:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4310:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4424:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4428:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4424:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1395,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4444:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1663",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1663",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																],
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4436:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4436:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4436:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "totalCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "4451:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1388,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "4401:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4407:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "4401:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "4401:60:11"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1400,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4468:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1403,
																"indexExpression": {
																	"expression": {
																		"id": 1401,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4479:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4483:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4479:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4468:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4491:17:11",
															"memberName": "remainingRequests",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1141,
															"src": "4468:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1406,
														"indexExpression": {
															"id": 1405,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "4509:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4468:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1407,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "4520:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4468:61:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "4468:61:11"
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1410,
															"name": "providerBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "4535:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1413,
														"indexExpression": {
															"expression": {
																"id": 1411,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "4552:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4556:8:11",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "4552:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4535:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1414,
														"name": "totalCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "4569:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4535:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "4535:43:11"
											},
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1417,
															"name": "api",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4585:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4589:14:11",
														"memberName": "totalPurchases",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "4585:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1420,
														"name": "_requests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "4607:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4585:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "4585:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4646:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4650:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4646:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "4658:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1427,
															"name": "_requests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "4666:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1423,
														"name": "APIAccessPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4627:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "EmitStatement",
												"src": "4622:54:11"
											}
										]
									},
									"functionSelector": "2a222851",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndPurchaseAPIAccess",
									"nameLocation": "4022:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "4058:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4050:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "_requests",
												"nameLocation": "4074:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4066:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4049:35:11"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4094:0:11"
									},
									"scope": 1663,
									"src": "4013:666:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "4746:523:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "4760:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1438,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "4769:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4783:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4752:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "4752:52:11"
											},
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "4823:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "4811:15:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.API"
														},
														"typeName": {
															"id": 1444,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1443,
																"name": "API",
																"nameLocations": [
																	"4811:3:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1132,
																"src": "4811:3:11"
															},
															"referencedDeclaration": 1132,
															"src": "4811:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.API"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"baseExpression": {
														"id": 1446,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4829:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API storage ref)"
														}
													},
													"id": 1448,
													"indexExpression": {
														"id": 1447,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "4834:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4829:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_API_$1132_storage",
														"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4811:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1451,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "4855:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4859:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "4855:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4869:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4847:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4847:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "4847:42:11"
											},
											{
												"assignments": [
													1457
												],
												"declarations": [
													{
														"constant": false,
														"id": 1457,
														"mutability": "mutable",
														"name": "totalCost",
														"nameLocation": "4904:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "4896:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4896:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"expression": {
														"id": 1458,
														"name": "api",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4916:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4920:17:11",
													"memberName": "subscriptionPrice",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1125,
													"src": "4916:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4896:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5000:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5004:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5000:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5020:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1663",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeneralApiMarketplaceToken_$1663",
																		"typeString": "contract GeneralApiMarketplaceToken"
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5012:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5012:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5012:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "totalCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "5027:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1461,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "4977:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4983:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "4977:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4977:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "4977:60:11"
											},
											{
												"expression": {
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1473,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "5044:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1476,
																"indexExpression": {
																	"expression": {
																		"id": 1474,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5055:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5059:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5055:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5044:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5067:18:11",
															"memberName": "subscriptionExpiry",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "5044:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1479,
														"indexExpression": {
															"id": 1478,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "5086:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5044:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1480,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5096:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5102:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5096:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1482,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "5114:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5118:20:11",
															"memberName": "subscriptionDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "5114:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5096:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5044:94:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "5044:94:11"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1487,
															"name": "providerBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "5144:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1490,
														"indexExpression": {
															"expression": {
																"id": 1488,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "5161:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5165:8:11",
															"memberName": "provider",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "5161:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5144:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1491,
														"name": "totalCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5178:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5144:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "5144:43:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5221:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5225:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5221:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "5233:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1498,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "5241:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5245:20:11",
															"memberName": "subscriptionDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "5241:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "SubscriptionPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "5199:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "EmitStatement",
												"src": "5194:72:11"
											}
										]
									},
									"functionSelector": "9c4d9c0c",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndPurchaseSubscription",
									"nameLocation": "4690:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "4729:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "4721:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:16:11"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:11"
									},
									"scope": 1663,
									"src": "4681:588:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "5318:394:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1509,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "5332:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1510,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "5341:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5332:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5355:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5324:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "5324:52:11"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "api",
														"nameLocation": "5395:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "5383:15:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
															"typeString": "struct GeneralApiMarketplaceToken.API"
														},
														"typeName": {
															"id": 1516,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1515,
																"name": "API",
																"nameLocations": [
																	"5383:3:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1132,
																"src": "5383:3:11"
															},
															"referencedDeclaration": 1132,
															"src": "5383:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																"typeString": "struct GeneralApiMarketplaceToken.API"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"baseExpression": {
														"id": 1518,
														"name": "apis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "5401:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_API_$1132_storage_$",
															"typeString": "mapping(uint256 => struct GeneralApiMarketplaceToken.API storage ref)"
														}
													},
													"id": 1520,
													"indexExpression": {
														"id": 1519,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5406:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5401:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_API_$1132_storage",
														"typeString": "struct GeneralApiMarketplaceToken.API storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5383:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1523,
																"name": "api",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5427:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_API_$1132_storage_ptr",
																	"typeString": "struct GeneralApiMarketplaceToken.API storage pointer"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5431:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "5427:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "415049206973206e6f7420616374697665",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															},
															"value": "API is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e7e64ee0871f654a0fdc23be00463ef0405be081ba26b6a128c25111daf6cc1",
																"typeString": "literal_string \"API is not active\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5419:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "5419:42:11"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "5476:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "5468:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5468:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1530,
																"name": "userUsages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "5488:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																	"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																}
															},
															"id": 1533,
															"indexExpression": {
																"expression": {
																	"id": 1531,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5499:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5503:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5499:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5488:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5511:17:11",
														"memberName": "remainingRequests",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1141,
														"src": "5488:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1536,
													"indexExpression": {
														"id": 1535,
														"name": "_apiId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5529:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5488:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5468:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1539,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "5550:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5562:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5550:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072656d61696e696e67207265717565737473",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5565:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90",
																"typeString": "literal_string \"No remaining requests\""
															},
															"value": "No remaining requests"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c113a6f383ca854511999069debb555d3c7d15129b3c0455a0ac5f16b083fd90",
																"typeString": "literal_string \"No remaining requests\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5542:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5542:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "5542:47:11"
											},
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1545,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "5596:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1548,
																"indexExpression": {
																	"expression": {
																		"id": 1546,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5607:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5611:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5607:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5596:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5619:17:11",
															"memberName": "remainingRequests",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1141,
															"src": "5596:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1551,
														"indexExpression": {
															"id": 1550,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5637:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5596:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5648:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5596:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "5596:53:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1556,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5673:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5677:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5673:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1558,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5685:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1559,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5693:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5699:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5693:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1555,
														"name": "APICallMade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "5661:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5661:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "EmitStatement",
												"src": "5656:53:11"
											}
										]
									},
									"functionSelector": "8e04d8d8",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "useAPIAccess",
									"nameLocation": "5280:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "5301:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "5293:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5293:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:16:11"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5318:0:11"
									},
									"scope": 1663,
									"src": "5271:441:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "5768:264:11",
										"statements": [
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5786:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "5778:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5778:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"baseExpression": {
														"id": 1571,
														"name": "providerBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5796:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1574,
													"indexExpression": {
														"expression": {
															"id": 1572,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5813:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5817:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5813:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5796:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5778:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1577,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "5842:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5852:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5842:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206561726e696e677320746f207769746864726177",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a",
																"typeString": "literal_string \"No earnings to withdraw\""
															},
															"value": "No earnings to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a",
																"typeString": "literal_string \"No earnings to withdraw\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5834:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "5834:47:11"
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1583,
															"name": "providerBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "5892:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1586,
														"indexExpression": {
															"expression": {
																"id": 1584,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5909:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5913:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5909:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5892:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5923:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5892:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "5892:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1593,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5953:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5957:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5953:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1595,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "5965:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1590,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5934:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5940:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "5934:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$611_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$611_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "5934:39:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6005:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6009:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6005:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1601,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "6017:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1598,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "5989:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5989:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "EmitStatement",
												"src": "5984:41:11"
											}
										]
									},
									"functionSelector": "b73c6ce9",
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1566,
												"name": "nonReentrant",
												"nameLocations": [
													"5755:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "5755:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5755:12:11"
										}
									],
									"name": "withdrawEarnings",
									"nameLocation": "5727:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5743:2:11"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5768:0:11"
									},
									"scope": 1663,
									"src": "5718:314:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "6091:349:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "_apiId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "6109:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1612,
																"name": "apiIdCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "6118:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6109:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41504920646f6573206e6f74206578697374",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6132:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															},
															"value": "API does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14119b3a30ed6009bf406a9f851826136a5ee684f93c06776b12d3026787f0e9",
																"typeString": "literal_string \"API does not exist\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6101:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6101:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "6101:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1618,
																			"name": "userUsages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "6184:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																				"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																			}
																		},
																		"id": 1621,
																		"indexExpression": {
																			"expression": {
																				"id": 1619,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6195:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6199:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6195:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6184:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																			"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6207:18:11",
																	"memberName": "subscriptionExpiry",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1145,
																	"src": "6184:41:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1624,
																"indexExpression": {
																	"id": 1623,
																	"name": "_apiId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "6226:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6184:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1625,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6236:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6242:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6236:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6184:67:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2061637469766520737562736372697074696f6e",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6265:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
																"typeString": "literal_string \"No active subscription\""
															},
															"value": "No active subscription"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
																"typeString": "literal_string \"No active subscription\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:136:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "6163:136:11"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1631,
																	"name": "userUsages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "6310:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserUsage_$1146_storage_$",
																		"typeString": "mapping(address => struct GeneralApiMarketplaceToken.UserUsage storage ref)"
																	}
																},
																"id": 1634,
																"indexExpression": {
																	"expression": {
																		"id": 1632,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6321:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6325:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6321:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6310:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserUsage_$1146_storage",
																	"typeString": "struct GeneralApiMarketplaceToken.UserUsage storage ref"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6333:18:11",
															"memberName": "subscriptionExpiry",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "6310:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1637,
														"indexExpression": {
															"id": 1636,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6352:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6310:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1638,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6362:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6368:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6362:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6310:67:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "6310:67:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6414:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6418:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6414:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "_apiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6426:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1642,
														"name": "SubscriptionCancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6392:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "EmitStatement",
												"src": "6387:46:11"
											}
										]
									},
									"functionSelector": "21235083",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "6047:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "_apiId",
												"nameLocation": "6074:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6066:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:16:11"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6091:0:11"
									},
									"scope": 1663,
									"src": "6038:402:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "6517:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "6550:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "6534:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$611",
																"typeString": "contract IERC20"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6540:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "6534:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1660,
												"nodeType": "Return",
												"src": "6527:29:11"
											}
										]
									},
									"functionSelector": "47734892",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBalance",
									"nameLocation": "6455:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6478:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "6470:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:15:11"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "6508:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6507:9:11"
									},
									"scope": 1663,
									"src": "6446:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1664,
							"src": "503:6062:11",
							"usedErrors": [
								305,
								308,
								623
							],
							"usedEvents": [
								317,
								326,
								335,
								1163,
								1171,
								1179,
								1185,
								1191,
								1199,
								1205,
								1213
							]
						}
					],
					"src": "32:6534:11"
				},
				"id": 11
			}
		}
	}
}